{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Begunok3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Begunok3 = ({\n  audioUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const waveformData = useRef([]);\n  const animationRef = useRef();\n  const [audioData, setAudioData] = useState([]);\n  const [audioDuration, setAudioDuration] = useState(0);\n  let channelNumber = 1;\n  const drawWaveform = useCallback(() => {\n    if (!canvasRef.current || audioData.length === 0 || !audioDuration) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 5;\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const dataLength = audioData.length;\n    const visibleData = Math.floor(width * (dataLength / audioDuration) * zoomLevel); // Calculate visible data points based on zoom level\n    const startIndex = Math.floor(currentTime / audioDuration * (dataLength - visibleData));\n    if (isExpanded && channelNumber === 2) {\n      // Отрисовка двух каналов\n      // (Since we're using full data, you'll need to adjust the logic \n      // for multi-channel audio if you have it)\n      // ... (Implement logic for multiple channels if needed)\n    } else {\n      // Отрисовка общей дорожки\n      ctx.fillStyle = '#b7e1dd';\n      ctx.strokeStyle = '#b7e1dd';\n      const barWidth = width / visibleData;\n      for (let i = 0; i < visibleData; i++) {\n        const dataIndex = startIndex + i;\n        if (dataIndex >= dataLength) break;\n        const x = i * barWidth;\n        const barHeight = audioData[dataIndex] * (height - padding * 2);\n        ctx.beginPath();\n        ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n        ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n        ctx.stroke();\n      }\n\n      // Draw progress\n      const progressWidth = currentTime / audioDuration * width;\n      ctx.fillStyle = '#357F78';\n      ctx.strokeStyle = '#357F78';\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(0, 0, progressWidth, height);\n      ctx.clip();\n      for (let i = 0; i < visibleData; i++) {\n        const dataIndex = startIndex + i;\n        if (dataIndex >= dataLength) break;\n        const x = i * barWidth;\n        const barHeight = audioData[dataIndex] * (height - padding * 2);\n        ctx.beginPath();\n        ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n        ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n        ctx.stroke();\n      }\n      ctx.restore();\n\n      // Draw playhead (vertical line)\n      ctx.beginPath();\n      ctx.strokeStyle = '#357F78';\n      ctx.lineWidth = 1;\n      ctx.moveTo(progressWidth, 0);\n      ctx.lineTo(progressWidth, height);\n      ctx.stroke();\n    }\n  }, [isExpanded, currentTime, zoomLevel, audioDuration, channelNumber, audioData]);\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n\n      // Use the full audio data instead of downsampling\n      const filteredData = Array.from(channelData);\n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n    fetchAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    var _canvas$parentElement;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = ((_canvas$parentElement = canvas.parentElement) === null || _canvas$parentElement === void 0 ? void 0 : _canvas$parentElement.clientWidth) || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    drawWaveform();\n  }, [drawWaveform]);\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left + scrollPosition;\n    const clickProgress = x / (rect.width * zoomLevel);\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n  const handleScroll = e => {\n    if (isExpanded) {\n      const newScrollPosition = scrollPosition + e.deltaY;\n      const maxScroll = canvasRef.current.width * (zoomLevel - 1);\n      setScrollPosition(Math.max(0, Math.min(newScrollPosition, maxScroll)));\n    }\n  };\n  const smoothZoom = (targetZoom, duration = 300) => {\n    const startZoom = zoomLevel;\n    const startTime = performance.now();\n    const animate = currentTime => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeProgress = progress * (2 - progress); // easeOutQuad\n\n      const newZoom = startZoom + (targetZoom - startZoom) * easeProgress;\n      setZoomLevel(newZoom);\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n    requestAnimationFrame(animate);\n  };\n  const zoomIn = () => {\n    const newZoom = Math.min(zoomLevel * 2, 64);\n    smoothZoom(newZoom);\n  };\n  const zoomOut = () => {\n    const newZoom = Math.max(zoomLevel / 2, 1);\n    smoothZoom(newZoom);\n  };\n  const togglePlay = () => {\n    var _audioRef$current;\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      audioRef.current.play();\n    } else {\n      var _audioRef$current2;\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoomLevel(1);\n    setScrollPosition(0);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpand,\n      children: isExpanded ? 'Collapse' : 'Expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '98%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onClick: handleCanvasClick,\n        onWheel: handleScroll,\n        style: {\n          width: '100%',\n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Zoom: \", zoomLevel.toFixed(2), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(Begunok3, \"smFIiQNDwY8SJiaHo0nWaqGgQ8c=\");\n_c = Begunok3;\nexport default Begunok3;\nvar _c;\n$RefreshReg$(_c, \"Begunok3\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","Begunok3","audioUrl","_s","isPlaying","setIsPlaying","isExpanded","setIsExpanded","currentTime","setCurrentTime","duration","setDuration","zoomLevel","setZoomLevel","scrollPosition","setScrollPosition","audioRef","canvasRef","waveformData","animationRef","audioData","setAudioData","audioDuration","setAudioDuration","channelNumber","drawWaveform","current","length","canvas","ctx","getContext","dpr","window","devicePixelRatio","padding","width","offsetWidth","height","scale","clearRect","dataLength","visibleData","Math","floor","startIndex","fillStyle","strokeStyle","barWidth","i","dataIndex","x","barHeight","beginPath","lineTo","stroke","progressWidth","save","rect","clip","restore","lineWidth","moveTo","fetchAudio","response","fetch","arrayBuffer","audioContext","AudioContext","webkitAudioContext","audioBuffer","decodeAudioData","channelData","getChannelData","filteredData","Array","from","_canvas$parentElement","parentWidth","parentElement","clientWidth","canvasWidth","style","handleCanvasClick","e","getBoundingClientRect","clientX","left","clickProgress","handleScroll","newScrollPosition","deltaY","maxScroll","max","min","smoothZoom","targetZoom","startZoom","startTime","performance","now","animate","elapsed","progress","easeProgress","newZoom","requestAnimationFrame","zoomIn","zoomOut","togglePlay","_audioRef$current","paused","play","_audioRef$current2","pause","toggleExpand","formatTime","time","minutes","seconds","toString","padStart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","ref","src","onWheel","cursor","toFixed","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Begunok3.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst Begunok3: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const waveformData = useRef<number[]>([]);\n  const animationRef = useRef<number>();\n\n  const [audioData, setAudioData] = useState<number[]>([]);\n  const [audioDuration, setAudioDuration] = useState(0);\n\n  let channelNumber:Number = 1\n\n  const drawWaveform = useCallback(() => {\n    if (!canvasRef.current || audioData.length === 0 || !audioDuration) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d')!;\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 5;\n\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const dataLength = audioData.length;\n    const visibleData = Math.floor(width * (dataLength / audioDuration) * zoomLevel); // Calculate visible data points based on zoom level\n    const startIndex = Math.floor((currentTime / audioDuration) * (dataLength - visibleData));\n\n    if (isExpanded && channelNumber === 2) {\n      // Отрисовка двух каналов\n      // (Since we're using full data, you'll need to adjust the logic \n      // for multi-channel audio if you have it)\n      // ... (Implement logic for multiple channels if needed)\n    } else {\n      // Отрисовка общей дорожки\n      ctx.fillStyle = '#b7e1dd';\n      ctx.strokeStyle = '#b7e1dd';\n\n      const barWidth = width / visibleData;\n\n      for (let i = 0; i < visibleData; i++) {\n        const dataIndex = startIndex + i;\n        if (dataIndex >= dataLength) break;\n\n        const x = i * barWidth;\n        const barHeight = audioData[dataIndex] * (height - padding * 2);\n\n        ctx.beginPath();\n        ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n        ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n        ctx.stroke();\n      }\n\n      // Draw progress\n      const progressWidth = (currentTime / audioDuration) * width;\n      ctx.fillStyle = '#357F78';\n      ctx.strokeStyle = '#357F78';\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(0, 0, progressWidth, height);\n      ctx.clip();\n\n      for (let i = 0; i < visibleData; i++) {\n        const dataIndex = startIndex + i;\n        if (dataIndex >= dataLength) break;\n\n        const x = i * barWidth;\n        const barHeight = audioData[dataIndex] * (height - padding * 2);\n\n        ctx.beginPath();\n        ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n        ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n\n      // Draw playhead (vertical line)\n      ctx.beginPath();\n      ctx.strokeStyle = '#357F78';\n      ctx.lineWidth = 1;\n      ctx.moveTo(progressWidth, 0);\n      ctx.lineTo(progressWidth, height);\n      ctx.stroke();\n    }\n  }, [isExpanded, currentTime, zoomLevel, audioDuration, channelNumber, audioData]);\n\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      \n      // Use the full audio data instead of downsampling\n      const filteredData = Array.from(channelData);\n      \n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n\n    fetchAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = canvas.parentElement?.clientWidth || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n\n    drawWaveform();\n  }, [drawWaveform]);\n\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left + scrollPosition;\n    const clickProgress = x / (rect.width * zoomLevel);\n\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n\n  const handleScroll = (e: React.WheelEvent<HTMLCanvasElement>) => {\n    if (isExpanded) {\n      const newScrollPosition = scrollPosition + e.deltaY;\n      const maxScroll = canvasRef.current!.width * (zoomLevel - 1);\n      setScrollPosition(Math.max(0, Math.min(newScrollPosition, maxScroll)));\n    }\n  };\n\n  const smoothZoom = (targetZoom: number, duration: number = 300) => {\n    const startZoom = zoomLevel;\n    const startTime = performance.now();\n\n    const animate = (currentTime: number) => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeProgress = progress * (2 - progress); // easeOutQuad\n\n      const newZoom = startZoom + (targetZoom - startZoom) * easeProgress;\n      setZoomLevel(newZoom);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    requestAnimationFrame(animate);\n  };\n\n  const zoomIn = () => {\n    const newZoom = Math.min(zoomLevel * 2, 64);\n    smoothZoom(newZoom);\n  };\n\n  const zoomOut = () => {\n    const newZoom = Math.max(zoomLevel / 2, 1);\n    smoothZoom(newZoom);\n  };\n\n  const togglePlay = () => {\n    if (audioRef.current?.paused) {\n      audioRef.current.play();\n    } else {\n      audioRef.current?.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoomLevel(1);\n    setScrollPosition(0);\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-player\">\n      <button onClick={togglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n      <button onClick={toggleExpand}>\n        {isExpanded ? 'Collapse' : 'Expand'}\n      </button>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '98%' }}>\n        <audio ref={audioRef} src={audioUrl} />\n        <canvas\n          ref={canvasRef}\n          onClick={handleCanvasClick}\n          onWheel={handleScroll}\n          style={{\n            width: '100%',\n            height: isExpanded ? '300px' : '80px',\n            cursor: 'pointer'\n          }}\n        />\n      </div>\n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n      {isExpanded && (\n        <div>\n          <button onClick={zoomIn}>Zoom In</button>\n          <button onClick={zoomOut}>Zoom Out</button>\n          <span>Zoom: {zoomLevel.toFixed(2)}x</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Begunok3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}