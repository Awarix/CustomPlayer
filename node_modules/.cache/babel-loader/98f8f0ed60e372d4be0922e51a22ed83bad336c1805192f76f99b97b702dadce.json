{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/AudioWaveform.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WaveformContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  position: relative;\n  background-color: #f1f3f4;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n_c = WaveformContainer;\nconst WaveformCanvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n`;\n_c2 = WaveformCanvas;\nconst ProgressOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: ${props => props.progress}%;\n  background-color: rgba(255, 85, 0, 0.2);\n  pointer-events: none;\n`;\n_c3 = ProgressOverlay;\nconst AudioWaveform = ({\n  audioBuffer,\n  currentTime,\n  duration,\n  onSeek\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    drawWaveform();\n  }, [audioBuffer]);\n  const drawWaveform = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const width = canvas.width;\n    const height = canvas.height;\n    const channelData = audioBuffer.getChannelData(0);\n    const step = Math.ceil(channelData.length / width);\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    for (let i = 0; i < width; i++) {\n      const index = Math.floor(i * step);\n      const x = i;\n      const y = (1 - channelData[index]) * height / 2;\n      ctx.moveTo(x, height / 2);\n      ctx.lineTo(x, y);\n    }\n    ctx.strokeStyle = '#999';\n    ctx.stroke();\n  };\n  const handleClick = e => {\n    if (!containerRef.current) return;\n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const seekTime = x / rect.width * duration;\n    onSeek(seekTime);\n  };\n  return /*#__PURE__*/_jsxDEV(WaveformContainer, {\n    ref: containerRef,\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(WaveformCanvas, {\n      ref: canvasRef,\n      width: 800,\n      height: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressOverlay, {\n      progress: currentTime / duration * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioWaveform, \"+xMqLuoGzbrZrbRmx5ZxmPZsVhQ=\");\n_c4 = AudioWaveform;\nexport default AudioWaveform;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"WaveformContainer\");\n$RefreshReg$(_c2, \"WaveformCanvas\");\n$RefreshReg$(_c3, \"ProgressOverlay\");\n$RefreshReg$(_c4, \"AudioWaveform\");","map":{"version":3,"names":["React","useRef","useEffect","styled","jsxDEV","_jsxDEV","WaveformContainer","div","_c","WaveformCanvas","canvas","_c2","ProgressOverlay","props","progress","_c3","AudioWaveform","audioBuffer","currentTime","duration","onSeek","_s","canvasRef","containerRef","drawWaveform","current","ctx","getContext","width","height","channelData","getChannelData","step","Math","ceil","length","clearRect","beginPath","i","index","floor","x","y","moveTo","lineTo","strokeStyle","stroke","handleClick","e","rect","getBoundingClientRect","clientX","left","seekTime","ref","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/AudioWaveform.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst WaveformContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  position: relative;\n  background-color: #f1f3f4;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nconst WaveformCanvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ProgressOverlay = styled.div<{ progress: number }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: ${props => props.progress}%;\n  background-color: rgba(255, 85, 0, 0.2);\n  pointer-events: none;\n`;\n\ninterface AudioWaveformProps {\n  audioBuffer: AudioBuffer;\n  currentTime: number;\n  duration: number;\n  onSeek: (time: number) => void;\n}\n\nconst AudioWaveform: React.FC<AudioWaveformProps> = ({ audioBuffer, currentTime, duration, onSeek }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    drawWaveform();\n  }, [audioBuffer]);\n\n  const drawWaveform = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n    const channelData = audioBuffer.getChannelData(0);\n    const step = Math.ceil(channelData.length / width);\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    for (let i = 0; i < width; i++) {\n      const index = Math.floor(i * step);\n      const x = i;\n      const y = (1 - channelData[index]) * height / 2;\n      \n      ctx.moveTo(x, height / 2);\n      ctx.lineTo(x, y);\n    }\n\n    ctx.strokeStyle = '#999';\n    ctx.stroke();\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!containerRef.current) return;\n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const seekTime = (x / rect.width) * duration;\n    onSeek(seekTime);\n  };\n\n  return (\n    <WaveformContainer ref={containerRef} onClick={handleClick}>\n      <WaveformCanvas ref={canvasRef} width={800} height={100} />\n      <ProgressOverlay progress={(currentTime / duration) * 100} />\n    </WaveformContainer>\n  );\n};\n\nexport default AudioWaveform;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}