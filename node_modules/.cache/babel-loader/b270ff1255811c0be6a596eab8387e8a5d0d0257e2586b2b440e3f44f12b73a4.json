{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/AudioPlayerW1.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayerW1 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [audioBuffer, setAudioBuffer] = useState(null);\n  const [zoom, setZoom] = useState(1); // Масштабирование\n  const [scrollX, setScrollX] = useState(0); // Прокрутка\n\n  useEffect(() => {\n    // Загрузка и декодирование аудио файла\n    const loadAudio = async () => {\n      const response = await fetch(\"/rus.wav\");\n      const arrayBuffer = await response.arrayBuffer();\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      const decodedData = await audioCtx.decodeAudioData(arrayBuffer);\n      setAudioBuffer(decodedData);\n    };\n    loadAudio();\n  }, []);\n  useEffect(() => {\n    if (!canvasRef.current || !audioBuffer) return;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (!ctx) return;\n    const {\n      width,\n      height\n    } = canvasRef.current;\n    const data = audioBuffer.getChannelData(0); // Получаем данные для одного канала\n\n    const step = Math.ceil(data.length / (width * zoom)); // Шаг для выборки данных из аудио\n    const amp = height / 2; // Амплитуда, используемая для масштабирования волны\n\n    // Прокрутка\n    const start = Math.floor(scrollX * step);\n    const end = Math.min(start + width * step, data.length);\n    ctx.clearRect(0, 0, width, height); // Очистка канваса\n\n    ctx.beginPath();\n    for (let i = 0; i < width; i++) {\n      const sliceStart = start + i * step;\n      const sliceEnd = Math.min(sliceStart + step, data.length);\n      if (sliceStart >= data.length) break;\n      let min = 1.0;\n      let max = -1.0;\n      for (let j = sliceStart; j < sliceEnd; j++) {\n        const value = data[j];\n        if (value < min) min = value;\n        if (value > max) max = value;\n      }\n      ctx.lineTo(i, (1 + min) * amp);\n      ctx.lineTo(i, (1 + max) * amp);\n    }\n    ctx.stroke();\n  }, [audioBuffer, zoom, scrollX]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setZoom(zoom * 2),\n        children: \"\\u041F\\u0440\\u0438\\u0431\\u043B\\u0438\\u0437\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setZoom(zoom / 2),\n        children: \"\\u041E\\u0442\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: audioBuffer ? Math.max(0, audioBuffer.length / (zoom * 100)) : 100,\n        value: scrollX,\n        onChange: e => setScrollX(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n_s(AudioPlayerW1, \"I5CpnoHQacSwIxRAvKbygy6iVM8=\");\n_c = AudioPlayerW1;\nexport default AudioPlayerW1;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayerW1\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","AudioPlayerW1","_s","canvasRef","audioBuffer","setAudioBuffer","zoom","setZoom","scrollX","setScrollX","loadAudio","response","fetch","arrayBuffer","audioCtx","window","AudioContext","webkitAudioContext","decodedData","decodeAudioData","current","ctx","getContext","width","height","data","getChannelData","step","Math","ceil","length","amp","start","floor","end","min","clearRect","beginPath","i","sliceStart","sliceEnd","max","j","value","lineTo","stroke","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/AudioPlayerW1.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst AudioPlayerW1: React.FC = () => {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const [audioBuffer, setAudioBuffer] = useState<AudioBuffer | null>(null);\n    const [zoom, setZoom] = useState(1); // Масштабирование\n    const [scrollX, setScrollX] = useState(0); // Прокрутка\n  \n    useEffect(() => {\n      // Загрузка и декодирование аудио файла\n      const loadAudio = async () => {\n        const response = await fetch(\"/rus.wav\");\n        const arrayBuffer = await response.arrayBuffer();\n        const audioCtx = new (window.AudioContext || (window as any).webkitAudioContext)();\n        const decodedData = await audioCtx.decodeAudioData(arrayBuffer);\n        setAudioBuffer(decodedData);\n      };\n  \n      loadAudio();\n    }, []);\n  \n    useEffect(() => {\n      if (!canvasRef.current || !audioBuffer) return;\n  \n      const ctx = canvasRef.current.getContext(\"2d\");\n      if (!ctx) return;\n  \n      const { width, height } = canvasRef.current;\n      const data = audioBuffer.getChannelData(0); // Получаем данные для одного канала\n  \n      const step = Math.ceil(data.length / (width * zoom)); // Шаг для выборки данных из аудио\n      const amp = height / 2; // Амплитуда, используемая для масштабирования волны\n  \n      // Прокрутка\n      const start = Math.floor(scrollX * step);\n      const end = Math.min(start + width * step, data.length);\n  \n      ctx.clearRect(0, 0, width, height); // Очистка канваса\n  \n      ctx.beginPath();\n      for (let i = 0; i < width; i++) {\n        const sliceStart = start + i * step;\n        const sliceEnd = Math.min(sliceStart + step, data.length);\n  \n        if (sliceStart >= data.length) break;\n  \n        let min = 1.0;\n        let max = -1.0;\n  \n        for (let j = sliceStart; j < sliceEnd; j++) {\n          const value = data[j];\n          if (value < min) min = value;\n          if (value > max) max = value;\n        }\n  \n        ctx.lineTo(i, (1 + min) * amp);\n        ctx.lineTo(i, (1 + max) * amp);\n      }\n      ctx.stroke();\n    }, [audioBuffer, zoom, scrollX]);\n  \n    return (\n      <div>\n        <canvas ref={canvasRef} width={800} height={200} />\n        <div>\n          <button onClick={() => setZoom(zoom * 2)}>Приблизить</button>\n          <button onClick={() => setZoom(zoom / 2)}>Отдалить</button>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max={audioBuffer ? Math.max(0, audioBuffer.length / (zoom * 100)) : 100}\n            value={scrollX}\n            onChange={(e) => setScrollX(Number(e.target.value))}\n          />\n        </div>\n      </div>\n    );\n  };\n  \n\nexport default AudioPlayerW1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}