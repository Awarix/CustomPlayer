{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Friday/NewCustom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCustom = ({\n  audioUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const progressRef = useRef(null);\n  const waveformData = useRef([]);\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 10000;\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum += Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n    drawWaveform();\n  };\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n    if (!canvas || !ctx || waveformData.current.length === 0) return;\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = 80 * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const barWidth = canvas.width / waveformData.current.length * zoomLevel;\n    const visibleBars = Math.floor(canvas.width / barWidth);\n    const startIndex = Math.floor(scrollPosition * (waveformData.current.length - visibleBars));\n    ctx.fillStyle = '#D1D6DA';\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (canvas.height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x, canvas.height / 2 + padding);\n      ctx.lineTo(x, canvas.height / 2 + padding - barHeight / 2);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x, canvas.height / 2 + padding);\n      ctx.lineTo(x, canvas.height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n\n    // Отрисовка прогресса\n    const progressWidth = (currentTime / duration - scrollPosition) * canvas.width * zoomLevel;\n    ctx.fillStyle = '#1976D2';\n    ctx.fillRect(0, 0, progressWidth, canvas.height);\n  }, [currentTime, duration, zoomLevel, scrollPosition]);\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = (scrollPosition + x / rect.width / zoomLevel) * duration;\n    audioRef.current.currentTime = clickProgress;\n    setCurrentTime(clickProgress);\n  };\n  const handleScroll = e => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n  const zoomIn = () => {\n    setZoomLevel(prevZoom => Math.min(prevZoom * 2, 64));\n  };\n  const zoomOut = () => {\n    setZoomLevel(prevZoom => Math.max(prevZoom / 2, 1));\n  };\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current.duration);\n        generateWaveformData();\n      });\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current.currentTime);\n        if (isPlaying && containerRef.current) {\n          const containerWidth = containerRef.current.offsetWidth;\n          const progress = audioRef.current.currentTime / duration;\n          const newScrollPosition = Math.max(0, Math.min((progress * duration - containerWidth / (2 * zoomLevel)) / duration, 1));\n          setScrollPosition(newScrollPosition);\n        }\n      });\n    }\n  }, [isPlaying, duration, zoomLevel]);\n  const animationFrameRef = useRef();\n  const updateProgressBar = useCallback(() => {\n    if (progressRef.current && containerRef.current && audioRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const progress = (audioRef.current.currentTime / duration - scrollPosition) * zoomLevel;\n      const position = Math.max(0, Math.min(progress * containerWidth, containerWidth));\n      progressRef.current.style.transform = `translateX(${position}px)`;\n    }\n    animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n  }, [duration, scrollPosition, zoomLevel]);\n  useEffect(() => {\n    animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [updateProgressBar]);\n  useEffect(() => {\n    const handleResize = () => {\n      drawWaveform();\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [drawWaveform, updateProgressBar]);\n  useEffect(() => {\n    drawWaveform();\n    updateProgressBar();\n  }, [currentTime, zoomLevel, scrollPosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        var _audioRef$current;\n        if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n          audioRef.current.play();\n          setIsPlaying(true);\n        } else {\n          var _audioRef$current2;\n          (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n          setIsPlaying(false);\n        }\n      },\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsExpanded(!isExpanded),\n      children: isExpanded ? 'Collapse' : 'Expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"waveform-container\",\n      style: {\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onClick: handleCanvasClick,\n        style: {\n          width: '100%',\n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: progressRef,\n          className: \"progress-handle\",\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '2px',\n            height: '100%',\n            backgroundColor: 'red',\n            cursor: 'ew-resize',\n            pointerEvents: 'auto',\n            transform: 'translateX(0)',\n            transition: 'transform 0.1s linear'\n          }\n          // onMouseDown={handleProgressBarDrag}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Zoom: \", zoomLevel.toFixed(1), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: scrollPosition,\n        onChange: handleScroll,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCustom, \"PxJemd+O6HvPiMgZJBFuovJ3lXs=\");\n_c = NewCustom;\nconst formatTime = time => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n};\nexport default NewCustom;\nvar _c;\n$RefreshReg$(_c, \"NewCustom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","NewCustom","audioUrl","_s","isPlaying","setIsPlaying","isExpanded","setIsExpanded","currentTime","setCurrentTime","duration","setDuration","zoomLevel","setZoomLevel","scrollPosition","setScrollPosition","audioRef","canvasRef","containerRef","progressRef","waveformData","generateWaveformData","current","audioContext","window","AudioContext","webkitAudioContext","response","fetch","arrayBuffer","audioBuffer","decodeAudioData","rawData","getChannelData","samples","blockSize","Math","floor","length","filteredData","i","blockStart","sum","j","abs","push","multiplier","pow","max","map","n","drawWaveform","canvas","ctx","getContext","dpr","devicePixelRatio","padding","width","offsetWidth","height","scale","clearRect","barWidth","visibleBars","startIndex","fillStyle","dataIndex","x","barHeight","beginPath","moveTo","lineTo","stroke","progressWidth","fillRect","handleCanvasClick","e","rect","getBoundingClientRect","clientX","left","clickProgress","handleScroll","parseFloat","target","value","zoomIn","prevZoom","min","zoomOut","addEventListener","containerWidth","progress","newScrollPosition","animationFrameRef","updateProgressBar","position","style","transform","requestAnimationFrame","cancelAnimationFrame","handleResize","removeEventListener","className","children","onClick","_audioRef$current","paused","play","_audioRef$current2","pause","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","overflow","cursor","top","pointerEvents","backgroundColor","transition","formatTime","toFixed","type","step","onChange","_c","time","minutes","seconds","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Friday/NewCustom.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst NewCustom: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const progressRef = useRef<HTMLDivElement>(null);\n\n  const waveformData = useRef<number[]>([]);\n\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n\n    const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 10000;\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum += Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n\n    drawWaveform();\n  };\n\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    if (!canvas || !ctx || waveformData.current.length === 0) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = 80 * dpr;\n\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const barWidth = (canvas.width / waveformData.current.length) * zoomLevel;\n    const visibleBars = Math.floor(canvas.width / barWidth);\n    const startIndex = Math.floor(scrollPosition * (waveformData.current.length - visibleBars));\n\n    ctx.fillStyle = '#D1D6DA';\n\n    for (let i = 0; i < visibleBars; i++) {\n        const dataIndex = startIndex + i;\n        if (dataIndex >= waveformData.current.length) break;\n\n        const x = i * barWidth;\n        const barHeight = waveformData.current[dataIndex] * (canvas.height - padding * 2);\n\n        ctx.beginPath();\n        ctx.moveTo(x, canvas.height / 2 + padding);\n        ctx.lineTo(x, canvas.height / 2 + padding - barHeight / 2);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(x, canvas.height / 2 + padding);\n        ctx.lineTo(x, canvas.height / 2 + padding + barHeight / 2);\n        ctx.stroke();\n    }\n\n    // Отрисовка прогресса\n    const progressWidth = ((currentTime / duration) - scrollPosition) * canvas.width * zoomLevel;\n    ctx.fillStyle = '#1976D2';\n\n    ctx.fillRect(0, 0, progressWidth, canvas.height);\n  }, [currentTime, duration, zoomLevel, scrollPosition]);\n\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = (scrollPosition + (x / rect.width) / zoomLevel) * duration;\n\n    audioRef.current.currentTime = clickProgress;\n    setCurrentTime(clickProgress);\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n\n  const zoomIn = () => {\n    setZoomLevel(prevZoom => Math.min(prevZoom * 2, 64));\n  };\n\n  const zoomOut = () => {\n    setZoomLevel(prevZoom => Math.max(prevZoom / 2, 1));\n  };\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current!.duration);\n        generateWaveformData();\n      });\n\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current!.currentTime);\n\n        if (isPlaying && containerRef.current) {\n          const containerWidth = containerRef.current.offsetWidth;\n          const progress = audioRef.current!.currentTime / duration;\n          const newScrollPosition = Math.max(\n            0,\n            Math.min((progress * duration - containerWidth / (2 * zoomLevel)) / duration, 1)\n          );\n          setScrollPosition(newScrollPosition);\n        }\n      });\n    }\n  }, [isPlaying, duration, zoomLevel]);\n\n  const animationFrameRef = useRef<number>();\n\n  const updateProgressBar = useCallback(() => {\n    if (progressRef.current && containerRef.current && audioRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const progress = ((audioRef.current.currentTime / duration) - scrollPosition) * zoomLevel;\n      const position = Math.max(0, Math.min(progress * containerWidth, containerWidth));\n      progressRef.current.style.transform = `translateX(${position}px)`;\n    }\n    animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n  }, [duration, scrollPosition, zoomLevel]);\n\n  useEffect(() => {\n    animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [updateProgressBar]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      drawWaveform();\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [drawWaveform, updateProgressBar]);\n\n  useEffect(() => {\n    drawWaveform();\n    updateProgressBar();\n  }, [currentTime, zoomLevel, scrollPosition]);\n\n  return (\n    <div className=\"audio-player\">\n      <button \n        onClick={() => {\n          if (audioRef.current?.paused) {\n            audioRef.current.play();\n            setIsPlaying(true);\n          } else {\n            audioRef.current?.pause();\n            setIsPlaying(false);\n          }\n        }}\n      >\n        {isPlaying ? 'Pause' : 'Play'}\n      </button>\n      <button onClick={() => setIsExpanded(!isExpanded)}>\n        {isExpanded ? 'Collapse' : 'Expand'}\n      </button>\n      <audio ref={audioRef} src={audioUrl} />\n      <div \n        ref={containerRef}\n        className=\"waveform-container\" \n        style={{ position: 'relative', overflow: 'hidden' }}\n      >\n        <canvas \n          ref={canvasRef} \n          onClick={handleCanvasClick}\n          style={{ \n            width: '100%', \n            height: isExpanded ? '300px' : '80px',\n            cursor: 'pointer'\n          }} \n        />\n        <div \n          className=\"progress-bar\" \n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            pointerEvents: 'none'\n          }}\n        >\n          <div \n            ref={progressRef}\n            className=\"progress-handle\"\n            style={{\n              position: 'absolute',\n              top: '0',\n              left: '0',\n              width: '2px',\n              height: '100%',\n              backgroundColor: 'red',\n              cursor: 'ew-resize',\n              pointerEvents: 'auto',\n              transform: 'translateX(0)',\n              transition: 'transform 0.1s linear'\n            }}\n            // onMouseDown={handleProgressBarDrag}\n          />\n        </div>\n      </div>\n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n      {isExpanded && (\n        <div>\n          <button onClick={zoomIn}>Zoom In</button>\n          <button onClick={zoomOut}>Zoom Out</button>\n          <span>Zoom: {zoomLevel.toFixed(1)}x</span>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.01\"\n            value={scrollPosition}\n            onChange={handleScroll}\n            style={{ width: '100%' }}\n          />\n        </div>\n      )}\n    </div>\n    );\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\nexport default NewCustom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}