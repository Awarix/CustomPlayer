{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/AudioPlayer.tsx\",\n  _s = $RefreshSig$();\n// AudioPlayer.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useAudio } from './AudioContext';\nimport styled from 'styled-components';\nimport AudioWaveform from './AudioWaveform';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContainer = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n_c = PlayerContainer;\nconst ControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n_c2 = ControlsContainer;\nconst PlayButton = styled.button`\n  background-color: #ff5500;\n  color: white;\n  border: none;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #ff7700;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(255, 85, 0, 0.5);\n  }\n`;\n_c3 = PlayButton;\nconst TimeDisplay = styled.div`\n  font-size: 14px;\n  color: #333;\n`;\n_c4 = TimeDisplay;\nconst AudioInfo = styled.div`\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n`;\n_c5 = AudioInfo;\nconst AudioPlayer = () => {\n  _s();\n  const {\n    currentAudioUrl,\n    segments,\n    keywords\n  } = useAudio();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  console.log(segments, keywords);\n  useEffect(() => {\n    if (currentAudioUrl && audioRef.current) {\n      audioRef.current.src = currentAudioUrl;\n      audioRef.current.load();\n    }\n  }, [currentAudioUrl]);\n  const togglePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n  const handleSeek = time => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = time;\n      setCurrentTime(time);\n    }\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onTimeUpdate: handleTimeUpdate,\n      onLoadedMetadata: handleLoadedMetadata,\n      onEnded: () => setIsPlaying(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AudioInfo, {\n      children: currentAudioUrl ? currentAudioUrl.split('/').pop() : 'No audio selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ControlsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PlayButton, {\n        onClick: togglePlayPause,\n        children: isPlaying ? '❚❚' : '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TimeDisplay, {\n        children: [formatTime(currentTime), \" / \", formatTime(duration)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AudioWaveform, {\n      audioUrl: currentAudioUrl,\n      currentTime: currentTime,\n      duration: duration,\n      isPlaying: isPlaying,\n      onSeek: handleSeek,\n      onPlayPause: togglePlayPause,\n      segments: segments,\n      keywords: keywords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"cXcZ6SRSvKQqpB6N9OryMmUwnMc=\", false, function () {\n  return [useAudio];\n});\n_c6 = AudioPlayer;\nexport default AudioPlayer;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PlayerContainer\");\n$RefreshReg$(_c2, \"ControlsContainer\");\n$RefreshReg$(_c3, \"PlayButton\");\n$RefreshReg$(_c4, \"TimeDisplay\");\n$RefreshReg$(_c5, \"AudioInfo\");\n$RefreshReg$(_c6, \"AudioPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useAudio","styled","AudioWaveform","jsxDEV","_jsxDEV","PlayerContainer","div","_c","ControlsContainer","_c2","PlayButton","button","_c3","TimeDisplay","_c4","AudioInfo","_c5","AudioPlayer","_s","currentAudioUrl","segments","keywords","audioRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","console","log","current","src","load","togglePlayPause","pause","play","handleTimeUpdate","handleLoadedMetadata","handleSeek","time","formatTime","minutes","Math","floor","seconds","toString","padStart","children","ref","onTimeUpdate","onLoadedMetadata","onEnded","fileName","_jsxFileName","lineNumber","columnNumber","split","pop","onClick","audioUrl","onSeek","onPlayPause","_c6","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/AudioPlayer.tsx"],"sourcesContent":["// AudioPlayer.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useAudio } from './AudioContext';\nimport styled from 'styled-components';\nimport AudioWaveform from './AudioWaveform';\n\nconst PlayerContainer = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst PlayButton = styled.button`\n  background-color: #ff5500;\n  color: white;\n  border: none;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #ff7700;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(255, 85, 0, 0.5);\n  }\n`;\n\nconst TimeDisplay = styled.div`\n  font-size: 14px;\n  color: #333;\n`;\n\nconst AudioInfo = styled.div`\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n`;\n\n\nconst AudioPlayer: React.FC = () => {\n    const { currentAudioUrl, segments, keywords } = useAudio();\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n\n    console.log (segments, keywords)\n  \n    useEffect(() => {\n      if (currentAudioUrl && audioRef.current) {\n        audioRef.current.src = currentAudioUrl;\n        audioRef.current.load();\n      }\n    }, [currentAudioUrl]);\n  \n    const togglePlayPause = () => {\n      if (audioRef.current) {\n        if (isPlaying) {\n          audioRef.current.pause();\n        } else {\n          audioRef.current.play();\n        }\n        setIsPlaying(!isPlaying);\n      }\n    };\n  \n    const handleTimeUpdate = () => {\n      if (audioRef.current) {\n        setCurrentTime(audioRef.current.currentTime);\n      }\n    };\n  \n    const handleLoadedMetadata = () => {\n      if (audioRef.current) {\n        setDuration(audioRef.current.duration);\n      }\n    };\n  \n    const handleSeek = (time: number) => {\n      if (audioRef.current) {\n        audioRef.current.currentTime = time;\n        setCurrentTime(time);\n      }\n    };\n  \n    const formatTime = (time: number) => {\n      const minutes = Math.floor(time / 60);\n      const seconds = Math.floor(time % 60);\n      return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    };\n    \n    return (\n        <PlayerContainer>\n          <audio\n            ref={audioRef}\n            onTimeUpdate={handleTimeUpdate}\n            onLoadedMetadata={handleLoadedMetadata}\n            onEnded={() => setIsPlaying(false)}\n          />\n          <AudioInfo>\n            {currentAudioUrl ? currentAudioUrl.split('/').pop() : 'No audio selected'}\n          </AudioInfo>\n          <ControlsContainer>\n            <PlayButton onClick={togglePlayPause}>\n              {isPlaying ? '❚❚' : '▶'}\n            </PlayButton>\n            <TimeDisplay>\n              {formatTime(currentTime)} / {formatTime(duration)}\n            </TimeDisplay>\n          </ControlsContainer>\n          <AudioWaveform\n            audioUrl={currentAudioUrl}\n            currentTime={currentTime}\n            duration={duration}\n            isPlaying={isPlaying}\n            onSeek={handleSeek}\n            onPlayPause={togglePlayPause}\n            segments={segments}\n            keywords={keywords}\n          />\n        </PlayerContainer>\n      );\n    };\n    \n    export default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}