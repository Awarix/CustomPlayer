{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/components/ToolbarButtons.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToolbarButtons = ({\n  editor\n}) => {\n  _s();\n  const rteRef = useRef(null);\n  const [htmlResult, setHtmlResult] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aditionalButtons\",\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      gap: '1rem',\n      margin: '1rem 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: () => console.log('clicked'),\n      children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: () => console.log('clicked'),\n      children: \"\\u041A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: () => {\n        var _rteRef$current$getHT, _rteRef$current;\n        return setHtmlResult((_rteRef$current$getHT = (_rteRef$current = rteRef.current) === null || _rteRef$current === void 0 ? void 0 : _rteRef$current.getHTML()) !== null && _rteRef$current$getHT !== void 0 ? _rteRef$current$getHT : \"\");\n      },\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(ToolbarButtons, \"a2CRKLPOl7VRxQVD/0sOQU2wBQg=\");\n_c = ToolbarButtons;\nexport default ToolbarButtons;\nvar _c;\n$RefreshReg$(_c, \"ToolbarButtons\");","map":{"version":3,"names":["React","useRef","useState","Button","jsxDEV","_jsxDEV","ToolbarButtons","editor","_s","rteRef","htmlResult","setHtmlResult","className","style","display","flexDirection","alignItems","justifyContent","gap","margin","children","variant","color","size","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_rteRef$current$getHT","_rteRef$current","current","getHTML","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/components/ToolbarButtons.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Button, Slider } from '@material-ui/core';\nimport { Editor, useEditor, type Editor as refEditor} from \"@tiptap/react\";\n\nconst ToolbarButtons = ({ editor }: { editor: Editor | null }) => {\n  const rteRef = useRef<refEditor | null>(null);\n  const [htmlResult, setHtmlResult] = useState(\"\");\n\n  return (\n    <div className='aditionalButtons' \n    style={{\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center', \n        justifyContent: 'flex-end', \n        gap: '1rem',\n        margin: '1rem 0'\n        }}>\n      <Button\n      variant='outlined'\n      color='primary'\n      size='small'\n      onClick={() => console.log('clicked')}\n      >\n        Скачать\n      </Button>\n      <Button\n      variant='outlined'\n      color='primary'\n      size='small'\n      onClick={() => console.log('clicked')}\n      >\n        Копировать\n      </Button>\n      <Button\n      variant='contained'\n      color='primary'\n      size='small'\n      onClick={() => setHtmlResult(rteRef.current?.getHTML() ?? \"\")}\n      >\n        Сохранить\n      </Button>\n      </div>\n  )\n}\n\nexport default ToolbarButtons"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,MAAM,QAAgB,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAMC,MAAM,GAAGR,MAAM,CAAmB,IAAI,CAAC;EAC7C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,oBACEG,OAAA;IAAKO,SAAS,EAAC,kBAAkB;IACjCC,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,UAAU;MAC1BC,GAAG,EAAE,MAAM;MACXC,MAAM,EAAE;IACR,CAAE;IAAAC,QAAA,gBACJf,OAAA,CAACF,MAAM;MACPkB,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,SAAS;MACfC,IAAI,EAAC,OAAO;MACZC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAE;MAAAN,QAAA,EACrC;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA,CAACF,MAAM;MACPkB,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,SAAS;MACfC,IAAI,EAAC,OAAO;MACZC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAE;MAAAN,QAAA,EACrC;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA,CAACF,MAAM;MACPkB,OAAO,EAAC,WAAW;MACnBC,KAAK,EAAC,SAAS;MACfC,IAAI,EAAC,OAAO;MACZC,OAAO,EAAEA,CAAA;QAAA,IAAAO,qBAAA,EAAAC,eAAA;QAAA,OAAMrB,aAAa,EAAAoB,qBAAA,IAAAC,eAAA,GAACvB,MAAM,CAACwB,OAAO,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,OAAO,CAAC,CAAC,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;MAAA,CAAC;MAAAX,QAAA,EAC7D;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ,CAAC;AAAAtB,EAAA,CAxCKF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AA0CpB,eAAeA,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}