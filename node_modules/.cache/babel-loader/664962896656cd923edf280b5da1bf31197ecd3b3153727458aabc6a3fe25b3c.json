{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/AudioPlayer.tsx\",\n  _s = $RefreshSig$();\n// AudioPlayer.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useAudio } from './AudioContext';\nimport styled from 'styled-components';\nimport AudioWaveform from './AudioWaveform';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContainer = styled.div`\n  background-color: #2c3e50;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = PlayerContainer;\nconst PlayButton = styled.button`\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.5);\n  }\n`;\n_c2 = PlayButton;\nconst Canvas = styled.canvas`\n  margin-top: 20px;\n  background-color: #34495e;\n  border-radius: 4px;\n`;\nconst AudioPlayer = () => {\n  _s();\n  const {\n    currentAudioUrl\n  } = useAudio();\n  const audioContextRef = useRef(null);\n  const sourceNodeRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioBuffer, setAudioBuffer] = useState(null);\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    return () => {\n      var _audioContextRef$curr;\n      (_audioContextRef$curr = audioContextRef.current) === null || _audioContextRef$curr === void 0 ? void 0 : _audioContextRef$curr.close();\n    };\n  }, []);\n\n  // Добавим отображение текущего аудиофайла\n  const AudioInfo = styled.div`\n    color: white;\n    margin-bottom: 10px;\n    font-size: 14px;\n    `;\n  useEffect(() => {\n    if (currentAudioUrl && audioContextRef.current) {\n      loadAudio(currentAudioUrl);\n    }\n  }, [currentAudioUrl]);\n  const loadAudio = async url => {\n    if (!audioContextRef.current) return;\n    try {\n      const response = await fetch(url);\n      const arrayBuffer = await response.arrayBuffer();\n      const decodedBuffer = await audioContextRef.current.decodeAudioData(arrayBuffer);\n      setAudioBuffer(decodedBuffer);\n    } catch (error) {\n      console.error('Error loading audio:', error);\n    }\n  };\n  const playAudio = () => {\n    if (!audioContextRef.current || !audioBuffer) return;\n    if (sourceNodeRef.current) {\n      sourceNodeRef.current.stop();\n    }\n    sourceNodeRef.current = audioContextRef.current.createBufferSource();\n    sourceNodeRef.current.buffer = audioBuffer;\n    sourceNodeRef.current.connect(audioContextRef.current.destination);\n    sourceNodeRef.current.start();\n    setIsPlaying(true);\n  };\n  const stopAudio = () => {\n    if (sourceNodeRef.current) {\n      sourceNodeRef.current.stop();\n      setIsPlaying(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(AudioInfo, {\n      children: currentAudioUrl ? `Now playing: ${currentAudioUrl.split('/').pop()}` : 'No audio selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n      onClick: isPlaying ? stopAudio : playAudio,\n      children: isPlaying ? 'Stop' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this), audioBuffer && /*#__PURE__*/_jsxDEV(AudioWaveform, {\n      audioBuffer: audioBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioPlayer, \"g/Pb1QrIAesXIXKxjdeUOlzgXnQ=\", false, function () {\n  return [useAudio];\n});\n_c3 = AudioPlayer;\nexport default AudioPlayer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PlayerContainer\");\n$RefreshReg$(_c2, \"PlayButton\");\n$RefreshReg$(_c3, \"AudioPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useAudio","styled","AudioWaveform","jsxDEV","_jsxDEV","PlayerContainer","div","_c","PlayButton","button","_c2","Canvas","canvas","AudioPlayer","_s","currentAudioUrl","audioContextRef","sourceNodeRef","canvasRef","isPlaying","setIsPlaying","audioBuffer","setAudioBuffer","current","window","AudioContext","webkitAudioContext","_audioContextRef$curr","close","AudioInfo","loadAudio","url","response","fetch","arrayBuffer","decodedBuffer","decodeAudioData","error","console","playAudio","stop","createBufferSource","buffer","connect","destination","start","stopAudio","children","split","pop","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c3","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/AudioPlayer.tsx"],"sourcesContent":["// AudioPlayer.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useAudio } from './AudioContext';\nimport styled from 'styled-components';\nimport AudioWaveform from './AudioWaveform';\n\nconst PlayerContainer = styled.div`\n  background-color: #2c3e50;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst PlayButton = styled.button`\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.5);\n  }\n`;\n\nconst Canvas = styled.canvas`\n  margin-top: 20px;\n  background-color: #34495e;\n  border-radius: 4px;\n`;\n\n\nconst AudioPlayer: React.FC = () => {\n  const { currentAudioUrl } = useAudio();\n  const audioContextRef = useRef<AudioContext | null>(null);\n  const sourceNodeRef = useRef<AudioBufferSourceNode | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioBuffer, setAudioBuffer] = useState<AudioBuffer | null>(null);\n\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)();\n    return () => {\n      audioContextRef.current?.close();\n    };\n  }, []);\n\n  // Добавим отображение текущего аудиофайла\n    const AudioInfo = styled.div`\n    color: white;\n    margin-bottom: 10px;\n    font-size: 14px;\n    `;\n\n    useEffect(() => {\n        if (currentAudioUrl && audioContextRef.current) {\n          loadAudio(currentAudioUrl);\n        }\n      }, [currentAudioUrl]);\n    \n      const loadAudio = async (url: string) => {\n        if (!audioContextRef.current) return;\n    \n        try {\n          const response = await fetch(url);\n          const arrayBuffer = await response.arrayBuffer();\n          const decodedBuffer = await audioContextRef.current.decodeAudioData(arrayBuffer);\n          setAudioBuffer(decodedBuffer);\n        } catch (error) {\n          console.error('Error loading audio:', error);\n        }\n      };\n    \n      const playAudio = () => {\n        if (!audioContextRef.current || !audioBuffer) return;\n    \n        if (sourceNodeRef.current) {\n          sourceNodeRef.current.stop();\n        }\n    \n        sourceNodeRef.current = audioContextRef.current.createBufferSource();\n        sourceNodeRef.current.buffer = audioBuffer;\n        sourceNodeRef.current.connect(audioContextRef.current.destination);\n        sourceNodeRef.current.start();\n        setIsPlaying(true);\n      };\n    \n      const stopAudio = () => {\n        if (sourceNodeRef.current) {\n          sourceNodeRef.current.stop();\n          setIsPlaying(false);\n        }\n      };\n    \n      return (\n        <PlayerContainer>\n          <AudioInfo>\n            {currentAudioUrl ? `Now playing: ${currentAudioUrl.split('/').pop()}` : 'No audio selected'}\n          </AudioInfo>\n          <PlayButton onClick={isPlaying ? stopAudio : playAudio}>\n            {isPlaying ? 'Stop' : 'Play'}\n          </PlayButton>\n          {audioBuffer && <AudioWaveform audioBuffer={audioBuffer} />}\n        </PlayerContainer>\n      );\n    };\n    \n    export default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}