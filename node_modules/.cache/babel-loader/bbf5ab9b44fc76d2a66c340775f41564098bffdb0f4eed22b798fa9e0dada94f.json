{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/v3/AudioPlayerV3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AudioPlayerV3 = ({\n  tracks\n}) => {\n  _s();\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [scale, setScale] = useState(1);\n  const audioRef = useRef(new Audio());\n  const canvasRef = useRef(null);\n  const renderWaveform = async track => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const context = canvas.getContext('2d');\n    if (!context) return;\n    const audioContext = new AudioContext();\n    const response = await fetch(track.url);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    const rawData = audioBuffer.getChannelData(0);\n    const sampleRate = Math.floor(rawData.length / canvas.width);\n    const scaledData = new Float32Array(canvas.width);\n    for (let i = 0; i < canvas.width; i++) {\n      const start = Math.floor(i * sampleRate);\n      const end = Math.floor((i + 1) * sampleRate);\n      let sum = 0;\n      for (let j = start; j < end; j++) {\n        sum += Math.abs(rawData[j]);\n      }\n      scaledData[i] = sum / sampleRate;\n    }\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.fillStyle = 'gray';\n    for (let i = 0; i < canvas.width; i++) {\n      const height = scaledData[i] * canvas.height;\n      context.fillRect(i, (canvas.height - height) / 2, 2, height);\n    }\n  };\n  const handlePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTrackClick = track => {\n    if (currentTrack && currentTrack.id === track.id) return;\n    setCurrentTrack(track);\n    renderWaveform(track);\n    audioRef.current.src = track.url;\n    audioRef.current.play();\n    setIsPlaying(true);\n  };\n  useEffect(() => {\n    const handleTimeUpdate = () => {\n      setCurrentTime(audioRef.current.currentTime);\n    };\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\n    return () => {\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, []);\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = event.clientX - rect.left;\n    const clickTime = clickX / canvas.width * audioRef.current.duration;\n    audioRef.current.currentTime = clickTime;\n    setCurrentTime(clickTime);\n  };\n  const handleZoomIn = () => {\n    setScale(prevScale => Math.min(prevScale * 1.5, 10));\n    if (currentTrack) {\n      renderWaveform(currentTrack);\n    }\n  };\n  const handleZoomOut = () => {\n    setScale(prevScale => Math.max(prevScale / 1.5, 1));\n    if (currentTrack) {\n      renderWaveform(currentTrack);\n    }\n  };\n  useEffect(() => {\n    if (currentTrack) {\n      renderWaveform(currentTrack);\n    }\n  }, [scale, currentTrack]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 150,\n      onClick: handleCanvasClick,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleTrackClick(track),\n        children: track.title\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayerV3, \"wlGdoQIwZcSwg4pPszGV7vdxLlk=\");\n_c = AudioPlayerV3;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayerV3\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","AudioPlayerV3","tracks","_s","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","currentTime","setCurrentTime","scale","setScale","audioRef","Audio","canvasRef","renderWaveform","track","canvas","current","context","getContext","audioContext","AudioContext","response","fetch","url","arrayBuffer","audioBuffer","decodeAudioData","rawData","getChannelData","sampleRate","Math","floor","length","width","scaledData","Float32Array","i","start","end","sum","j","abs","clearRect","height","fillStyle","fillRect","handlePlayPause","pause","play","handleTrackClick","id","src","handleTimeUpdate","addEventListener","removeEventListener","handleCanvasClick","event","rect","getBoundingClientRect","clickX","clientX","left","clickTime","duration","handleZoomIn","prevScale","min","handleZoomOut","max","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","border","map","title","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/v3/AudioPlayerV3.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\ntype Track = {\n  id: string;\n  url: string;\n  title: string;\n};\n\ntype AudioPlayerProps = {\n  tracks: Track[];\n};\n\nexport const AudioPlayerV3: React.FC<AudioPlayerProps> = ({ tracks }) => {\n  const [currentTrack, setCurrentTrack] = useState<Track | null>(null);\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const [currentTime, setCurrentTime] = useState<number>(0);\n  const [scale, setScale] = useState<number>(1);\n\n  const audioRef = useRef<HTMLAudioElement>(new Audio());\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const renderWaveform = async (track: Track) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const context = canvas.getContext('2d');\n    if (!context) return;\n\n    const audioContext = new AudioContext();\n    const response = await fetch(track.url);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n\n    const rawData = audioBuffer.getChannelData(0);\n    const sampleRate = Math.floor(rawData.length / canvas.width);\n    const scaledData = new Float32Array(canvas.width);\n\n    for (let i = 0; i < canvas.width; i++) {\n      const start = Math.floor(i * sampleRate);\n      const end = Math.floor((i + 1) * sampleRate);\n      let sum = 0;\n      for (let j = start; j < end; j++) {\n        sum += Math.abs(rawData[j]);\n      }\n      scaledData[i] = sum / sampleRate;\n    }\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.fillStyle = 'gray';\n    for (let i = 0; i < canvas.width; i++) {\n      const height = scaledData[i] * canvas.height;\n      context.fillRect(i, (canvas.height - height) / 2, 2, height);\n    }\n  };\n\n  const handlePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleTrackClick = (track: Track) => {\n    if (currentTrack && currentTrack.id === track.id) return;\n\n    setCurrentTrack(track);\n    renderWaveform(track);\n    audioRef.current.src = track.url;\n    audioRef.current.play();\n    setIsPlaying(true);\n  };\n\n  useEffect(() => {\n    const handleTimeUpdate = () => {\n      setCurrentTime(audioRef.current.currentTime);\n    };\n\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, []);\n\n  const handleCanvasClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const clickX = event.clientX - rect.left;\n    const clickTime = (clickX / canvas.width) * audioRef.current.duration;\n\n    audioRef.current.currentTime = clickTime;\n    setCurrentTime(clickTime);\n};\n\nconst handleZoomIn = () => {\n    setScale(prevScale => Math.min(prevScale * 1.5, 10));\n    if (currentTrack) {\n        renderWaveform(currentTrack);\n    }\n};\n\nconst handleZoomOut = () => {\n    setScale(prevScale => Math.max(prevScale / 1.5, 1));\n    if (currentTrack) {\n        renderWaveform(currentTrack);\n    }\n};\n\nuseEffect(() => {\n    if (currentTrack) {\n        renderWaveform(currentTrack);\n    }\n}, [scale, currentTrack]);\n\nreturn (\n    <div>\n        <div>\n            <button onClick={handlePlayPause}>\n                {isPlaying ? 'Pause' : 'Play'}\n            </button>\n            <button onClick={handleZoomIn}>Zoom In</button>\n            <button onClick={handleZoomOut}>Zoom Out</button>\n        </div>\n        <canvas\n            ref={canvasRef}\n            width={800}\n            height={150}\n            onClick={handleCanvasClick}\n            style={{ border: '1px solid black' }}\n        />\n        <div>\n            {tracks.map(track => (\n                <div key={track.id} onClick={() => handleTrackClick(track)}>\n                    {track.title}\n                </div>\n            ))}\n        </div>\n    </div>\n);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}