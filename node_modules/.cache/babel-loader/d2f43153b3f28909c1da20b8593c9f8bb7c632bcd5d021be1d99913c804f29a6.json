{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/wavesurfer/WaveWithKeywords.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Waveform = ({\n  url,\n  keywords\n}) => {\n  _s();\n  const waveformRef = useRef(null);\n  const waveSurferRef = useRef(null);\n  const markersRef = useRef(null);\n  useEffect(() => {\n    if (waveformRef.current) {\n      waveSurferRef.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: '#ddd',\n        progressColor: '#333',\n        cursorColor: '#333',\n        height: 100,\n        barWidth: 2,\n        responsive: true\n      });\n      waveSurferRef.current.load(url);\n\n      // Добавление кастомного контейнера для маркеров\n      if (waveformRef.current && !markersRef.current) {\n        markersRef.current = document.createElement('div');\n        markersRef.current.style.position = 'absolute';\n        markersRef.current.style.top = '0';\n        markersRef.current.style.left = '0';\n        markersRef.current.style.width = '100%';\n        markersRef.current.style.height = '100%';\n        waveformRef.current.appendChild(markersRef.current);\n      }\n      waveSurferRef.current.on('ready', () => {\n        addMarkers();\n      });\n\n      // Обновление маркеров при зуме или изменении размера\n      waveSurferRef.current.on('zoom', addMarkers);\n      waveSurferRef.current.on('resize', addMarkers);\n    }\n    return () => {\n      var _waveSurferRef$curren;\n      (_waveSurferRef$curren = waveSurferRef.current) === null || _waveSurferRef$curren === void 0 ? void 0 : _waveSurferRef$curren.destroy();\n    };\n  }, [url]);\n  const addMarkers = () => {\n    if (markersRef.current && waveSurferRef.current) {\n      markersRef.current.innerHTML = ''; // Очищаем предыдущие маркеры\n\n      keywords.forEach(({\n        keyword,\n        color\n      }) => {\n        const marker = document.createElement('div');\n        const label = document.createElement('span');\n\n        // Устанавливаем стиль для маркера\n        marker.style.position = 'absolute';\n        marker.style.left = `${keyword.Start / waveSurferRef.current.getDuration() * 100}%`;\n        marker.style.bottom = '0';\n        marker.style.width = '2px';\n        marker.style.height = '100%';\n        marker.style.backgroundColor = color;\n\n        // Устанавливаем стиль для лейбла\n        label.textContent = keyword.Name;\n        label.style.position = 'absolute';\n        label.style.left = '50%';\n        label.style.transform = 'translateX(-50%)';\n        label.style.bottom = '100%';\n        label.style.backgroundColor = color;\n        label.style.color = '#fff';\n        label.style.padding = '2px 5px';\n        label.style.fontSize = '12px';\n        label.style.borderRadius = '3px';\n        marker.appendChild(label);\n        markersRef.current.appendChild(marker);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: waveformRef,\n    style: {\n      position: 'relative'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n_s(Waveform, \"rzWlyjdZkiAHRtNV/Zg9VOJlPg8=\");\n_c = Waveform;\nexport default Waveform;\nvar _c;\n$RefreshReg$(_c, \"Waveform\");","map":{"version":3,"names":["React","useEffect","useRef","WaveSurfer","jsxDEV","_jsxDEV","Waveform","url","keywords","_s","waveformRef","waveSurferRef","markersRef","current","create","container","waveColor","progressColor","cursorColor","height","barWidth","responsive","load","document","createElement","style","position","top","left","width","appendChild","on","addMarkers","_waveSurferRef$curren","destroy","innerHTML","forEach","keyword","color","marker","label","Start","getDuration","bottom","backgroundColor","textContent","Name","transform","padding","fontSize","borderRadius","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/wavesurfer/WaveWithKeywords.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { KeywordColor } from '../AudioContext';\n\ninterface WaveformProps {\n  url: string;\n  keywords: KeywordColor[];\n}\n\nconst Waveform: React.FC<WaveformProps> = ({ url, keywords }) => {\n  const waveformRef = useRef<HTMLDivElement>(null);\n  const waveSurferRef = useRef<WaveSurfer | null>(null);\n  const markersRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (waveformRef.current) {\n      waveSurferRef.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: '#ddd',\n        progressColor: '#333',\n        cursorColor: '#333',\n        height: 100,\n        barWidth: 2,\n        responsive: true,\n      });\n\n      waveSurferRef.current.load(url);\n\n      // Добавление кастомного контейнера для маркеров\n      if (waveformRef.current && !markersRef.current) {\n        markersRef.current = document.createElement('div');\n        markersRef.current.style.position = 'absolute';\n        markersRef.current.style.top = '0';\n        markersRef.current.style.left = '0';\n        markersRef.current.style.width = '100%';\n        markersRef.current.style.height = '100%';\n        waveformRef.current.appendChild(markersRef.current);\n      }\n\n      waveSurferRef.current.on('ready', () => {\n        addMarkers();\n      });\n\n      // Обновление маркеров при зуме или изменении размера\n      waveSurferRef.current.on('zoom', addMarkers);\n      waveSurferRef.current.on('resize', addMarkers);\n    }\n\n    return () => {\n      waveSurferRef.current?.destroy();\n    };\n  }, [url]);\n\n  const addMarkers = () => {\n    if (markersRef.current && waveSurferRef.current) {\n      markersRef.current.innerHTML = ''; // Очищаем предыдущие маркеры\n\n      keywords.forEach(({ keyword, color }) => {\n        const marker = document.createElement('div');\n        const label = document.createElement('span');\n\n        // Устанавливаем стиль для маркера\n        marker.style.position = 'absolute';\n        marker.style.left = `${(keyword.Start / waveSurferRef.current!.getDuration()) * 100}%`;\n        marker.style.bottom = '0';\n        marker.style.width = '2px';\n        marker.style.height = '100%';\n        marker.style.backgroundColor = color;\n\n        // Устанавливаем стиль для лейбла\n        label.textContent = keyword.Name;\n        label.style.position = 'absolute';\n        label.style.left = '50%';\n        label.style.transform = 'translateX(-50%)';\n        label.style.bottom = '100%';\n        label.style.backgroundColor = color;\n        label.style.color = '#fff';\n        label.style.padding = '2px 5px';\n        label.style.fontSize = '12px';\n        label.style.borderRadius = '3px';\n\n        marker.appendChild(label);\n        markersRef.current!.appendChild(marker);\n      });\n    }\n  };\n\n  return <div ref={waveformRef} style={{ position: 'relative' }} />;\n};\n\nexport default Waveform;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}