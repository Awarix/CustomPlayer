{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/wavesurfer/WaveWithKeywords.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport { WaveSurfer, WaveForm, Region } from \"wavesurfer-react\";\nimport { currTimeSubscriber, changeSegmentPositionSubscriber } from \"../../subscribers/PlayerSubscriber\";\n\n// Добавьте новый интерфейс для ключевых слов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionsPlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.regions.min\");\nconst TimelinePlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\");\n\n// Создайте новый компонент WordMarker\nconst WordMarker = ({\n  keyword,\n  color,\n  wavesurfer,\n  zoom\n}) => {\n  _s();\n  const markerRef = useRef(null);\n  useEffect(() => {\n    const updatePosition = () => {\n      if (markerRef.current && wavesurfer) {\n        const duration = wavesurfer.getDuration();\n        const pixelsPerSecond = wavesurfer.params.minPxPerSec;\n        const containerWidth = wavesurfer.drawer.width;\n        const scrollLeft = wavesurfer.drawer.getScrollX();\n        const markerPosition = keyword.Start / duration * containerWidth;\n        const adjustedPosition = markerPosition - scrollLeft;\n        markerRef.current.style.left = `${adjustedPosition}px`;\n        markerRef.current.style.display = adjustedPosition >= 0 && adjustedPosition <= containerWidth ? 'block' : 'none';\n      }\n    };\n    updatePosition();\n    wavesurfer.on('scroll', updatePosition);\n    wavesurfer.on('zoom', updatePosition);\n    return () => {\n      wavesurfer.un('scroll', updatePosition);\n      wavesurfer.un('zoom', updatePosition);\n    };\n  }, [keyword, wavesurfer, zoom]);\n  const handleClick = () => {\n    wavesurfer.setCurrentTime(keyword.Start);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: markerRef,\n    onClick: handleClick,\n    style: {\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      width: '2px',\n      backgroundColor: color,\n      cursor: 'pointer'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '-20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        backgroundColor: color,\n        padding: '2px 5px',\n        borderRadius: '3px',\n        color: 'white',\n        fontSize: '12px'\n      },\n      children: keyword.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(WordMarker, \"x5wWyXK0+mHGg2Y0I8gN07knkVQ=\");\n_c = WordMarker;\nconst WavePlayer = ({\n  file,\n  segments,\n  activeSegmentProp,\n  url,\n  keywords\n}) => {\n  _s2();\n  const [isPlay, setIsPlay] = useState(false);\n  const [autoCenter, setAutoCenter] = useState(true);\n  const [zoom, setZoom] = useState(10);\n  const [regions, setRegions] = useState([]);\n  const [activeSegment, setActiveSegment] = useState(activeSegmentProp);\n  const plugins = useMemo(() => [{\n    plugin: RegionsPlugin,\n    options: {\n      dragSelection: false,\n      showTooltip: false\n    }\n  }, {\n    plugin: TimelinePlugin,\n    options: {\n      container: \"#timeline\"\n    }\n  }], []);\n  const wavesurferRef = useRef(null);\n  const handleWSMount = useCallback(waveSurfer => {\n    wavesurferRef.current = waveSurfer;\n    wavesurferRef.current.load(url);\n    wavesurferRef.current.on(\"ready\", () => {\n      console.log(\"WaveSurfer is ready\");\n    });\n    wavesurferRef.current.on(\"region-update-end\", region => {\n      changeSegmentPositionSubscriber.next({\n        segment: region.data,\n        start: region.start,\n        end: region.end\n      });\n    });\n    let lastTime = 0;\n    wavesurferRef.current.on(\"audioprocess\", currentTime => {\n      const diff = Math.abs(currentTime - lastTime);\n      if (diff > 0.1) {\n        lastTime = currentTime;\n        currTimeSubscriber.next(currentTime);\n      }\n    });\n  }, [url]);\n  const setZoomClick = zoom => {\n    if (zoom < 5) zoom = 5;\n    if (zoom > 1000) zoom = 1000;\n    setZoom(zoom);\n  };\n  useEffect(() => {\n    const mappedRegions = segments.map(s => ({\n      id: s.id,\n      start: s.Start,\n      end: s.End,\n      color: \"rgba(212, 215, 247, 0.4)\",\n      drag: false,\n      resize: false,\n      channelIdx: s.ChannelNumber,\n      // Привязываем регион к соответствующему каналу\n      handleStyle: {\n        left: {\n          backgroundColor: \"transparent\",\n          width: \"5px\"\n        },\n        right: {\n          backgroundColor: \"transparent\",\n          width: \"5px\"\n        }\n      },\n      data: s\n    }));\n    setRegions(mappedRegions);\n  }, [segments]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    setZoom(10);\n    if (url === \"\") return;\n    wavesurferRef.current.load(url);\n  }, [file, url]);\n  useEffect(() => {\n    if (wavesurferRef.current) {\n      wavesurferRef.current.zoom(zoom);\n      // Принудительно вызываем событие 'zoom', чтобы обновить позиции маркеров\n      wavesurferRef.current.fireEvent('zoom', zoom);\n    }\n  }, [zoom]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    if (isPlay) {\n      wavesurferRef.current.play();\n    } else {\n      wavesurferRef.current.pause();\n    }\n  }, [isPlay]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    setActiveSegment(activeSegmentProp);\n    if (activeSegmentProp) {\n      let zoomFactor = 500;\n      const width = wavesurferRef.current.drawer.wrapper.clientWidth;\n      const segmentDuration = activeSegmentProp.End - activeSegmentProp.Start;\n      for (let i = 0; i < 10; i++) {\n        if (segmentDuration * zoomFactor < width) break;\n        zoomFactor /= 2;\n      }\n      if (zoomFactor < 5) zoomFactor = 5;\n      setZoomClick(zoomFactor);\n      setAutoCenter(false);\n      setIsPlay(true);\n      const total = wavesurferRef.current.getDuration();\n      if (total > 0) {\n        const centerTime = activeSegmentProp.Start + segmentDuration / 2;\n        const t1 = centerTime / total;\n        wavesurferRef.current.zoom(zoomFactor);\n        wavesurferRef.current.seekAndCenter(t1);\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n        wavesurferRef.current.play();\n      }\n    }\n    regions.forEach(region => {\n      if (region.color !== \"rgba(212, 215, 247, 0.4)\") {\n        region.color = \"rgba(212, 215, 247, 0.4)\";\n      }\n      if ((activeSegmentProp === null || activeSegmentProp === void 0 ? void 0 : activeSegmentProp.id) === region.id) {\n        region.color = \"rgba(212, 215, 247, 0.4)\";\n      }\n    });\n    const subscription = currTimeSubscriber.subscribe(currentTime => {\n      if (wavesurferRef.current && activeSegmentProp && currentTime >= activeSegmentProp.End) {\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [activeSegmentProp, regions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(WaveSurfer, {\n      onMount: handleWSMount,\n      plugins: plugins,\n      children: [/*#__PURE__*/_jsxDEV(WaveForm, {\n        id: \"waveform\",\n        waveColor: \"#b7e1dd\",\n        progressColor: \"#4Db6AC\",\n        cursorColor: \"#357F78\",\n        autoCenter: autoCenter,\n        splitChannels: true,\n        children: regions.map(regionProps => /*#__PURE__*/_jsxDEV(Region, {\n          ...regionProps\n        }, regionProps.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"20px\"\n        },\n        id: \"timeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), wavesurferRef.current && keywords.map((kw, index) => /*#__PURE__*/_jsxDEV(WordMarker, {\n      keyword: kw.keyword,\n      color: kw.color,\n      wavesurfer: wavesurferRef.current,\n      zoom: zoom\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"40px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: e => {\n          document.activeElement.blur();\n          setIsPlay(prev => !prev);\n        },\n        children: isPlay ? /*#__PURE__*/_jsxDEV(PauseCircleFilledIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        title: \"\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0438\\u0442\\u044C \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\",\n        onClick: e => {\n          document.activeElement.blur();\n          setZoomClick(zoom * 2);\n        },\n        children: /*#__PURE__*/_jsxDEV(ZoomInIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        title: \"\\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0438\\u0442\\u044C \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\",\n        onClick: e => {\n          document.activeElement.blur();\n          setZoomClick(zoom / 2);\n        },\n        children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s2(WavePlayer, \"J2XZEJN7L7EoNuN7uDHytRY5Rtw=\");\n_c2 = WavePlayer;\nexport default WavePlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"WordMarker\");\n$RefreshReg$(_c2, \"WavePlayer\");","map":{"version":3,"names":["useMemo","useRef","useState","useEffect","useCallback","IconButton","PlayCircleFilledIcon","PauseCircleFilledIcon","ZoomInIcon","ZoomOutIcon","WaveSurfer","WaveForm","Region","currTimeSubscriber","changeSegmentPositionSubscriber","jsxDEV","_jsxDEV","RegionsPlugin","require","TimelinePlugin","WordMarker","keyword","color","wavesurfer","zoom","_s","markerRef","updatePosition","current","duration","getDuration","pixelsPerSecond","params","minPxPerSec","containerWidth","drawer","width","scrollLeft","getScrollX","markerPosition","Start","adjustedPosition","style","left","display","on","un","handleClick","setCurrentTime","ref","onClick","position","top","height","backgroundColor","cursor","children","transform","padding","borderRadius","fontSize","Name","fileName","_jsxFileName","lineNumber","columnNumber","_c","WavePlayer","file","segments","activeSegmentProp","url","keywords","_s2","isPlay","setIsPlay","autoCenter","setAutoCenter","setZoom","regions","setRegions","activeSegment","setActiveSegment","plugins","plugin","options","dragSelection","showTooltip","container","wavesurferRef","handleWSMount","waveSurfer","load","console","log","region","next","segment","data","start","end","lastTime","currentTime","diff","Math","abs","setZoomClick","mappedRegions","map","s","id","End","drag","resize","channelIdx","ChannelNumber","handleStyle","right","fireEvent","play","pause","zoomFactor","wrapper","clientWidth","segmentDuration","i","total","centerTime","t1","seekAndCenter","forEach","subscription","subscribe","unsubscribe","onMount","waveColor","progressColor","cursorColor","splitChannels","regionProps","kw","index","e","document","activeElement","blur","prev","title","_c2","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/wavesurfer/WaveWithKeywords.tsx"],"sourcesContent":["import { FC, useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport { WaveSurfer, WaveForm, Region } from \"wavesurfer-react\";\nimport { currTimeSubscriber, changeSegmentPositionSubscriber } from \"../../subscribers/PlayerSubscriber\";\nimport { SegmentModel as Segment } from \"../AudioContext\";\n\n// Добавьте новый интерфейс для ключевых слов\ninterface KeywordColor {\n  keyword: {\n    Start: number;\n    Name: string;\n    ChannelNumber: number;\n    Confidence: number;\n  };\n  color: string;\n}\n\ninterface Props {\n  file: File | null;\n  segments: Segment[];\n  activeSegmentProp: Segment | null;\n  url: string;\n  keywords: KeywordColor[]; // Добавьте это свойство\n}\n\nconst RegionsPlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.regions.min\");\nconst TimelinePlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\");\n\n// Создайте новый компонент WordMarker\nconst WordMarker: FC<{keyword: KeywordColor['keyword'], color: string, wavesurfer: any, zoom: number}> = ({ keyword, color, wavesurfer, zoom }) => {\n    const markerRef = useRef<HTMLDivElement>(null);\n  \n    useEffect(() => {\n      const updatePosition = () => {\n        if (markerRef.current && wavesurfer) {\n          const duration = wavesurfer.getDuration();\n          const pixelsPerSecond = wavesurfer.params.minPxPerSec;\n          const containerWidth = wavesurfer.drawer.width;\n          const scrollLeft = wavesurfer.drawer.getScrollX();\n  \n          const markerPosition = (keyword.Start / duration) * containerWidth;\n          const adjustedPosition = markerPosition - scrollLeft;\n  \n          markerRef.current.style.left = `${adjustedPosition}px`;\n          markerRef.current.style.display = adjustedPosition >= 0 && adjustedPosition <= containerWidth ? 'block' : 'none';\n        }\n      };\n  \n      updatePosition();\n      wavesurfer.on('scroll', updatePosition);\n      wavesurfer.on('zoom', updatePosition);\n  \n      return () => {\n        wavesurfer.un('scroll', updatePosition);\n        wavesurfer.un('zoom', updatePosition);\n      };\n    }, [keyword, wavesurfer, zoom]);\n\n  const handleClick = () => {\n    wavesurfer.setCurrentTime(keyword.Start);\n  };\n\n  return (\n    <div\n      ref={markerRef}\n      onClick={handleClick}\n      style={{\n        position: 'absolute',\n        top: 0,\n        height: '100%',\n        width: '2px',\n        backgroundColor: color,\n        cursor: 'pointer',\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: '-20px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          backgroundColor: color,\n          padding: '2px 5px',\n          borderRadius: '3px',\n          color: 'white',\n          fontSize: '12px',\n        }}\n      >\n        {keyword.Name}\n      </div>\n    </div>\n  );\n};\n\nconst WavePlayer: FC<Props> = ({ file, segments, activeSegmentProp, url, keywords }) => {\n    const [isPlay, setIsPlay] = useState<boolean>(false);\n    const [autoCenter, setAutoCenter] = useState<boolean>(true);\n    const [zoom, setZoom] = useState<number>(10);\n    const [regions, setRegions] = useState<any[]>([]);\n    const [activeSegment, setActiveSegment] = useState<Segment | null>(activeSegmentProp);\n  \n    const plugins = useMemo(() => [\n      {\n        plugin: RegionsPlugin,\n        options: { dragSelection: false, showTooltip: false },\n      },\n      {\n        plugin: TimelinePlugin,\n        options: { container: \"#timeline\" },\n      },\n    ], []);\n  \n    const wavesurferRef = useRef<any>(null);\n  \n    const handleWSMount = useCallback((waveSurfer) => {\n      wavesurferRef.current = waveSurfer;\n      wavesurferRef.current.load(url);\n  \n      wavesurferRef.current.on(\"ready\", () => {\n        console.log(\"WaveSurfer is ready\");\n      });\n  \n      wavesurferRef.current.on(\"region-update-end\", (region: any) => {\n        changeSegmentPositionSubscriber.next({\n          segment: region.data,\n          start: region.start,\n          end: region.end,\n        });\n      });\n  \n      let lastTime = 0;\n      wavesurferRef.current.on(\"audioprocess\", (currentTime: number) => {\n        const diff = Math.abs(currentTime - lastTime);\n        if (diff > 0.1) {\n          lastTime = currentTime;\n          currTimeSubscriber.next(currentTime);\n        }\n      });\n    }, [url]);\n  \n    const setZoomClick = (zoom: number) => {\n      if (zoom < 5) zoom = 5;\n      if (zoom > 1000) zoom = 1000;\n      setZoom(zoom);\n    };\n  \n    useEffect(() => {\n      const mappedRegions = segments.map(s => ({\n        id: s.id,\n        start: s.Start,\n        end: s.End,\n        color: \"rgba(212, 215, 247, 0.4)\",\n        drag: false,\n        resize: false,\n        channelIdx: s.ChannelNumber, // Привязываем регион к соответствующему каналу\n        handleStyle: {\n          left: { backgroundColor: \"transparent\", width: \"5px\" },\n          right: { backgroundColor: \"transparent\", width: \"5px\" },\n        },\n        data: s,\n      }));\n      setRegions(mappedRegions);\n    }, [segments]);\n  \n    useEffect(() => {\n      if (!wavesurferRef.current) return;\n  \n      setZoom(10);\n  \n      if (url === \"\") return;\n  \n      wavesurferRef.current.load(url);\n    }, [file, url]);\n  \n    \n    useEffect(() => {\n        if (wavesurferRef.current) {\n        wavesurferRef.current.zoom(zoom);\n        // Принудительно вызываем событие 'zoom', чтобы обновить позиции маркеров\n        wavesurferRef.current.fireEvent('zoom', zoom);\n        }\n    }, [zoom]);\n  \n    useEffect(() => {\n      if (!wavesurferRef.current) return;\n  \n      if (isPlay) {\n        wavesurferRef.current.play();\n      } else {\n        wavesurferRef.current.pause();\n      }\n    }, [isPlay]);\n  \n    useEffect(() => {\n      if (!wavesurferRef.current) return;\n  \n      setActiveSegment(activeSegmentProp);\n  \n      if (activeSegmentProp) {\n        let zoomFactor = 500;\n        const width = wavesurferRef.current.drawer.wrapper.clientWidth;\n        const segmentDuration = activeSegmentProp.End - activeSegmentProp.Start;\n  \n        for (let i = 0; i < 10; i++) {\n          if (segmentDuration * zoomFactor < width) break;\n          zoomFactor /= 2;\n        }\n        if (zoomFactor < 5) zoomFactor = 5;\n  \n        setZoomClick(zoomFactor);\n        setAutoCenter(false);\n        setIsPlay(true);\n  \n        const total = wavesurferRef.current.getDuration();\n        if (total > 0) {\n          const centerTime = activeSegmentProp.Start + (segmentDuration) / 2;\n          const t1 = centerTime / total;\n  \n          wavesurferRef.current.zoom(zoomFactor);\n          wavesurferRef.current.seekAndCenter(t1);\n          wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n          wavesurferRef.current.play();\n        }\n      }\n  \n      regions.forEach(region => {\n        if (region.color !== \"rgba(212, 215, 247, 0.4)\") {\n          region.color = \"rgba(212, 215, 247, 0.4)\";\n        }\n  \n        if (activeSegmentProp?.id === region.id) {\n          region.color = \"rgba(212, 215, 247, 0.4)\";\n        }\n      });\n  \n      const subscription = currTimeSubscriber.subscribe(currentTime => {\n        if (wavesurferRef.current && activeSegmentProp && currentTime >= activeSegmentProp.End) {\n          wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n        }\n      });\n  \n      return () => {\n        subscription.unsubscribe();\n      };\n    }, [activeSegmentProp, regions]);\n\n  return (\n    <div style={{ width: \"100%\", position: \"relative\" }}>\n      <WaveSurfer onMount={handleWSMount} plugins={plugins} >\n        <WaveForm\n          id=\"waveform\"\n          waveColor=\"#b7e1dd\"\n          progressColor=\"#4Db6AC\"\n          cursorColor=\"#357F78\"\n          autoCenter={autoCenter}\n          splitChannels={true}\n        >\n          {regions.map(regionProps => (\n            <Region\n              key={regionProps.id}\n              {...regionProps}\n            />\n          ))}\n        </WaveForm>\n        <div style={{ height: \"20px\" }} id=\"timeline\" />\n      </WaveSurfer>\n\n      {/* Добавляем маркеры слов */}\n      {wavesurferRef.current && keywords.map((kw, index) => (\n        <WordMarker\n          key={index}\n          keyword={kw.keyword}\n          color={kw.color}\n          wavesurfer={wavesurferRef.current}\n          zoom={zoom}\n        />\n      ))}\n\n      <div style={{ height: \"40px\" }}>\n        <IconButton\n          color=\"primary\"\n          onClick={(e: any) => {\n            (document.activeElement as HTMLElement).blur();\n            setIsPlay((prev) => !prev);\n          }}\n        >\n          {isPlay ? <PauseCircleFilledIcon fontSize=\"medium\" /> : <PlayCircleFilledIcon fontSize=\"medium\" />}\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          title=\"Увеличить масштаб\"\n          onClick={(e: any) => {\n            (document.activeElement as HTMLElement).blur();\n            setZoomClick(zoom * 2);\n          }}\n        >\n          <ZoomInIcon fontSize=\"medium\" />\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          title=\"Уменьшить масштаб\"\n          onClick={(e: any) => {\n            (document.activeElement as HTMLElement).blur();\n            setZoomClick(zoom / 2);\n          }}\n        >\n          <ZoomOutIcon fontSize=\"medium\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default WavePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}