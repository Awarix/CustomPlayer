{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/AudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useAudio } from './AudioContext';\nimport styled from 'styled-components';\nimport AudioWaveform from './AudioWaveform';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContainer = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n_c = PlayerContainer;\nconst ControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n_c2 = ControlsContainer;\nconst PlayButton = styled.button`\n  background-color: #ff5500;\n  color: white;\n  border: none;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #ff7700;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(255, 85, 0, 0.5);\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n_c3 = PlayButton;\nconst ZoomControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n`;\nconst ZoomButton = styled.button`\n  background-color: #ff5500;\n  color: white;\n  border: none;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #ff7700;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(255, 85, 0, 0.5);\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\nconst ZoomDisplay = styled.div`\n  font-size: 16px;\n  color: #333;\n`;\nconst TimeDisplay = styled.div`\n  font-size: 14px;\n  color: #333;\n`;\n_c4 = TimeDisplay;\nconst AudioInfo = styled.div`\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n`;\n_c5 = AudioInfo;\nconst AudioPlayer = () => {\n  _s();\n  const {\n    currentAudioUrl,\n    segments,\n    keywords\n  } = useAudio();\n  const audioRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const sourceRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [numChannels, setNumChannels] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  useEffect(() => {\n    if (currentAudioUrl && audioRef.current) {\n      audioRef.current.src = currentAudioUrl;\n      audioRef.current.load();\n    }\n  }, [currentAudioUrl]);\n  useEffect(() => {\n    if (!audioContextRef.current && audioRef.current) {\n      const context = new AudioContext();\n      audioContextRef.current = context;\n      sourceRef.current = context.createMediaElementSource(audioRef.current);\n\n      // Определяем количество каналов после загрузки метаданных\n      audioRef.current.onloadedmetadata = () => {\n        if (sourceRef.current && context) {\n          const analyser = context.createAnalyser();\n          sourceRef.current.connect(analyser);\n          setNumChannels(analyser.channelCount); // получаем количество каналов\n        }\n      };\n    }\n  }, []);\n  const togglePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n  const handleSeek = time => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = time;\n      setCurrentTime(time);\n    }\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const playChannel = (leftGainValue, rightGainValue) => {\n    const audio = audioRef.current;\n    const context = audioContextRef.current;\n    if (audio && context && sourceRef.current) {\n      audio.pause();\n      audio.currentTime = 0;\n      const splitter = context.createChannelSplitter(2);\n      const merger = context.createChannelMerger(2);\n      const leftGain = context.createGain();\n      const rightGain = context.createGain();\n      leftGain.gain.value = leftGainValue;\n      rightGain.gain.value = rightGainValue;\n      sourceRef.current.disconnect();\n      sourceRef.current.connect(splitter);\n      splitter.connect(leftGain, 0);\n      splitter.connect(rightGain, 1);\n      leftGain.connect(merger, 0, 0);\n      rightGain.connect(merger, 0, 1);\n      merger.connect(context.destination);\n      audio.play();\n      setIsPlaying(true);\n    }\n  };\n  const playLeftChannel = () => {\n    playChannel(1, 0);\n  };\n  const playRightChannel = () => {\n    playChannel(0, 1);\n  };\n  const increaseZoom = () => {\n    if (zoomLevel < 128) {\n      setZoomLevel(zoomLevel * 2);\n    }\n  };\n  const decreaseZoom = () => {\n    if (zoomLevel > 1) {\n      setZoomLevel(zoomLevel / 2);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onTimeUpdate: handleTimeUpdate,\n      onLoadedMetadata: handleLoadedMetadata,\n      onEnded: () => setIsPlaying(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioInfo, {\n      children: currentAudioUrl ? currentAudioUrl.split('/').pop() : 'No audio selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PlayButton, {\n        onClick: togglePlayPause,\n        children: isPlaying ? '❚❚' : '▶'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n        onClick: playLeftChannel,\n        disabled: numChannels < 2,\n        children: \"L\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n        onClick: playRightChannel,\n        disabled: numChannels < 2,\n        children: \"R\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeDisplay, {\n        children: [formatTime(currentTime), \" / \", formatTime(duration)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioWaveform, {\n      audioUrl: currentAudioUrl,\n      currentTime: currentTime,\n      duration: duration,\n      isPlaying: isPlaying,\n      onSeek: handleSeek,\n      onPlayPause: togglePlayPause,\n      segments: segments,\n      keywords: keywords,\n      zoomLevel: zoomLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"JdxEbIUjoFARsK0JNQe87+TSoZQ=\", false, function () {\n  return [useAudio];\n});\n_c6 = AudioPlayer;\nexport default AudioPlayer;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PlayerContainer\");\n$RefreshReg$(_c2, \"ControlsContainer\");\n$RefreshReg$(_c3, \"PlayButton\");\n$RefreshReg$(_c4, \"TimeDisplay\");\n$RefreshReg$(_c5, \"AudioInfo\");\n$RefreshReg$(_c6, \"AudioPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useAudio","styled","AudioWaveform","jsxDEV","_jsxDEV","PlayerContainer","div","_c","ControlsContainer","_c2","PlayButton","button","_c3","ZoomControlsContainer","ZoomButton","ZoomDisplay","TimeDisplay","_c4","AudioInfo","_c5","AudioPlayer","_s","currentAudioUrl","segments","keywords","audioRef","audioContextRef","sourceRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","numChannels","setNumChannels","zoomLevel","setZoomLevel","current","src","load","context","AudioContext","createMediaElementSource","onloadedmetadata","analyser","createAnalyser","connect","channelCount","togglePlayPause","pause","play","handleTimeUpdate","handleLoadedMetadata","handleSeek","time","formatTime","minutes","Math","floor","seconds","toString","padStart","playChannel","leftGainValue","rightGainValue","audio","splitter","createChannelSplitter","merger","createChannelMerger","leftGain","createGain","rightGain","gain","value","disconnect","destination","playLeftChannel","playRightChannel","increaseZoom","decreaseZoom","children","ref","onTimeUpdate","onLoadedMetadata","onEnded","fileName","_jsxFileName","lineNumber","columnNumber","split","pop","onClick","disabled","audioUrl","onSeek","onPlayPause","_c6","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/AudioPlayer.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useAudio } from './AudioContext';\nimport styled from 'styled-components';\nimport AudioWaveform from './AudioWaveform';\n\nconst PlayerContainer = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst PlayButton = styled.button<{ disabled?: boolean }>`\n  background-color: #ff5500;\n  color: white;\n  border: none;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #ff7700;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(255, 85, 0, 0.5);\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ZoomControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst ZoomButton = styled.button`\n  background-color: #ff5500;\n  color: white;\n  border: none;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #ff7700;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(255, 85, 0, 0.5);\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ZoomDisplay = styled.div`\n  font-size: 16px;\n  color: #333;\n`;\n\nconst TimeDisplay = styled.div`\n  font-size: 14px;\n  color: #333;\n`;\n\nconst AudioInfo = styled.div`\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n`;\n\nconst AudioPlayer: React.FC = () => {\n  const { currentAudioUrl, segments, keywords } = useAudio();\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const audioContextRef = useRef<AudioContext | null>(null);\n  const sourceRef = useRef<MediaElementAudioSourceNode | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [numChannels, setNumChannels] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n\n  useEffect(() => {\n    if (currentAudioUrl && audioRef.current) {\n      audioRef.current.src = currentAudioUrl;\n      audioRef.current.load();\n    }\n  }, [currentAudioUrl]);\n\n  useEffect(() => {\n    if (!audioContextRef.current && audioRef.current) {\n      const context = new AudioContext();\n      audioContextRef.current = context;\n      sourceRef.current = context.createMediaElementSource(audioRef.current);\n\n      // Определяем количество каналов после загрузки метаданных\n      audioRef.current.onloadedmetadata = () => {\n        if (sourceRef.current && context) {\n          const analyser = context.createAnalyser();\n          sourceRef.current.connect(analyser);\n          setNumChannels(analyser.channelCount); // получаем количество каналов\n        }\n      };\n    }\n  }, []);\n\n  const togglePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n\n  const handleSeek = (time: number) => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = time;\n      setCurrentTime(time);\n    }\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const playChannel = (leftGainValue: number, rightGainValue: number) => {\n    const audio = audioRef.current;\n    const context = audioContextRef.current;\n\n    if (audio && context && sourceRef.current) {\n      audio.pause();\n      audio.currentTime = 0;\n\n      const splitter = context.createChannelSplitter(2);\n      const merger = context.createChannelMerger(2);\n\n      const leftGain = context.createGain();\n      const rightGain = context.createGain();\n\n      leftGain.gain.value = leftGainValue;\n      rightGain.gain.value = rightGainValue;\n\n      sourceRef.current.disconnect();\n      sourceRef.current.connect(splitter);\n      splitter.connect(leftGain, 0);\n      splitter.connect(rightGain, 1);\n\n      leftGain.connect(merger, 0, 0);\n      rightGain.connect(merger, 0, 1);\n\n      merger.connect(context.destination);\n\n      audio.play();\n      setIsPlaying(true);\n    }\n  };\n\n  const playLeftChannel = () => {\n    playChannel(1, 0);\n  };\n\n  const playRightChannel = () => {\n    playChannel(0, 1);\n  };\n\n  const increaseZoom = () => {\n    if (zoomLevel < 128) {\n      setZoomLevel(zoomLevel * 2);\n    }\n  };\n\n  const decreaseZoom = () => {\n    if (zoomLevel > 1) {\n      setZoomLevel(zoomLevel / 2);\n    }\n  };\n\n  return (\n    <PlayerContainer>\n      <audio\n        ref={audioRef}\n        onTimeUpdate={handleTimeUpdate}\n        onLoadedMetadata={handleLoadedMetadata}\n        onEnded={() => setIsPlaying(false)}\n      />\n      <AudioInfo>\n        {currentAudioUrl ? currentAudioUrl.split('/').pop() : 'No audio selected'}\n      </AudioInfo>\n      <ControlsContainer>\n        <PlayButton onClick={togglePlayPause}>\n          {isPlaying ? '❚❚' : '▶'}\n        </PlayButton>\n        <PlayButton onClick={playLeftChannel} disabled={numChannels < 2}>\n          L\n        </PlayButton>\n        <PlayButton onClick={playRightChannel} disabled={numChannels < 2}>\n          R\n        </PlayButton>\n        <TimeDisplay>\n          {formatTime(currentTime)} / {formatTime(duration)}\n        </TimeDisplay>\n      </ControlsContainer>\n      <AudioWaveform\n        audioUrl={currentAudioUrl}\n        currentTime={currentTime}\n        duration={duration}\n        isPlaying={isPlaying}\n        onSeek={handleSeek}\n        onPlayPause={togglePlayPause}\n        segments={segments}\n        keywords={keywords}\n        zoomLevel={zoomLevel}\n      />\n    </PlayerContainer>\n  );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}