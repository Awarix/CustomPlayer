{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/components/AlignButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n//material\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlignButton = ({\n  editor\n}) => {\n  _s();\n  const [selectedAlign, setSelectedAlign] = useState('left');\n  const handleFontChange = e => {\n    const align = e.target.value;\n    editor.chain().focus().setTextAlign(align).run();\n    setSelectedAlign(align);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"fontSelect\",\n      value: selectedAlign,\n      onChange: handleFontChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'left',\n        children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'center',\n        children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'right',\n        children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(AlignButton, \"Jc0bV2O9ezBlSBJ2CK3nClRiI+8=\");\n_c = AlignButton;\nexport default AlignButton;\nvar _c;\n$RefreshReg$(_c, \"AlignButton\");","map":{"version":3,"names":["React","useState","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","jsxDEV","_jsxDEV","AlignButton","editor","_s","selectedAlign","setSelectedAlign","handleFontChange","e","align","target","value","chain","focus","setTextAlign","run","children","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/components/AlignButton.tsx"],"sourcesContent":["import { Editor } from '@tiptap/react';\nimport React, { FC, useState } from 'react';\nimport { Level } from '@tiptap/extension-heading';\n\n//material\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\n\ninterface Props {\n    editor: Editor\n}\n\nconst AlignButton: FC<Props> = ({ editor }) => {\n    const [selectedAlign, setSelectedAlign] = useState('left');\n\n    const handleFontChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const align = e.target.value\n        editor.chain().focus().setTextAlign(align).run()\n        setSelectedAlign(align)\n    };\n\n    return (\n        <div>\n            {/* <label htmlFor=\"fontSelect\">Заголовок:</label> */}\n            <select id=\"fontSelect\" value={selectedAlign} onChange={handleFontChange}>\n                <option value={'left'}><FormatAlignLeftIcon /></option>\n                <option value={'center'}><FormatAlignCenterIcon /></option>\n                <option value={'right'}><FormatAlignRightIcon /></option>\n            </select>\n        </div>\n    );\n};\n\nexport default AlignButton"],"mappings":";;AACA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAG3C;AACA,OAAOC,mBAAmB,MAAM,oCAAoC;AACpE,OAAOC,qBAAqB,MAAM,sCAAsC;AACxE,OAAOC,oBAAoB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvE,MAAMC,WAAsB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAE1D,MAAMW,gBAAgB,GAAIC,CAAuC,IAAK;IAClE,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5BR,MAAM,CAACS,KAAK,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAACC,YAAY,CAACL,KAAK,CAAC,CAACM,GAAG,CAAC,CAAC;IAChDT,gBAAgB,CAACG,KAAK,CAAC;EAC3B,CAAC;EAED,oBACIR,OAAA;IAAAe,QAAA,eAEIf,OAAA;MAAQgB,EAAE,EAAC,YAAY;MAACN,KAAK,EAAEN,aAAc;MAACa,QAAQ,EAAEX,gBAAiB;MAAAS,QAAA,gBACrEf,OAAA;QAAQU,KAAK,EAAE,MAAO;QAAAK,QAAA,eAACf,OAAA,CAACJ,mBAAmB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvDrB,OAAA;QAAQU,KAAK,EAAE,QAAS;QAAAK,QAAA,eAACf,OAAA,CAACH,qBAAqB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DrB,OAAA;QAAQU,KAAK,EAAE,OAAQ;QAAAK,QAAA,eAACf,OAAA,CAACF,oBAAoB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAClB,EAAA,CAnBIF,WAAsB;AAAAqB,EAAA,GAAtBrB,WAAsB;AAqB5B,eAAeA,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}