{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Begunok3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Begunok3 = ({\n  audioUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const waveformData = useRef([]);\n  const animationRef = useRef();\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current.duration);\n        generateWaveformData();\n      });\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current.currentTime);\n      });\n    }\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n  const drawWaveform = useCallback(() => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 5;\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = width / (waveformData.current.length * zoomLevel);\n    const visibleBars = Math.ceil(width / barWidth);\n    const startIndex = Math.floor(scrollPosition / barWidth);\n    ctx.fillStyle = '#b7e1dd';\n    ctx.strokeStyle = '#b7e1dd';\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth - scrollPosition % barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2);\n      ctx.lineTo(x, height / 2 - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 - barHeight / 2);\n      ctx.lineTo(x + barWidth, height / 2);\n      ctx.lineTo(x + barWidth, height / 2 + barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + barHeight / 2);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    // Draw progress\n    const progressWidth = currentTime / duration * width;\n    ctx.fillStyle = '#357F78';\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth - scrollPosition % barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2);\n      ctx.lineTo(x, height / 2 - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 - barHeight / 2);\n      ctx.lineTo(x + barWidth, height / 2);\n      ctx.lineTo(x + barWidth, height / 2 + barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + barHeight / 2);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n\n    // Draw playhead (vertical line)\n    const playheadX = progressWidth - scrollPosition;\n    if (playheadX >= 0 && playheadX <= width) {\n      ctx.beginPath();\n      ctx.strokeStyle = '#357F78';\n      ctx.lineWidth = 2;\n      ctx.moveTo(playheadX, 0);\n      ctx.lineTo(playheadX, height);\n      ctx.stroke();\n    }\n    animationRef.current = requestAnimationFrame(drawWaveform);\n  }, [currentTime, duration, isExpanded, scrollPosition, zoomLevel]);\n  useEffect(() => {\n    drawWaveform();\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [drawWaveform]);\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 1500; // Increase the number of samples for better resolution\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n    drawWaveform();\n  };\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left + scrollPosition;\n    const clickProgress = x / (rect.width * zoomLevel);\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n  const handleScroll = e => {\n    if (isExpanded) {\n      const newScrollPosition = scrollPosition + e.deltaY;\n      const maxScroll = canvasRef.current.width * (zoomLevel - 1);\n      setScrollPosition(Math.max(0, Math.min(newScrollPosition, maxScroll)));\n    }\n  };\n  const smoothZoom = (targetZoom, duration = 300) => {\n    const startZoom = zoomLevel;\n    const startTime = performance.now();\n    const animate = currentTime => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeProgress = progress * (2 - progress); // easeOutQuad\n\n      const newZoom = startZoom + (targetZoom - startZoom) * easeProgress;\n      setZoomLevel(newZoom);\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n    requestAnimationFrame(animate);\n  };\n  const zoomIn = () => {\n    const newZoom = Math.min(zoomLevel * 2, 64);\n    smoothZoom(newZoom);\n  };\n  const zoomOut = () => {\n    const newZoom = Math.max(zoomLevel / 2, 1);\n    smoothZoom(newZoom);\n  };\n  const togglePlay = () => {\n    var _audioRef$current;\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      audioRef.current.play();\n    } else {\n      var _audioRef$current2;\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoomLevel(1);\n    setScrollPosition(0);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpand,\n      children: isExpanded ? 'Collapse' : 'Expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '98%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onClick: handleCanvasClick,\n        onWheel: handleScroll,\n        style: {\n          width: '100%',\n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Zoom: \", zoomLevel.toFixed(2), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(Begunok3, \"uXJLfgKTYT8oYt9tHFZQ9aY8RB0=\");\n_c = Begunok3;\nexport default Begunok3;\nvar _c;\n$RefreshReg$(_c, \"Begunok3\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","Begunok3","audioUrl","_s","isPlaying","setIsPlaying","isExpanded","setIsExpanded","currentTime","setCurrentTime","duration","setDuration","zoomLevel","setZoomLevel","scrollPosition","setScrollPosition","audioRef","canvasRef","waveformData","animationRef","current","addEventListener","generateWaveformData","cancelAnimationFrame","drawWaveform","length","canvas","ctx","getContext","dpr","window","devicePixelRatio","padding","width","offsetWidth","height","scale","clearRect","barWidth","visibleBars","Math","ceil","startIndex","floor","fillStyle","strokeStyle","i","dataIndex","x","barHeight","beginPath","moveTo","lineTo","closePath","fill","progressWidth","save","rect","clip","restore","playheadX","lineWidth","stroke","requestAnimationFrame","audioContext","AudioContext","webkitAudioContext","response","fetch","arrayBuffer","audioBuffer","decodeAudioData","rawData","getChannelData","samples","blockSize","filteredData","blockStart","sum","j","abs","push","multiplier","pow","max","map","n","handleCanvasClick","e","getBoundingClientRect","clientX","left","clickProgress","handleScroll","newScrollPosition","deltaY","maxScroll","min","smoothZoom","targetZoom","startZoom","startTime","performance","now","animate","elapsed","progress","easeProgress","newZoom","zoomIn","zoomOut","togglePlay","_audioRef$current","paused","play","_audioRef$current2","pause","toggleExpand","formatTime","time","minutes","seconds","toString","padStart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","ref","src","onWheel","cursor","toFixed","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Begunok3.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst Begunok3: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const waveformData = useRef<number[]>([]);\n  const animationRef = useRef<number>();\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current!.duration);\n        generateWaveformData();\n      });\n\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current!.currentTime);\n      });\n    }\n\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n\n  const drawWaveform = useCallback(() => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d')!;\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 5;\n\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = width / (waveformData.current.length * zoomLevel);\n    const visibleBars = Math.ceil(width / barWidth);\n    const startIndex = Math.floor(scrollPosition / barWidth);\n\n    ctx.fillStyle = '#b7e1dd';\n    ctx.strokeStyle = '#b7e1dd';\n\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n\n      const x = i * barWidth - (scrollPosition % barWidth);\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2);\n      ctx.lineTo(x, height / 2 - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 - barHeight / 2);\n      ctx.lineTo(x + barWidth, height / 2);\n      ctx.lineTo(x + barWidth, height / 2 + barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + barHeight / 2);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    // Draw progress\n    const progressWidth = (currentTime / duration) * width;\n    ctx.fillStyle = '#357F78';\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n\n      const x = i * barWidth - (scrollPosition % barWidth);\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2);\n      ctx.lineTo(x, height / 2 - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 - barHeight / 2);\n      ctx.lineTo(x + barWidth, height / 2);\n      ctx.lineTo(x + barWidth, height / 2 + barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + barHeight / 2);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    ctx.restore();\n\n    // Draw playhead (vertical line)\n    const playheadX = progressWidth - scrollPosition;\n    if (playheadX >= 0 && playheadX <= width) {\n      ctx.beginPath();\n      ctx.strokeStyle = '#357F78';\n      ctx.lineWidth = 2;\n      ctx.moveTo(playheadX, 0);\n      ctx.lineTo(playheadX, height);\n      ctx.stroke();\n    }\n\n    animationRef.current = requestAnimationFrame(drawWaveform);\n  }, [currentTime, duration, isExpanded, scrollPosition, zoomLevel]);\n\n  useEffect(() => {\n    drawWaveform();\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [drawWaveform]);\n\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n\n    const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 1500; // Increase the number of samples for better resolution\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n\n    drawWaveform();\n  };\n\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left + scrollPosition;\n    const clickProgress = x / (rect.width * zoomLevel);\n\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n\n  const handleScroll = (e: React.WheelEvent<HTMLCanvasElement>) => {\n    if (isExpanded) {\n      const newScrollPosition = scrollPosition + e.deltaY;\n      const maxScroll = canvasRef.current!.width * (zoomLevel - 1);\n      setScrollPosition(Math.max(0, Math.min(newScrollPosition, maxScroll)));\n    }\n  };\n\n  const smoothZoom = (targetZoom: number, duration: number = 300) => {\n    const startZoom = zoomLevel;\n    const startTime = performance.now();\n\n    const animate = (currentTime: number) => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeProgress = progress * (2 - progress); // easeOutQuad\n\n      const newZoom = startZoom + (targetZoom - startZoom) * easeProgress;\n      setZoomLevel(newZoom);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    requestAnimationFrame(animate);\n  };\n\n  const zoomIn = () => {\n    const newZoom = Math.min(zoomLevel * 2, 64);\n    smoothZoom(newZoom);\n  };\n\n  const zoomOut = () => {\n    const newZoom = Math.max(zoomLevel / 2, 1);\n    smoothZoom(newZoom);\n  };\n\n  const togglePlay = () => {\n    if (audioRef.current?.paused) {\n      audioRef.current.play();\n    } else {\n      audioRef.current?.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoomLevel(1);\n    setScrollPosition(0);\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-player\">\n      <button onClick={togglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n      <button onClick={toggleExpand}>\n        {isExpanded ? 'Collapse' : 'Expand'}\n      </button>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '98%' }}>\n        <audio ref={audioRef} src={audioUrl} />\n        <canvas\n          ref={canvasRef}\n          onClick={handleCanvasClick}\n          onWheel={handleScroll}\n          style={{\n            width: '100%',\n            height: isExpanded ? '300px' : '80px',\n            cursor: 'pointer'\n          }}\n        />\n      </div>\n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n      {isExpanded && (\n        <div>\n          <button onClick={zoomIn}>Zoom In</button>\n          <button onClick={zoomOut}>Zoom Out</button>\n          <span>Zoom: {zoomLevel.toFixed(2)}x</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Begunok3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}