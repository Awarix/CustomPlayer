{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Begunok3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Begunok3 = ({\n  audioUrl,\n  words\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  // const [zoom, setZoom] = useState(1);\n  // const [scrollPosition, setScrollPosition] = useState(0);\n\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const waveformData = useRef([]);\n  const animationRef = useRef();\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      scaledStart: word.start / audioDuration * audioData.length\n    }));\n  }, [words, audioData, audioDuration]);\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    const samplesPerPixel = audioData.length / zoom / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const x = (word.scaledStart - startSample) / samplesPerPixel;\n      if (x >= 0 && x <= width) {\n        // Draw vertical line\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.strokeStyle = word.color;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n\n        // Draw word label\n        ctx.fillStyle = word.color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word.word, x, 15);\n      }\n    });\n  }, [audioData, zoom, scrollPosition, scaledWords]);\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n\n      // Use the full audio data instead of downsampling\n      const filteredData = Array.from(channelData);\n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n    fetchAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    var _canvas$parentElement;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = ((_canvas$parentElement = canvas.parentElement) === null || _canvas$parentElement === void 0 ? void 0 : _canvas$parentElement.clientWidth) || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    drawWaveform();\n  }, [drawWaveform]);\n  const handleZoom = direction => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + width * (audioData.length / zoom) / width / 2;\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - width * (audioData.length / newZoom) / width / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n  const handleScroll = e => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left + scrollPosition;\n    const clickProgress = x / (rect.width * zoom);\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n  const smoothZoom = (targetZoom, duration = 300) => {\n    const startZoom = zoom;\n    const startTime = performance.now();\n    const animate = currentTime => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeProgress = progress * (2 - progress); // easeOutQuad\n\n      const newZoom = startZoom + (targetZoom - startZoom) * easeProgress;\n      setZoom(newZoom);\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n    requestAnimationFrame(animate);\n  };\n  const togglePlay = () => {\n    var _audioRef$current;\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      audioRef.current.play();\n    } else {\n      var _audioRef$current2;\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoom(1);\n    setScrollPosition(0);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpand,\n      children: isExpanded ? 'Collapse' : 'Expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '98%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onClick: handleCanvasClick\n        // onWheel={handleScroll}\n        ,\n        style: {\n          width: '100%',\n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('in'),\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('out'),\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Zoom: \", zoom.toFixed(2), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(Begunok3, \"D5q6WMqp6MXcdnkKSDgu5boSy20=\");\n_c = Begunok3;\nexport default Begunok3;\nvar _c;\n$RefreshReg$(_c, \"Begunok3\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","jsxDEV","_jsxDEV","Begunok3","audioUrl","words","_s","isPlaying","setIsPlaying","isExpanded","setIsExpanded","currentTime","setCurrentTime","duration","setDuration","audioRef","canvasRef","waveformData","animationRef","zoom","setZoom","scrollPosition","setScrollPosition","audioData","setAudioData","audioDuration","setAudioDuration","scaledWords","map","word","scaledStart","start","length","drawWaveform","canvas","current","ctx","getContext","dpr","window","devicePixelRatio","width","height","clearRect","beginPath","samplesPerPixel","startSample","Math","floor","endSample","min","ceil","i","x","y","moveTo","lineTo","strokeStyle","stroke","forEach","color","lineWidth","fillStyle","font","textAlign","fillText","fetchAudio","response","fetch","arrayBuffer","audioContext","AudioContext","webkitAudioContext","audioBuffer","decodeAudioData","channelData","getChannelData","filteredData","Array","from","_canvas$parentElement","parentWidth","parentElement","clientWidth","canvasWidth","style","handleZoom","direction","centerSample","prevZoom","newZoom","max","newScrollPosition","handleScroll","e","parseFloat","target","value","handleCanvasClick","rect","getBoundingClientRect","clientX","left","clickProgress","smoothZoom","targetZoom","startZoom","startTime","performance","now","animate","elapsed","progress","easeProgress","requestAnimationFrame","togglePlay","_audioRef$current","paused","play","_audioRef$current2","pause","toggleExpand","formatTime","time","minutes","seconds","toString","padStart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","ref","src","cursor","toFixed","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Begunok3.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\n\ninterface Word {\n  word: string;\n  color: string;\n  start: number;\n}\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n  words: Word[];\n}\n\n\n\nconst Begunok3: React.FC<AudioPlayerProps> = ({ audioUrl, words }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  // const [zoom, setZoom] = useState(1);\n  // const [scrollPosition, setScrollPosition] = useState(0);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const waveformData = useRef<number[]>([]);\n  const animationRef = useRef<number>();\n\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState<number[]>([]);\n  const [audioDuration, setAudioDuration] = useState(0);\n\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      scaledStart: (word.start / audioDuration) * audioData.length,\n    }));\n  }, [words, audioData, audioDuration]);\n\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    const samplesPerPixel = (audioData.length / zoom) / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const x = (word.scaledStart - startSample) / samplesPerPixel;\n      if (x >= 0 && x <= width) {\n        // Draw vertical line\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.strokeStyle = word.color;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n\n        // Draw word label\n        ctx.fillStyle = word.color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word.word, x, 15);\n      }\n    });\n\n  }, [audioData, zoom, scrollPosition, scaledWords, ]);\n\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      \n      // Use the full audio data instead of downsampling\n      const filteredData = Array.from(channelData);\n      \n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n\n    fetchAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = canvas.parentElement?.clientWidth || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n\n    drawWaveform();\n  }, [drawWaveform]);\n\n  const handleZoom = (direction: 'in' | 'out') => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + (width * (audioData.length / zoom) / width) / 2;\n\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - (width * (audioData.length / newZoom) / width) / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n\n\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left + scrollPosition;\n    const clickProgress = x / (rect.width * zoom);\n\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n\n  const smoothZoom = (targetZoom: number, duration: number = 300) => {\n    const startZoom = zoom;\n    const startTime = performance.now();\n\n    const animate = (currentTime: number) => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeProgress = progress * (2 - progress); // easeOutQuad\n\n      const newZoom = startZoom + (targetZoom - startZoom) * easeProgress;\n      setZoom(newZoom);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    requestAnimationFrame(animate);\n  };\n\n  const togglePlay = () => {\n    if (audioRef.current?.paused) {\n      audioRef.current.play();\n    } else {\n      audioRef.current?.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoom(1);\n    setScrollPosition(0);\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-player\">\n      <button onClick={togglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n      <button onClick={toggleExpand}>\n        {isExpanded ? 'Collapse' : 'Expand'}\n      </button>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '98%' }}>\n        <audio ref={audioRef} src={audioUrl} />\n        <canvas\n          ref={canvasRef}\n          onClick={handleCanvasClick}\n          // onWheel={handleScroll}\n          style={{\n            width: '100%',\n            height: isExpanded ? '300px' : '80px',\n            cursor: 'pointer'\n          }}\n        />\n      </div>\n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n      {isExpanded && (\n        <div>\n          <button onClick={() => handleZoom('in')}>Zoom In</button>\n          <button onClick={() => handleZoom('out')}>Zoom Out</button>\n          <span>Zoom: {zoom.toFixed(2)}x</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Begunok3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}