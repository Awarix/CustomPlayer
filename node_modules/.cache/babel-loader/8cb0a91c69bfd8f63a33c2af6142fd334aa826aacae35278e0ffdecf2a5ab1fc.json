{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/AudioPlayerW3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayerW3 = ({\n  audioUrl\n}) => {\n  _s();\n  var _audioBufferRef$curre;\n  const canvasRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const audioBufferRef = useRef(null);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  useEffect(() => {\n    const audioContext = new AudioContext();\n    audioContextRef.current = audioContext;\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      audioBufferRef.current = audioBuffer;\n      drawWaveform();\n    };\n    fetchAudio();\n    return () => {\n      audioContext.close();\n    };\n  }, [audioUrl]);\n  const drawWaveform = () => {\n    if (!canvasRef.current || !audioBufferRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.clearRect(0, 0, width, height);\n    const data = audioBufferRef.current.getChannelData(0);\n    const step = Math.ceil(data.length / (width * zoomLevel));\n    const amp = height / 2;\n    ctx.fillStyle = 'black';\n    for (let i = 0; i < width; i++) {\n      let min = 1;\n      let max = -1;\n      for (let j = 0; j < step; j++) {\n        const datum = data[i * step * zoomLevel + j];\n        if (datum < min) min = datum;\n        if (datum > max) max = datum;\n      }\n      ctx.fillRect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp));\n    }\n\n    // Draw current time indicator\n    const currentX = currentTime / audioBufferRef.current.duration * width;\n    ctx.fillStyle = 'red';\n    ctx.fillRect(currentX, 0, 2, height);\n  };\n  const handleZoomIn = () => {\n    setZoomLevel(zoomLevel * 2);\n  };\n  const handleZoomOut = () => {\n    setZoomLevel(Math.max(1, zoomLevel / 2));\n  };\n  const handleTimeChange = e => {\n    if (!audioBufferRef.current) return;\n    setCurrentTime(parseFloat(e.target.value) * audioBufferRef.current.duration);\n  };\n  useEffect(() => {\n    drawWaveform();\n  }, [zoomLevel, currentTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleZoomIn,\n      children: \"Zoom In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleZoomOut,\n      children: \"Zoom Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: \"0.01\",\n      value: currentTime / (((_audioBufferRef$curre = audioBufferRef.current) === null || _audioBufferRef$curre === void 0 ? void 0 : _audioBufferRef$curre.duration) || 1),\n      onChange: handleTimeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayerW3, \"6ROijAPsrOdsi6JirypcfyqSvj8=\");\n_c = AudioPlayerW3;\nexport default AudioPlayerW3;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayerW3\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","AudioPlayerW3","audioUrl","_s","_audioBufferRef$curre","canvasRef","audioContextRef","audioBufferRef","zoomLevel","setZoomLevel","currentTime","setCurrentTime","audioContext","AudioContext","current","fetchAudio","response","fetch","arrayBuffer","audioBuffer","decodeAudioData","drawWaveform","close","canvas","ctx","getContext","width","height","clearRect","data","getChannelData","step","Math","ceil","length","amp","fillStyle","i","min","max","j","datum","fillRect","currentX","duration","handleZoomIn","handleZoomOut","handleTimeChange","e","parseFloat","target","value","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/AudioPlayerW3.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  audioUrl: string;\n}\n\nconst AudioPlayerW3: React.FC<Props> = ({ audioUrl }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const audioContextRef = useRef<AudioContext | null>(null);\n  const audioBufferRef = useRef<AudioBuffer | null>(null);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    const audioContext = new AudioContext();\n    audioContextRef.current = audioContext;\n\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      audioBufferRef.current = audioBuffer;\n      drawWaveform();\n    };\n\n    fetchAudio();\n\n    return () => {\n      audioContext.close();\n    };\n  }, [audioUrl]);\n\n  const drawWaveform = () => {\n    if (!canvasRef.current || !audioBufferRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.clearRect(0, 0, width, height);\n\n    const data = audioBufferRef.current.getChannelData(0);\n    const step = Math.ceil(data.length / (width * zoomLevel));\n    const amp = height / 2;\n\n    ctx.fillStyle = 'black';\n    for (let i = 0; i < width; i++) {\n      let min = 1;\n      let max = -1;\n      for (let j = 0; j < step; j++) {\n        const datum = data[(i * step * zoomLevel) + j];\n        if (datum < min) min = datum;\n        if (datum > max) max = datum;\n      }\n      ctx.fillRect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp));\n    }\n\n    // Draw current time indicator\n    const currentX = (currentTime / audioBufferRef.current.duration) * width;\n    ctx.fillStyle = 'red';\n    ctx.fillRect(currentX, 0, 2, height);\n  };\n\n  const handleZoomIn = () => {\n    setZoomLevel(zoomLevel * 2);\n  };\n\n  const handleZoomOut = () => {\n    setZoomLevel(Math.max(1, zoomLevel / 2));\n  };\n\n  const handleTimeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!audioBufferRef.current) return;\n    setCurrentTime(parseFloat(e.target.value) * audioBufferRef.current.duration);\n  };\n\n  useEffect(() => {\n    drawWaveform();\n  }, [zoomLevel, currentTime]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={500} height={100} />\n      <button onClick={handleZoomIn}>Zoom In</button>\n      <button onClick={handleZoomOut}>Zoom Out</button>\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.01\"\n        value={currentTime / (audioBufferRef.current?.duration || 1)}\n        onChange={handleTimeChange}\n      />\n    </div>\n  );\n};\n\nexport default AudioPlayerW3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}