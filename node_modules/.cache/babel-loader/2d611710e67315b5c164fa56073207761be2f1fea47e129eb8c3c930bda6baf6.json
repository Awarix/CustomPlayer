{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/wavesurfer/SuperAudioPlayer/ExpandedPlayer.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport { WaveSurfer, WaveForm } from \"wavesurfer-react\";\nimport { currTimeSubscriber } from \"../../../subscribers/PlayerSubscriber\";\n// import { SegmentModel as Segment } from \"../AudioContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelinePlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\");\nconst ExpandedPlayer = ({\n  url,\n  isPlay,\n  setIsPlay,\n  currentTime,\n  setCurrentTime,\n  activeSegmentProp,\n  keywords,\n  channelCount\n}) => {\n  _s();\n  const [autoCenter, setAutoCenter] = useState(true);\n  const [zoom, setZoom] = useState(10);\n  const [activeSegment, setActiveSegment] = useState(activeSegmentProp);\n  const [isWavesurferReady, setIsWavesurferReady] = useState(false);\n  const plugins = useMemo(() => [{\n    plugin: TimelinePlugin,\n    options: {\n      container: \"#timeline\"\n    }\n  }], []);\n  const wavesurferRef = useRef(null);\n  const handleWSMount = useCallback(waveSurfer => {\n    wavesurferRef.current = waveSurfer;\n    wavesurferRef.current.load(url);\n    wavesurferRef.current.on(\"ready\", () => {\n      var _wavesurferRef$curren;\n      (_wavesurferRef$curren = wavesurferRef.current) === null || _wavesurferRef$curren === void 0 ? void 0 : _wavesurferRef$curren.setCurrentTime(currentTime);\n      if (isPlay) {\n        var _wavesurferRef$curren2;\n        (_wavesurferRef$curren2 = wavesurferRef.current) === null || _wavesurferRef$curren2 === void 0 ? void 0 : _wavesurferRef$curren2.play();\n      }\n    });\n    wavesurferRef.current.on(\"audioprocess\", () => {\n      if (wavesurferRef.current) {\n        setCurrentTime(wavesurferRef.current.getCurrentTime());\n      }\n    });\n  }, [url, currentTime, isPlay, setCurrentTime]);\n  const setZoomClick = zoom => {\n    if (zoom < 5) zoom = 5;\n    if (zoom > 1000) zoom = 1000;\n    setZoom(zoom);\n  };\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    setZoom(10);\n    if (url === \"\") return;\n    wavesurferRef.current.load(url);\n  }, [url]);\n  useEffect(() => {\n    if (wavesurferRef.current) {\n      wavesurferRef.current.zoom(zoom);\n      wavesurferRef.current.fireEvent('zoom', zoom);\n    }\n  }, [zoom]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    if (isPlay) {\n      wavesurferRef.current.play();\n    } else {\n      wavesurferRef.current.pause();\n    }\n  }, [isPlay]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    setActiveSegment(activeSegmentProp);\n    if (activeSegmentProp) {\n      let zoomFactor = 500;\n      const width = wavesurferRef.current.drawer.wrapper.clientWidth;\n      const segmentDuration = activeSegmentProp.End - activeSegmentProp.Start;\n      for (let i = 0; i < 10; i++) {\n        if (segmentDuration * zoomFactor < width) break;\n        zoomFactor /= 2;\n      }\n      if (zoomFactor < 5) zoomFactor = 5;\n      setZoomClick(zoomFactor);\n      setAutoCenter(false);\n      setIsPlay(true);\n      const total = wavesurferRef.current.getDuration();\n      if (total > 0) {\n        const centerTime = activeSegmentProp.Start + segmentDuration / 2;\n        const t1 = centerTime / total;\n        wavesurferRef.current.zoom(zoomFactor);\n        wavesurferRef.current.seekAndCenter(t1);\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n        wavesurferRef.current.play();\n      }\n    }\n    const subscription = currTimeSubscriber.subscribe(currentTime => {\n      if (wavesurferRef.current && activeSegmentProp && currentTime >= activeSegmentProp.End) {\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [activeSegmentProp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      position: \"relative\",\n      marginTop: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        size: \"medium\",\n        onClick: () => setIsPlay(!isPlay),\n        children: isPlay ? /*#__PURE__*/_jsxDEV(PauseCircleFilledIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        size: \"medium\",\n        title: \"\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0438\\u0442\\u044C \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\",\n        onClick: () => setZoomClick(zoom * 2),\n        children: /*#__PURE__*/_jsxDEV(ZoomInIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        size: \"medium\",\n        title: \"\\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0438\\u0442\\u044C \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\",\n        onClick: () => setZoomClick(zoom / 2),\n        children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WaveSurfer, {\n      onMount: handleWSMount,\n      plugins: plugins,\n      children: [/*#__PURE__*/_jsxDEV(WaveForm, {\n        id: \"waveform\",\n        waveColor: \"#b7e1dd\",\n        progressColor: \"#4Db6AC\",\n        cursorColor: \"#357F78\",\n        autoCenter: autoCenter,\n        splitChannels: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"20px\"\n        },\n        id: \"timeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpandedPlayer, \"9GReZJQw0u3X/nmfReeZXSKY+/w=\");\n_c = ExpandedPlayer;\nvar _c;\n$RefreshReg$(_c, \"ExpandedPlayer\");","map":{"version":3,"names":["useMemo","useRef","useState","useEffect","useCallback","IconButton","PlayCircleFilledIcon","PauseCircleFilledIcon","ZoomInIcon","ZoomOutIcon","WaveSurfer","WaveForm","currTimeSubscriber","jsxDEV","_jsxDEV","TimelinePlugin","require","ExpandedPlayer","url","isPlay","setIsPlay","currentTime","setCurrentTime","activeSegmentProp","keywords","channelCount","_s","autoCenter","setAutoCenter","zoom","setZoom","activeSegment","setActiveSegment","isWavesurferReady","setIsWavesurferReady","plugins","plugin","options","container","wavesurferRef","handleWSMount","waveSurfer","current","load","on","_wavesurferRef$curren","_wavesurferRef$curren2","play","getCurrentTime","setZoomClick","fireEvent","pause","zoomFactor","width","drawer","wrapper","clientWidth","segmentDuration","End","Start","i","total","getDuration","centerTime","t1","seekAndCenter","subscription","subscribe","unsubscribe","style","position","marginTop","children","color","size","onClick","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","title","onMount","id","waveColor","progressColor","cursorColor","splitChannels","height","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/wavesurfer/SuperAudioPlayer/ExpandedPlayer.tsx"],"sourcesContent":["import { FC, useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { WaveSurfer, WaveForm } from \"wavesurfer-react\";\nimport { currTimeSubscriber } from \"../../../subscribers/PlayerSubscriber\";\n// import { SegmentModel as Segment } from \"../AudioContext\";\nimport WaveSurferClass from \"wavesurfer.js\";\nimport { SegmentModel as Segment } from \"../../AudioContext\";\n\nconst TimelinePlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\");\n\nconst ExpandedPlayer: FC<{ url: string; isPlay: boolean; setIsPlay: (play: boolean) => void; currentTime: number; setCurrentTime: (time: number) => void; activeSegmentProp: Segment | null; keywords: { keyword: string; color: string }[]; channelCount: number }> = \n({ url, isPlay, setIsPlay, currentTime, setCurrentTime, activeSegmentProp, keywords, channelCount }) => {\n  const [autoCenter, setAutoCenter] = useState<boolean>(true);\n  const [zoom, setZoom] = useState<number>(10);\n  const [activeSegment, setActiveSegment] = useState<Segment | null>(activeSegmentProp);\n  const [isWavesurferReady, setIsWavesurferReady] = useState<boolean>(false);\n\n  const plugins = useMemo(() => [\n    {\n      plugin: TimelinePlugin,\n      options: { container: \"#timeline\" },\n    },\n  ], []);\n\n  const wavesurferRef = useRef<any>(null);\n\n  const handleWSMount = useCallback((waveSurfer) => {\n    wavesurferRef.current = waveSurfer;\n    wavesurferRef.current.load(url);\n    \n    wavesurferRef.current.on(\"ready\", () => {\n      wavesurferRef.current?.setCurrentTime(currentTime);\n      if (isPlay) {\n        wavesurferRef.current?.play();\n      }\n    });\n\n    wavesurferRef.current.on(\"audioprocess\", () => {\n      if (wavesurferRef.current) {\n        setCurrentTime(wavesurferRef.current.getCurrentTime());\n      }\n    });\n  }, [url, currentTime, isPlay, setCurrentTime]);\n\n  const setZoomClick = (zoom: number) => {\n    if (zoom < 5) zoom = 5;\n    if (zoom > 1000) zoom = 1000;\n    setZoom(zoom);\n  };\n\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n\n    setZoom(10);\n\n    if (url === \"\") return;\n\n    wavesurferRef.current.load(url);\n  }, [url]);\n\n  useEffect(() => {\n    if (wavesurferRef.current) {\n      wavesurferRef.current.zoom(zoom);\n      wavesurferRef.current.fireEvent('zoom', zoom);\n    }\n  }, [zoom]);\n\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n\n    if (isPlay) {\n      wavesurferRef.current.play();\n    } else {\n      wavesurferRef.current.pause();\n    }\n  }, [isPlay]);\n\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n\n    setActiveSegment(activeSegmentProp);\n\n    if (activeSegmentProp) {\n      let zoomFactor = 500;\n      const width = wavesurferRef.current.drawer.wrapper.clientWidth;\n      const segmentDuration = activeSegmentProp.End - activeSegmentProp.Start;\n\n      for (let i = 0; i < 10; i++) {\n        if (segmentDuration * zoomFactor < width) break;\n        zoomFactor /= 2;\n      }\n      if (zoomFactor < 5) zoomFactor = 5;\n\n      setZoomClick(zoomFactor);\n      setAutoCenter(false);\n      setIsPlay(true);\n\n      const total = wavesurferRef.current.getDuration();\n      if (total > 0) {\n        const centerTime = activeSegmentProp.Start + (segmentDuration) / 2;\n        const t1 = centerTime / total;\n\n        wavesurferRef.current.zoom(zoomFactor);\n        wavesurferRef.current.seekAndCenter(t1);\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n        wavesurferRef.current.play();\n      }\n    }\n\n    const subscription = currTimeSubscriber.subscribe(currentTime => {\n      if (wavesurferRef.current && activeSegmentProp && currentTime >= activeSegmentProp.End) {\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [activeSegmentProp]);\n\n  return (\n    <div style={{ width: \"100%\", position: \"relative\", marginTop: \"10px\" }}>\n      <div>\n        <IconButton\n          color=\"primary\"\n          size=\"medium\"\n          onClick={() => setIsPlay(!isPlay)}\n        >\n          {isPlay ? <PauseCircleFilledIcon fontSize=\"large\" /> : <PlayCircleFilledIcon fontSize=\"large\" />}\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          size=\"medium\"\n          title=\"Увеличить масштаб\"\n          onClick={() => setZoomClick(zoom * 2)}\n        >\n          <ZoomInIcon fontSize=\"large\" />\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          size=\"medium\"\n          title=\"Уменьшить масштаб\"\n          onClick={() => setZoomClick(zoom / 2)}\n        >\n          <ZoomOutIcon fontSize=\"large\" />\n        </IconButton>\n      </div>\n      <WaveSurfer onMount={handleWSMount} plugins={plugins}>\n        <WaveForm\n          id=\"waveform\"\n          waveColor=\"#b7e1dd\"\n          progressColor=\"#4Db6AC\"\n          cursorColor=\"#357F78\"\n          autoCenter={autoCenter}\n          splitChannels={true}\n        />\n        <div style={{ height: \"20px\" }} id=\"timeline\" />\n      </WaveSurfer>\n\n      {/* {isWavesurferReady && wavesurferRef.current && keywords.map((kw, index) => (\n        <WordMarker\n          key={index}\n          keyword={kw.keyword}\n          color={kw.color}\n          wavesurfer={wavesurferRef.current}\n          zoom={zoom}\n          isReady={isWavesurferReady}\n          channelCount={channelCount}\n        />\n      ))} */}\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}