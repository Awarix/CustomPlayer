{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/components/Timestamps.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Slider } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timestamps = () => {\n  _s();\n  const [blockSize, setBlockSize] = useState(5);\n  const timeBlocks = 595 / blockSize;\n  const handleSliderChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      setBlockSize(newValue);\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    const format = val => String(val).padStart(2, '0');\n    return `00:${format(minutes)}:${format(remainingSeconds)}`;\n  };\n  const handleBlockClick = time => {\n    alert(`Время начала: ${formatTime(time)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      margin: '0.5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      min: 10,\n      max: 30,\n      value: blockSize,\n      onChange: handleSliderChange,\n      \"aria-labelledby\": \"step-slider\",\n      valueLabelDisplay: \"auto\",\n      marks: true,\n      step: 10,\n      style: {\n        width: '200px',\n        marginTop: '3rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      style: {\n        width: '200px',\n        gap: '1rem',\n        overflow: 'scroll',\n        height: '800px',\n        position: 'relative'\n      },\n      children: Array.from(Array(timeBlocks)).map((_, index) => {\n        const startTime = index * blockSize;\n        const endTime = Math.min((index + 1) * blockSize, 600); // Ограничиваем конечное время до 600 секунд\n        const endBlockTime = index === timeBlocks - 1 ? 600 : Math.min((index + 1) * blockSize, 600); // Вычисляем время для последнего блока\n\n        return /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => handleBlockClick(startTime),\n          style: {\n            cursor: 'pointer',\n            padding: '10px',\n            background: 'lightblue'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: formatTime(startTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: formatTime(endTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), index === timeBlocks - 1 && /*#__PURE__*/_jsxDEV(Typography, {\n            children: formatTime(endBlockTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 44\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Timestamps, \"unvimKL7kLYCZOW3HSc9ZNBCFaU=\");\n_c = Timestamps;\nexport default Timestamps;\nvar _c;\n$RefreshReg$(_c, \"Timestamps\");","map":{"version":3,"names":["React","useState","Box","Typography","Slider","jsxDEV","_jsxDEV","Timestamps","_s","blockSize","setBlockSize","timeBlocks","handleSliderChange","event","newValue","formatTime","seconds","minutes","Math","floor","remainingSeconds","format","val","String","padStart","handleBlockClick","time","alert","style","margin","children","min","max","value","onChange","valueLabelDisplay","marks","step","width","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","overflow","height","position","Array","from","map","_","index","startTime","endTime","endBlockTime","onClick","cursor","padding","background","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/components/Timestamps.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Slider } from '@material-ui/core';\n\nconst Timestamps: React.FC = () => {\n  const [blockSize, setBlockSize] = useState<number>(5);\n\n  const timeBlocks = 595 / blockSize;\n\n  const handleSliderChange = (event: any, newValue: number | number[]) => {\n    if (typeof newValue === 'number') {\n      setBlockSize(newValue);\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n  \n    const format = (val: number) => String(val).padStart(2, '0');\n    return `00:${format(minutes)}:${format(remainingSeconds)}`;\n  };\n  \n  const handleBlockClick = (time: number) => {\n    alert(`Время начала: ${formatTime(time)}`);\n  }\n\n  return (\n    <Box style={{margin: '0.5rem'}}>\n      <Slider\n        min={10}\n        max={30}\n        value={blockSize}\n        onChange={handleSliderChange}\n        aria-labelledby=\"step-slider\"\n        valueLabelDisplay=\"auto\"\n        marks={true}\n        step={10}\n        style={{width: '200px',marginTop: '3rem'}}\n      />\n      <Box display=\"flex\" flexDirection=\"column\" style={{width: '200px', gap: '1rem', overflow: 'scroll', height: '800px', position: 'relative', }}>\n      {Array.from(Array(timeBlocks)).map((_, index) => {\n          const startTime = index * blockSize;\n          const endTime = Math.min((index + 1) * blockSize, 600); // Ограничиваем конечное время до 600 секунд\n          const endBlockTime = index === timeBlocks - 1 ? 600 : Math.min((index + 1) * blockSize, 600); // Вычисляем время для последнего блока\n\n          return (\n            <Box key={index} onClick={() => handleBlockClick(startTime)} style={{ cursor: 'pointer', padding: '10px', background: 'lightblue' }}>\n              <Typography>{formatTime(startTime)}</Typography>\n              <Typography>{formatTime(endTime)}</Typography>\n              {index === timeBlocks - 1 && <Typography>{formatTime(endBlockTime)}</Typography>}\n            </Box>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Timestamps;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}