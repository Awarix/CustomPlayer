{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/graph/CallGraph.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallGraph = ({\n  people,\n  width,\n  height\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Clear canvas\n    context.clearRect(0, 0, width, height);\n    const graph = generateCallGraph(people);\n    const simulation = d3.forceSimulation(graph.nodes).force('link', d3.forceLink(graph.links).id(d => d.id)).force('charge', d3.forceManyBody()).force('center', d3.forceCenter(width / 2, height / 2));\n    simulation.on('tick', () => {\n      context.clearRect(0, 0, width, height);\n\n      // Draw links\n      context.strokeStyle = 'rgba(153, 153, 153, 0.6)';\n      context.beginPath();\n      graph.links.forEach(d => {\n        context.moveTo(d.source.x, d.source.y);\n        context.lineTo(d.target.x, d.target.y);\n      });\n      context.stroke();\n\n      // Draw nodes\n      context.fillStyle = '#69b3a2';\n      graph.nodes.forEach(d => {\n        context.beginPath();\n        context.moveTo(d.x, d.y);\n        context.arc(d.x, d.y, 5, 0, 2 * Math.PI);\n        context.fill();\n      });\n    });\n\n    // Add zoom functionality\n    const zoom = d3.zoom().scaleExtent([0.1, 10]).on('zoom', event => {\n      context.save();\n      context.clearRect(0, 0, width, height);\n      context.translate(event.transform.x, event.transform.y);\n      context.scale(event.transform.k, event.transform.k);\n      simulation.tick();\n      context.restore();\n    });\n    d3.select(canvas).call(zoom);\n  }, [people, width, height]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      width,\n      height\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n};\n_s(CallGraph, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CallGraph;\nfunction generateCallGraph(people) {\n  const nodes = [];\n  const links = [];\n  people.forEach(person => {\n    nodes.push({\n      id: person.phone,\n      name: `${person.name} ${person.surname}`\n    });\n  });\n  people.forEach(person => {\n    person.outgoing.forEach(outgoingCall => {\n      links.push({\n        source: person.phone,\n        target: outgoingCall\n      });\n    });\n  });\n  return {\n    nodes,\n    links\n  };\n}\nexport default CallGraph;\nvar _c;\n$RefreshReg$(_c, \"CallGraph\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","CallGraph","people","width","height","_s","canvasRef","current","canvas","context","getContext","clearRect","graph","generateCallGraph","simulation","forceSimulation","nodes","force","forceLink","links","id","d","forceManyBody","forceCenter","on","strokeStyle","beginPath","forEach","moveTo","source","x","y","lineTo","target","stroke","fillStyle","arc","Math","PI","fill","zoom","scaleExtent","event","save","translate","transform","scale","k","tick","restore","select","call","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","person","push","phone","name","surname","outgoing","outgoingCall","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/graph/CallGraph.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { Person, Graph, Node, Link } from './types';\n\ninterface CallGraphProps {\n  people: Person[];\n  width: number;\n  height: number;\n}\n\nconst CallGraph: React.FC<CallGraphProps> = ({ people, width, height }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d')!;\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Clear canvas\n    context.clearRect(0, 0, width, height);\n\n    const graph = generateCallGraph(people);\n\n    const simulation = d3.forceSimulation(graph.nodes)\n      .force('link', d3.forceLink<Node, Link>(graph.links).id(d => d.id))\n      .force('charge', d3.forceManyBody())\n      .force('center', d3.forceCenter(width / 2, height / 2));\n\n    simulation.on('tick', () => {\n      context.clearRect(0, 0, width, height);\n\n      // Draw links\n      context.strokeStyle = 'rgba(153, 153, 153, 0.6)';\n      context.beginPath();\n      graph.links.forEach(d => {\n        context.moveTo((d.source as unknown as Node).x!, (d.source as unknown as Node).y!);\n        context.lineTo((d.target as unknown as Node).x!, (d.target as unknown as Node).y!);\n      });\n      context.stroke();\n\n      // Draw nodes\n      context.fillStyle = '#69b3a2';\n      graph.nodes.forEach(d => {\n        context.beginPath();\n        context.moveTo(d.x!, d.y!);\n        context.arc(d.x!, d.y!, 5, 0, 2 * Math.PI);\n        context.fill();\n      });\n    });\n\n    // Add zoom functionality\n    const zoom = d3.zoom<HTMLCanvasElement, unknown>()\n      .scaleExtent([0.1, 10])\n      .on('zoom', (event) => {\n        context.save();\n        context.clearRect(0, 0, width, height);\n        context.translate(event.transform.x, event.transform.y);\n        context.scale(event.transform.k, event.transform.k);\n        simulation.tick();\n        context.restore();\n      });\n\n    d3.select(canvas).call(zoom);\n\n  }, [people, width, height]);\n\n  return <canvas ref={canvasRef} style={{ width, height }} />;\n};\n\nfunction generateCallGraph(people: Person[]): Graph {\n  const nodes: Node[] = [];\n  const links: Link[] = [];\n\n  people.forEach(person => {\n    nodes.push({ id: person.phone, name: `${person.name} ${person.surname}` });\n  });\n\n  people.forEach(person => {\n    person.outgoing.forEach(outgoingCall => {\n      links.push({ source: person.phone, target: outgoingCall });\n    });\n  });\n\n  return { nodes, links };\n}\n\nexport default CallGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}