{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Friday/CustomAudio.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomPlayer = ({\n  audioUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const waveformData = useRef([]);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current.duration);\n        generateWaveformData();\n      });\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current.currentTime);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    drawWaveform();\n  }, [isExpanded, currentTime]);\n  const togglePlay = () => {\n    var _audioRef$current;\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      audioRef.current.play();\n    } else {\n      var _audioRef$current2;\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 200;\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n    drawWaveform();\n  };\n  const drawWaveform = () => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = width / waveformData.current.length;\n    const progress = currentTime / duration;\n    ctx.fillStyle = '#D1D6DA';\n    ctx.strokeStyle = '#D1D6DA';\n    for (let i = 0; i < waveformData.current.length; i++) {\n      const x = i * barWidth;\n      const barHeight = waveformData.current[i] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x + barWidth / 2, height / 2 + padding);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n\n    // Draw progress\n    const progressWidth = width * progress;\n    ctx.fillStyle = '#1976D2';\n    ctx.strokeStyle = '#1976D2';\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n    for (let i = 0; i < waveformData.current.length; i++) {\n      const x = i * barWidth;\n      const barHeight = waveformData.current[i] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x + barWidth / 2, height / 2 + padding);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n    ctx.restore();\n  };\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = x / rect.width;\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpand,\n      children: isExpanded ? 'Collapse' : 'Expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onClick: handleCanvasClick,\n      style: {\n        width: '100%',\n        height: isExpanded ? '300px' : '80px',\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomPlayer, \"fR1S+hFNa4JIQzH87FqhEaAX92s=\");\n_c = CustomPlayer;\nexport default CustomPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","CustomPlayer","audioUrl","_s","isPlaying","setIsPlaying","isExpanded","setIsExpanded","currentTime","setCurrentTime","duration","setDuration","audioRef","canvasRef","waveformData","current","addEventListener","generateWaveformData","drawWaveform","togglePlay","_audioRef$current","paused","play","_audioRef$current2","pause","toggleExpand","formatTime","time","minutes","Math","floor","seconds","toString","padStart","audioContext","window","AudioContext","webkitAudioContext","response","fetch","arrayBuffer","audioBuffer","decodeAudioData","rawData","getChannelData","samples","blockSize","length","filteredData","i","blockStart","sum","j","abs","push","multiplier","pow","max","map","n","canvas","ctx","getContext","dpr","devicePixelRatio","padding","width","offsetWidth","height","scale","clearRect","barWidth","progress","fillStyle","strokeStyle","x","barHeight","beginPath","moveTo","lineTo","stroke","progressWidth","save","rect","clip","restore","handleCanvasClick","e","getBoundingClientRect","clientX","left","clickProgress","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","style","cursor","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Friday/CustomAudio.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst CustomPlayer: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const waveformData = useRef<number[]>([]);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current!.duration);\n        generateWaveformData();\n      });\n\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current!.currentTime);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    drawWaveform();\n  }, [isExpanded, currentTime]);\n\n  const togglePlay = () => {\n    if (audioRef.current?.paused) {\n      audioRef.current.play();\n    } else {\n      audioRef.current?.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n\n    const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 200;\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n\n    drawWaveform();\n  };\n\n  const drawWaveform = () => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d')!;\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = width / waveformData.current.length;\n    const progress = currentTime / duration;\n\n    ctx.fillStyle = '#D1D6DA';\n    ctx.strokeStyle = '#D1D6DA';\n\n    for (let i = 0; i < waveformData.current.length; i++) {\n      const x = i * barWidth;\n      const barHeight = waveformData.current[i] * (height - padding * 2);\n\n      ctx.beginPath();\n      ctx.moveTo(x + barWidth / 2, height / 2 + padding);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n\n    // Draw progress\n    const progressWidth = width * progress;\n    ctx.fillStyle = '#1976D2';\n    ctx.strokeStyle = '#1976D2';\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n\n    for (let i = 0; i < waveformData.current.length; i++) {\n      const x = i * barWidth;\n      const barHeight = waveformData.current[i] * (height - padding * 2);\n\n      ctx.beginPath();\n      ctx.moveTo(x + barWidth / 2, height / 2 + padding);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  };\n\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = x / rect.width;\n\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n\n  return (\n    <div className=\"audio-player\">\n      <button onClick={togglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n      <button onClick={toggleExpand}>\n        {isExpanded ? 'Collapse' : 'Expand'}\n      </button>\n      <audio ref={audioRef} src={audioUrl} />\n      <canvas \n        ref={canvasRef} \n        onClick={handleCanvasClick}\n        style={{ \n          width: '100%', \n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }} \n      />\n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}