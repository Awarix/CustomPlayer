{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZoomTest3 = ({\n  audioUrl,\n  words\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    const step = width / (audioData.length / zoom);\n    const startIndex = Math.floor(scrollPosition / step);\n    const endIndex = Math.min(startIndex + Math.ceil(width / step), audioData.length);\n    for (let i = startIndex; i < endIndex; i++) {\n      const x = (i - startIndex) * step;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startIndex) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Отрисовка слов\n    words.forEach(({\n      word,\n      color,\n      start\n    }) => {\n      const wordPosition = start * (audioData.length / (zoom * audioData.length)); // Правильный пересчёт позиции слова\n      const wordX = wordPosition * step - scrollPosition;\n      if (wordX >= 0 && wordX <= width) {\n        // Вертикальная линия\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.moveTo(wordX, 0);\n        ctx.lineTo(wordX, height);\n        ctx.stroke();\n\n        // Текст над линией\n        ctx.fillStyle = color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word, wordX, 12);\n      }\n    });\n  }, [audioData, zoom, scrollPosition, words]);\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      const samples = 1000;\n      const blockSize = Math.floor(channelData.length / samples);\n      const filteredData = [];\n      for (let i = 0; i < samples; i++) {\n        const blockStart = blockSize * i;\n        let sum = 0;\n        for (let j = 0; j < blockSize; j++) {\n          sum += Math.abs(channelData[blockStart + j]);\n        }\n        filteredData.push(sum / blockSize);\n      }\n      setAudioData(filteredData);\n    };\n    fetchAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    var _canvas$parentElement;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = ((_canvas$parentElement = canvas.parentElement) === null || _canvas$parentElement === void 0 ? void 0 : _canvas$parentElement.clientWidth) || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    drawWaveform();\n  }, [drawWaveform]);\n  const handleZoom = direction => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerPosition = scrollPosition + width / 2;\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerPosition * (newZoom / prevZoom) - width / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n  const handleScroll = e => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '2000px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('out'),\n        disabled: zoom === 1,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('in'),\n        disabled: zoom === 64,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), zoom > 1 && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: canvasRef.current ? canvasRef.current.width / window.devicePixelRatio * (zoom - 1) : 0,\n      value: scrollPosition,\n      onChange: handleScroll,\n      style: {\n        width: '2000px',\n        margin: '10px auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(ZoomTest3, \"bJsBbjrA+narpHLwAaobRkaZwLU=\");\n_c = ZoomTest3;\nexport default ZoomTest3;\nvar _c;\n$RefreshReg$(_c, \"ZoomTest3\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsxDEV","_jsxDEV","ZoomTest3","audioUrl","words","_s","canvasRef","zoom","setZoom","scrollPosition","setScrollPosition","audioData","setAudioData","drawWaveform","canvas","current","ctx","getContext","dpr","window","devicePixelRatio","width","height","clearRect","beginPath","step","length","startIndex","Math","floor","endIndex","min","ceil","i","x","y","moveTo","lineTo","strokeStyle","stroke","forEach","word","color","start","wordPosition","wordX","fillStyle","font","textAlign","fillText","fetchAudio","response","fetch","arrayBuffer","audioContext","AudioContext","webkitAudioContext","audioBuffer","decodeAudioData","channelData","getChannelData","samples","blockSize","filteredData","blockStart","sum","j","abs","push","_canvas$parentElement","parentWidth","parentElement","clientWidth","canvasWidth","style","handleZoom","direction","centerPosition","prevZoom","newZoom","max","newScrollPosition","handleScroll","e","parseFloat","target","value","children","margin","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","onChange","display","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest3.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\n\ninterface Word {\n  word: string;\n  color: string;\n  start: number; // Время начала слова в секундах\n}\n\ninterface WaveformProps {\n  audioUrl: string;\n  words: Word[];\n}\n\nconst ZoomTest3: React.FC<WaveformProps> = ({ audioUrl, words }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState<number[]>([]);\n\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    const step = width / (audioData.length / zoom);\n    const startIndex = Math.floor(scrollPosition / step);\n    const endIndex = Math.min(startIndex + Math.ceil(width / step), audioData.length);\n\n    for (let i = startIndex; i < endIndex; i++) {\n      const x = (i - startIndex) * step;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startIndex) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Отрисовка слов\n    words.forEach(({ word, color, start }) => {\n      const wordPosition = start * (audioData.length / (zoom * audioData.length)); // Правильный пересчёт позиции слова\n      const wordX = wordPosition * step - scrollPosition;\n\n      if (wordX >= 0 && wordX <= width) {\n        // Вертикальная линия\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.moveTo(wordX, 0);\n        ctx.lineTo(wordX, height);\n        ctx.stroke();\n\n        // Текст над линией\n        ctx.fillStyle = color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word, wordX, 12);\n      }\n    });\n  }, [audioData, zoom, scrollPosition, words]);\n\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      const samples = 1000;\n      const blockSize = Math.floor(channelData.length / samples);\n      const filteredData = [];\n      for (let i = 0; i < samples; i++) {\n        const blockStart = blockSize * i;\n        let sum = 0;\n        for (let j = 0; j < blockSize; j++) {\n          sum += Math.abs(channelData[blockStart + j]);\n        }\n        filteredData.push(sum / blockSize);\n      }\n      setAudioData(filteredData);\n    };\n\n    fetchAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = canvas.parentElement?.clientWidth || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n\n    drawWaveform();\n  }, [drawWaveform]);\n\n  const handleZoom = (direction: 'in' | 'out') => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerPosition = scrollPosition + width / 2;\n\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerPosition * (newZoom / prevZoom) - width / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ width: '2000px', margin: '0 auto' }}>\n        <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n      </div>\n      <div>\n        <button onClick={() => handleZoom('out')} disabled={zoom === 1}>Zoom Out</button>\n        <button onClick={() => handleZoom('in')} disabled={zoom === 64}>Zoom In</button>\n      </div>\n      {zoom > 1 && (\n        <input\n          type=\"range\"\n          min={0}\n          max={canvasRef.current ? (canvasRef.current.width / window.devicePixelRatio) * (zoom - 1) : 0}\n          value={scrollPosition}\n          onChange={handleScroll}\n          style={{ width: '2000px', margin: '10px auto', display: 'block' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ZoomTest3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}