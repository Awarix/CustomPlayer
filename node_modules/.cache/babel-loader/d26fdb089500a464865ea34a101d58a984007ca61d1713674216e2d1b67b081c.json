{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZoomTest3 = ({\n  audioUrl,\n  words,\n  onWordClick\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const [hoveredWord, setHoveredWord] = useState(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      scaledStart: word.start / audioDuration * audioData.length\n    }));\n  }, [words, audioData, audioDuration]);\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    const samplesPerPixel = audioData.length / zoom / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const x = (word.scaledStart - startSample) / samplesPerPixel;\n      if (x >= 0 && x <= width) {\n        // Draw vertical line\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.strokeStyle = word.color;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n\n        // Draw word label\n        ctx.fillStyle = word === hoveredWord ? 'black' : word.color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word.word, x, 15);\n      }\n    });\n  }, [audioData, zoom, scrollPosition, scaledWords, hoveredWord]);\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n\n      // Use the full audio data instead of downsampling\n      const filteredData = Array.from(channelData);\n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n    fetchAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    var _canvas$parentElement;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = ((_canvas$parentElement = canvas.parentElement) === null || _canvas$parentElement === void 0 ? void 0 : _canvas$parentElement.clientWidth) || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    drawWaveform();\n  }, [drawWaveform]);\n  const handleZoom = direction => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + width * (audioData.length / zoom) / width / 2;\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - width * (audioData.length / newZoom) / width / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n  const handleScroll = e => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n  const handleCanvasMouseMove = useCallback(e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const samplesPerPixel = audioData.length / zoom / canvas.width;\n    const hoveredSample = Math.floor(scrollPosition * samplesPerPixel + x * samplesPerPixel);\n    const hovered = scaledWords.find(word => Math.abs(word.scaledStart - hoveredSample) < samplesPerPixel * 10);\n    setHoveredWord(hovered || null);\n  }, [audioData, zoom, scrollPosition, scaledWords]);\n  const handleCanvasClick = useCallback(e => {\n    if (hoveredWord && onWordClick) {\n      onWordClick(hoveredWord);\n    }\n  }, [hoveredWord, onWordClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '2000px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('out'),\n        disabled: zoom === 1,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('in'),\n        disabled: zoom === 64,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), zoom > 1 && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: canvasRef.current ? canvasRef.current.width / window.devicePixelRatio * (zoom - 1) : 0,\n      value: scrollPosition,\n      onChange: handleScroll,\n      style: {\n        width: '2000px',\n        margin: '10px auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(ZoomTest3, \"BWSdC0BKmxXhpwsT7ArCr+HFjxE=\");\n_c = ZoomTest3;\nexport default ZoomTest3;\nvar _c;\n$RefreshReg$(_c, \"ZoomTest3\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useMemo","jsxDEV","_jsxDEV","ZoomTest3","audioUrl","words","onWordClick","_s","canvasRef","zoom","setZoom","scrollPosition","setScrollPosition","audioData","setAudioData","hoveredWord","setHoveredWord","audioDuration","setAudioDuration","scaledWords","map","word","scaledStart","start","length","drawWaveform","canvas","current","ctx","getContext","dpr","window","devicePixelRatio","width","height","clearRect","beginPath","samplesPerPixel","startSample","Math","floor","endSample","min","ceil","i","x","y","moveTo","lineTo","strokeStyle","stroke","forEach","color","lineWidth","fillStyle","font","textAlign","fillText","fetchAudio","response","fetch","arrayBuffer","audioContext","AudioContext","webkitAudioContext","audioBuffer","decodeAudioData","channelData","getChannelData","filteredData","Array","from","duration","_canvas$parentElement","parentWidth","parentElement","clientWidth","canvasWidth","style","handleZoom","direction","centerSample","prevZoom","newZoom","max","newScrollPosition","handleScroll","e","parseFloat","target","value","handleCanvasMouseMove","rect","getBoundingClientRect","clientX","left","hoveredSample","hovered","find","abs","handleCanvasClick","children","margin","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","onChange","display","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest3.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\n\ninterface Word {\n  word: string;\n  color: string;\n  start: number;\n}\n\ninterface WaveformProps {\n  audioUrl: string;\n  words: Word[];\n  onWordClick?: (word: Word) => void;\n}\n\nconst ZoomTest3: React.FC<WaveformProps> = ({ audioUrl, words, onWordClick }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState<number[]>([]);\n  const [hoveredWord, setHoveredWord] = useState<Word | null>(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      scaledStart: (word.start / audioDuration) * audioData.length,\n    }));\n  }, [words, audioData, audioDuration]);\n\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    const samplesPerPixel = (audioData.length / zoom) / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const x = (word.scaledStart - startSample) / samplesPerPixel;\n      if (x >= 0 && x <= width) {\n        // Draw vertical line\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.strokeStyle = word.color;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n\n        // Draw word label\n        ctx.fillStyle = word === hoveredWord ? 'black' : word.color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word.word, x, 15);\n      }\n    });\n  }, [audioData, zoom, scrollPosition, scaledWords, hoveredWord]);\n\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      \n      // Use the full audio data instead of downsampling\n      const filteredData = Array.from(channelData);\n      \n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n\n    fetchAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = canvas.parentElement?.clientWidth || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n\n    drawWaveform();\n  }, [drawWaveform]);\n\n  const handleZoom = (direction: 'in' | 'out') => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + (width * (audioData.length / zoom) / width) / 2;\n\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - (width * (audioData.length / newZoom) / width) / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n\n  const handleCanvasMouseMove = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const samplesPerPixel = (audioData.length / zoom) / canvas.width;\n    const hoveredSample = Math.floor(scrollPosition * samplesPerPixel + x * samplesPerPixel);\n\n    const hovered = scaledWords.find(word => \n      Math.abs(word.scaledStart - hoveredSample) < samplesPerPixel * 10\n    );\n\n    setHoveredWord(hovered || null);\n  }, [audioData, zoom, scrollPosition, scaledWords]);\n\n  const handleCanvasClick = useCallback((e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (hoveredWord && onWordClick) {\n      onWordClick(hoveredWord);\n    }\n  }, [hoveredWord, onWordClick]);\n\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ width: '2000px', margin: '0 auto' }}>\n        <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n      </div>\n      <div>\n        <button onClick={() => handleZoom('out')} disabled={zoom === 1}>Zoom Out</button>\n        <button onClick={() => handleZoom('in')} disabled={zoom === 64}>Zoom In</button>\n      </div>\n      {zoom > 1 && (\n        <input\n          type=\"range\"\n          min={0}\n          max={canvasRef.current ? (canvasRef.current.width / window.devicePixelRatio) * (zoom - 1) : 0}\n          value={scrollPosition}\n          onChange={handleScroll}\n          style={{ width: '2000px', margin: '10px auto', display: 'block' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ZoomTest3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}