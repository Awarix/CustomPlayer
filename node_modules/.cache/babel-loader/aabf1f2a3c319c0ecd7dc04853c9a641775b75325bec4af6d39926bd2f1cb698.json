{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/wavesurfer/WaveKeywordsNoRegions.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport { WaveSurfer, WaveForm } from \"wavesurfer-react\";\nimport { currTimeSubscriber } from \"../../subscribers/PlayerSubscriber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelinePlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\");\nconst WordMarker = ({\n  keyword,\n  color,\n  wavesurfer,\n  zoom,\n  isReady\n}) => {\n  _s();\n  const markerRef = useRef(null);\n  useEffect(() => {\n    if (!isReady) return;\n    const updatePosition = () => {\n      if (markerRef.current && wavesurfer) {\n        const duration = wavesurfer.getDuration();\n        const containerWidth = wavesurfer.drawer.width;\n        const scrollLeft = wavesurfer.drawer.getScrollX();\n        const markerPosition = keyword.Start / duration * containerWidth;\n        const adjustedPosition = markerPosition - scrollLeft;\n        markerRef.current.style.left = `${adjustedPosition}px`;\n        markerRef.current.style.display = adjustedPosition >= 0 && adjustedPosition <= containerWidth ? 'block' : 'none';\n      }\n    };\n    updatePosition();\n    wavesurfer.on('scroll', updatePosition);\n    wavesurfer.on('zoom', updatePosition);\n    return () => {\n      wavesurfer.un('scroll', updatePosition);\n      wavesurfer.un('zoom', updatePosition);\n    };\n  }, [keyword, wavesurfer, zoom, isReady]);\n  const handleClick = () => {\n    wavesurfer.setCurrentTime(keyword.Start);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: markerRef,\n    onClick: handleClick,\n    style: {\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      width: '2px',\n      backgroundColor: color,\n      cursor: 'pointer'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '-20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        backgroundColor: color,\n        padding: '2px 5px',\n        borderRadius: '3px',\n        color: 'white',\n        fontSize: '12px'\n      },\n      children: keyword.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(WordMarker, \"x5wWyXK0+mHGg2Y0I8gN07knkVQ=\");\n_c = WordMarker;\nconst WaveKeywordsNoRegions = ({\n  file,\n  activeSegmentProp,\n  url,\n  keywords\n}) => {\n  _s2();\n  const [isPlay, setIsPlay] = useState(false);\n  const [autoCenter, setAutoCenter] = useState(true);\n  const [zoom, setZoom] = useState(10);\n  const [activeSegment, setActiveSegment] = useState(activeSegmentProp);\n  const [isWavesurferReady, setIsWavesurferReady] = useState(false);\n  const plugins = useMemo(() => [{\n    plugin: TimelinePlugin,\n    options: {\n      container: \"#timeline\"\n    }\n  }], []);\n  const wavesurferRef = useRef(null);\n  const handleWSMount = useCallback(waveSurfer => {\n    wavesurferRef.current = waveSurfer;\n    wavesurferRef.current.load(url);\n    wavesurferRef.current.on(\"ready\", () => {\n      console.log(\"WaveSurfer is ready\");\n      setIsWavesurferReady(true);\n    });\n    let lastTime = 0;\n    wavesurferRef.current.on(\"audioprocess\", currentTime => {\n      const diff = Math.abs(currentTime - lastTime);\n      if (diff > 0.1) {\n        lastTime = currentTime;\n        currTimeSubscriber.next(currentTime);\n      }\n    });\n  }, [url]);\n  const setZoomClick = zoom => {\n    if (zoom < 5) zoom = 5;\n    if (zoom > 1000) zoom = 1000;\n    setZoom(zoom);\n  };\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    setZoom(10);\n    if (url === \"\") return;\n    wavesurferRef.current.load(url);\n  }, [file, url]);\n  useEffect(() => {\n    if (wavesurferRef.current) {\n      wavesurferRef.current.zoom(zoom);\n      wavesurferRef.current.fireEvent('zoom', zoom);\n    }\n  }, [zoom]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    if (isPlay) {\n      wavesurferRef.current.play();\n    } else {\n      wavesurferRef.current.pause();\n    }\n  }, [isPlay]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    setActiveSegment(activeSegmentProp);\n    if (activeSegmentProp) {\n      let zoomFactor = 500;\n      const width = wavesurferRef.current.drawer.wrapper.clientWidth;\n      const segmentDuration = activeSegmentProp.End - activeSegmentProp.Start;\n      for (let i = 0; i < 10; i++) {\n        if (segmentDuration * zoomFactor < width) break;\n        zoomFactor /= 2;\n      }\n      if (zoomFactor < 5) zoomFactor = 5;\n      setZoomClick(zoomFactor);\n      setAutoCenter(false);\n      setIsPlay(true);\n      const total = wavesurferRef.current.getDuration();\n      if (total > 0) {\n        const centerTime = activeSegmentProp.Start + segmentDuration / 2;\n        const t1 = centerTime / total;\n        wavesurferRef.current.zoom(zoomFactor);\n        wavesurferRef.current.seekAndCenter(t1);\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n        wavesurferRef.current.play();\n      }\n    }\n    const subscription = currTimeSubscriber.subscribe(currentTime => {\n      if (wavesurferRef.current && activeSegmentProp && currentTime >= activeSegmentProp.End) {\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [activeSegmentProp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(WaveSurfer, {\n      onMount: handleWSMount,\n      plugins: plugins,\n      children: [/*#__PURE__*/_jsxDEV(WaveForm, {\n        id: \"waveform\",\n        waveColor: \"#b7e1dd\",\n        progressColor: \"#4Db6AC\",\n        cursorColor: \"#357F78\",\n        autoCenter: autoCenter,\n        splitChannels: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"20px\"\n        },\n        id: \"timeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), isWavesurferReady && wavesurferRef.current && keywords.map((kw, index) => /*#__PURE__*/_jsxDEV(WordMarker, {\n      keyword: kw.keyword,\n      color: kw.color,\n      wavesurfer: wavesurferRef.current,\n      zoom: zoom,\n      isReady: isWavesurferReady\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"80px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        size: \"medium\",\n        onClick: e => {\n          document.activeElement.blur();\n          setIsPlay(prev => !prev);\n        },\n        children: isPlay ? /*#__PURE__*/_jsxDEV(PauseCircleFilledIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        size: \"medium\",\n        title: \"\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0438\\u0442\\u044C \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\",\n        onClick: e => {\n          document.activeElement.blur();\n          setZoomClick(zoom * 2);\n        },\n        children: /*#__PURE__*/_jsxDEV(ZoomInIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        size: \"medium\",\n        title: \"\\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0438\\u0442\\u044C \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\",\n        onClick: e => {\n          document.activeElement.blur();\n          setZoomClick(zoom / 2);\n        },\n        children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s2(WaveKeywordsNoRegions, \"D7UPIVbi7msjojmsKl2SHqEQp9M=\");\n_c2 = WaveKeywordsNoRegions;\nexport default WaveKeywordsNoRegions;\nvar _c, _c2;\n$RefreshReg$(_c, \"WordMarker\");\n$RefreshReg$(_c2, \"WaveKeywordsNoRegions\");","map":{"version":3,"names":["useMemo","useRef","useState","useEffect","useCallback","IconButton","PlayCircleFilledIcon","PauseCircleFilledIcon","ZoomInIcon","ZoomOutIcon","WaveSurfer","WaveForm","currTimeSubscriber","jsxDEV","_jsxDEV","TimelinePlugin","require","WordMarker","keyword","color","wavesurfer","zoom","isReady","_s","markerRef","updatePosition","current","duration","getDuration","containerWidth","drawer","width","scrollLeft","getScrollX","markerPosition","Start","adjustedPosition","style","left","display","on","un","handleClick","setCurrentTime","ref","onClick","position","top","height","backgroundColor","cursor","children","transform","padding","borderRadius","fontSize","Name","fileName","_jsxFileName","lineNumber","columnNumber","_c","WaveKeywordsNoRegions","file","activeSegmentProp","url","keywords","_s2","isPlay","setIsPlay","autoCenter","setAutoCenter","setZoom","activeSegment","setActiveSegment","isWavesurferReady","setIsWavesurferReady","plugins","plugin","options","container","wavesurferRef","handleWSMount","waveSurfer","load","console","log","lastTime","currentTime","diff","Math","abs","next","setZoomClick","fireEvent","play","pause","zoomFactor","wrapper","clientWidth","segmentDuration","End","i","total","centerTime","t1","seekAndCenter","subscription","subscribe","unsubscribe","onMount","id","waveColor","progressColor","cursorColor","splitChannels","map","kw","index","size","e","document","activeElement","blur","prev","title","_c2","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/wavesurfer/WaveKeywordsNoRegions.tsx"],"sourcesContent":["import { FC, useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport { WaveSurfer, WaveForm } from \"wavesurfer-react\";\nimport { currTimeSubscriber } from \"../../subscribers/PlayerSubscriber\";\nimport { SegmentModel as Segment } from \"../AudioContext\";\n\ninterface KeywordColor {\n  keyword: {\n    Start: number;\n    Name: string;\n    ChannelNumber: number;\n    Confidence: number;\n  };\n  color: string;\n}\n\ninterface Props {\n  file: File | null;\n  activeSegmentProp: Segment | null;\n  url: string;\n  keywords: KeywordColor[];\n}\n\nconst TimelinePlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\");\n\nconst WordMarker: FC<{keyword: KeywordColor['keyword'], color: string, wavesurfer: any, zoom: number, isReady: boolean}> = ({ keyword, color, wavesurfer, zoom, isReady }) => {\n    const markerRef = useRef<HTMLDivElement>(null);\n  \n    useEffect(() => {\n        if (!isReady) return;\n      const updatePosition = () => {\n        if (markerRef.current && wavesurfer) {\n          const duration = wavesurfer.getDuration();\n          const containerWidth = wavesurfer.drawer.width;\n          const scrollLeft = wavesurfer.drawer.getScrollX();\n  \n          const markerPosition = (keyword.Start / duration) * containerWidth;\n          const adjustedPosition = markerPosition - scrollLeft;\n  \n          markerRef.current.style.left = `${adjustedPosition}px`;\n          markerRef.current.style.display = adjustedPosition >= 0 && adjustedPosition <= containerWidth ? 'block' : 'none';\n        }\n      };\n  \n      updatePosition();\n      wavesurfer.on('scroll', updatePosition);\n      wavesurfer.on('zoom', updatePosition);\n  \n      return () => {\n        wavesurfer.un('scroll', updatePosition);\n        wavesurfer.un('zoom', updatePosition);\n      };\n    }, [keyword, wavesurfer, zoom, isReady]);\n\n  const handleClick = () => {\n    wavesurfer.setCurrentTime(keyword.Start);\n  };\n\n  return (\n    <div\n      ref={markerRef}\n      onClick={handleClick}\n      style={{\n        position: 'absolute',\n        top: 0,\n        height: '100%',\n        width: '2px',\n        backgroundColor: color,\n        cursor: 'pointer',\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: '-20px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          backgroundColor: color,\n          padding: '2px 5px',\n          borderRadius: '3px',\n          color: 'white',\n          fontSize: '12px',\n        }}\n      >\n        {keyword.Name}\n      </div>\n    </div>\n  );\n};\n\nconst WaveKeywordsNoRegions: FC<Props> = ({ file, activeSegmentProp, url, keywords }) => {\n    const [isPlay, setIsPlay] = useState<boolean>(false);\n    const [autoCenter, setAutoCenter] = useState<boolean>(true);\n    const [zoom, setZoom] = useState<number>(10);\n    const [activeSegment, setActiveSegment] = useState<Segment | null>(activeSegmentProp);\n    const [isWavesurferReady, setIsWavesurferReady] = useState<boolean>(false);\n  \n    const plugins = useMemo(() => [\n      {\n        plugin: TimelinePlugin,\n        options: { container: \"#timeline\" },\n      },\n    ], []);\n  \n    const wavesurferRef = useRef<any>(null);\n  \n    const handleWSMount = useCallback((waveSurfer) => {\n        wavesurferRef.current = waveSurfer;\n        wavesurferRef.current.load(url);\n      \n        wavesurferRef.current.on(\"ready\", () => {\n          console.log(\"WaveSurfer is ready\");\n          setIsWavesurferReady(true);\n        });\n  \n      let lastTime = 0;\n      wavesurferRef.current.on(\"audioprocess\", (currentTime: number) => {\n        const diff = Math.abs(currentTime - lastTime);\n        if (diff > 0.1) {\n          lastTime = currentTime;\n          currTimeSubscriber.next(currentTime);\n        }\n      });\n    }, [url]);\n  \n    const setZoomClick = (zoom: number) => {\n      if (zoom < 5) zoom = 5;\n      if (zoom > 1000) zoom = 1000;\n      setZoom(zoom);\n    };\n  \n    useEffect(() => {\n      if (!wavesurferRef.current) return;\n  \n      setZoom(10);\n  \n      if (url === \"\") return;\n  \n      wavesurferRef.current.load(url);\n    }, [file, url]);\n  \n    useEffect(() => {\n        if (wavesurferRef.current) {\n        wavesurferRef.current.zoom(zoom);\n        wavesurferRef.current.fireEvent('zoom', zoom);\n        }\n    }, [zoom]);\n  \n    useEffect(() => {\n      if (!wavesurferRef.current) return;\n  \n      if (isPlay) {\n        wavesurferRef.current.play();\n      } else {\n        wavesurferRef.current.pause();\n      }\n    }, [isPlay]);\n  \n    useEffect(() => {\n      if (!wavesurferRef.current) return;\n  \n      setActiveSegment(activeSegmentProp);\n  \n      if (activeSegmentProp) {\n        let zoomFactor = 500;\n        const width = wavesurferRef.current.drawer.wrapper.clientWidth;\n        const segmentDuration = activeSegmentProp.End - activeSegmentProp.Start;\n  \n        for (let i = 0; i < 10; i++) {\n          if (segmentDuration * zoomFactor < width) break;\n          zoomFactor /= 2;\n        }\n        if (zoomFactor < 5) zoomFactor = 5;\n  \n        setZoomClick(zoomFactor);\n        setAutoCenter(false);\n        setIsPlay(true);\n  \n        const total = wavesurferRef.current.getDuration();\n        if (total > 0) {\n          const centerTime = activeSegmentProp.Start + (segmentDuration) / 2;\n          const t1 = centerTime / total;\n  \n          wavesurferRef.current.zoom(zoomFactor);\n          wavesurferRef.current.seekAndCenter(t1);\n          wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n          wavesurferRef.current.play();\n        }\n      }\n  \n      const subscription = currTimeSubscriber.subscribe(currentTime => {\n        if (wavesurferRef.current && activeSegmentProp && currentTime >= activeSegmentProp.End) {\n          wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n        }\n      });\n  \n      return () => {\n        subscription.unsubscribe();\n      };\n    }, [activeSegmentProp]);\n\n  return (\n    <div style={{ width: \"100%\", position: \"relative\" }}>\n      <WaveSurfer onMount={handleWSMount} plugins={plugins} >\n        <WaveForm\n          id=\"waveform\"\n          waveColor=\"#b7e1dd\"\n          progressColor=\"#4Db6AC\"\n          cursorColor=\"#357F78\"\n          autoCenter={autoCenter}\n          splitChannels={true}\n        >\n        </WaveForm>\n        <div style={{ height: \"20px\" }} id=\"timeline\" />\n      </WaveSurfer>\n\n      {isWavesurferReady && wavesurferRef.current && keywords.map((kw, index) => (\n        <WordMarker\n            key={index}\n            keyword={kw.keyword}\n            color={kw.color}\n            wavesurfer={wavesurferRef.current}\n            zoom={zoom}\n            isReady={isWavesurferReady}\n        />\n      ))}\n\n      <div style={{ height: \"80px\" }}>\n        <IconButton\n          color=\"primary\"\n          size=\"medium\"\n          onClick={(e: any) => {\n            (document.activeElement as HTMLElement).blur();\n            setIsPlay((prev) => !prev);\n          }}\n        >\n          {isPlay ? <PauseCircleFilledIcon fontSize=\"large\" /> : <PlayCircleFilledIcon fontSize=\"large\" />}\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          size=\"medium\"\n          title=\"Увеличить масштаб\"\n          onClick={(e: any) => {\n            (document.activeElement as HTMLElement).blur();\n            setZoomClick(zoom * 2);\n          }}\n        >\n          <ZoomInIcon fontSize=\"large\" />\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          size=\"medium\"\n          title=\"Уменьшить масштаб\"\n          onClick={(e: any) => {\n            (document.activeElement as HTMLElement).blur();\n            setZoomClick(zoom / 2);\n          }}\n        >\n          <ZoomOutIcon fontSize=\"large\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default WaveKeywordsNoRegions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}