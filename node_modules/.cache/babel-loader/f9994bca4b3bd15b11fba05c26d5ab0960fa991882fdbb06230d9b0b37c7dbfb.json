{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Friday/FridayAudioPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FridayAudioPlayer = ({\n  audioUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [showWaveform, setShowWaveform] = useState(true);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  useEffect(() => {\n    if (showWaveform && waveformRef.current) {\n      wavesurfer.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: 'violet',\n        progressColor: 'purple',\n        cursorColor: 'navy',\n        barWidth: 3,\n        barRadius: 3,\n        responsive: true,\n        height: 150\n      });\n      wavesurfer.current.on('ready', () => {\n        setDuration(wavesurfer.current.getDuration());\n      });\n      wavesurfer.current.on('audioprocess', () => {\n        setCurrentTime(wavesurfer.current.getCurrentTime());\n      });\n      wavesurfer.current.load(audioUrl);\n      return () => {\n        var _wavesurfer$current;\n        (_wavesurfer$current = wavesurfer.current) === null || _wavesurfer$current === void 0 ? void 0 : _wavesurfer$current.destroy();\n      };\n    }\n  }, [showWaveform, audioUrl]);\n  const togglePlay = () => {\n    if (showWaveform) {\n      var _wavesurfer$current2;\n      (_wavesurfer$current2 = wavesurfer.current) === null || _wavesurfer$current2 === void 0 ? void 0 : _wavesurfer$current2.playPause();\n    } else {\n      var _audioRef$current;\n      if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n        audioRef.current.play();\n      } else {\n        var _audioRef$current2;\n        (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n      }\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const toggleWaveform = () => {\n    var _wavesurfer$current3, _audioRef$current3;\n    const currentTime = showWaveform ? ((_wavesurfer$current3 = wavesurfer.current) === null || _wavesurfer$current3 === void 0 ? void 0 : _wavesurfer$current3.getCurrentTime()) || 0 : ((_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.currentTime) || 0;\n    setShowWaveform(!showWaveform);\n    setTimeout(() => {\n      if (!showWaveform) {\n        var _wavesurfer$current4, _wavesurfer$current5;\n        (_wavesurfer$current4 = wavesurfer.current) === null || _wavesurfer$current4 === void 0 ? void 0 : _wavesurfer$current4.seekTo(currentTime / duration);\n        if (isPlaying) (_wavesurfer$current5 = wavesurfer.current) === null || _wavesurfer$current5 === void 0 ? void 0 : _wavesurfer$current5.play();\n      } else {\n        if (audioRef.current) {\n          audioRef.current.currentTime = currentTime;\n          if (isPlaying) audioRef.current.play();\n        }\n      }\n    }, 0);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleWaveform,\n      children: showWaveform ? 'Hide Waveform' : 'Show Waveform'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), showWaveform ? /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: waveformRef,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioUrl,\n      onTimeUpdate: () => {\n        var _audioRef$current4;\n        return setCurrentTime(((_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.currentTime) || 0);\n      },\n      onLoadedMetadata: () => {\n        var _audioRef$current5;\n        return setDuration(((_audioRef$current5 = audioRef.current) === null || _audioRef$current5 === void 0 ? void 0 : _audioRef$current5.duration) || 0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), !showWaveform && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: duration,\n      value: currentTime,\n      onChange: e => {\n        const time = parseFloat(e.target.value);\n        setCurrentTime(time);\n        if (audioRef.current) {\n          audioRef.current.currentTime = time;\n        }\n      },\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(FridayAudioPlayer, \"l/8P4K53gLplGRYH4NfghrtgJaw=\");\n_c = FridayAudioPlayer;\nexport default FridayAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"FridayAudioPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","WaveSurfer","jsxDEV","_jsxDEV","FridayAudioPlayer","audioUrl","_s","isPlaying","setIsPlaying","showWaveform","setShowWaveform","currentTime","setCurrentTime","duration","setDuration","audioRef","waveformRef","wavesurfer","current","create","container","waveColor","progressColor","cursorColor","barWidth","barRadius","responsive","height","on","getDuration","getCurrentTime","load","_wavesurfer$current","destroy","togglePlay","_wavesurfer$current2","playPause","_audioRef$current","paused","play","_audioRef$current2","pause","toggleWaveform","_wavesurfer$current3","_audioRef$current3","setTimeout","_wavesurfer$current4","_wavesurfer$current5","seekTo","formatTime","time","minutes","Math","floor","seconds","toString","padStart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","src","onTimeUpdate","_audioRef$current4","onLoadedMetadata","_audioRef$current5","type","min","max","value","onChange","e","parseFloat","target","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Friday/FridayAudioPlayer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst FridayAudioPlayer: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [showWaveform, setShowWaveform] = useState(true);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const waveformRef = useRef<HTMLDivElement>(null);\n  const wavesurfer = useRef<WaveSurfer | null>(null);\n\n  useEffect(() => {\n    if (showWaveform && waveformRef.current) {\n      wavesurfer.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: 'violet',\n        progressColor: 'purple',\n        cursorColor: 'navy',\n        barWidth: 3,\n        barRadius: 3,\n        responsive: true,\n        height: 150,\n      });\n\n      wavesurfer.current.on('ready', () => {\n        setDuration(wavesurfer.current!.getDuration());\n      });\n\n      wavesurfer.current.on('audioprocess', () => {\n        setCurrentTime(wavesurfer.current!.getCurrentTime());\n      });\n\n      wavesurfer.current.load(audioUrl);\n\n      return () => {\n        wavesurfer.current?.destroy();\n      };\n    }\n  }, [showWaveform, audioUrl]);\n\n  const togglePlay = () => {\n    if (showWaveform) {\n      wavesurfer.current?.playPause();\n    } else {\n      if (audioRef.current?.paused) {\n        audioRef.current.play();\n      } else {\n        audioRef.current?.pause();\n      }\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleWaveform = () => {\n    const currentTime = showWaveform\n      ? wavesurfer.current?.getCurrentTime() || 0\n      : audioRef.current?.currentTime || 0;\n\n    setShowWaveform(!showWaveform);\n\n    setTimeout(() => {\n      if (!showWaveform) {\n        wavesurfer.current?.seekTo(currentTime / duration);\n        if (isPlaying) wavesurfer.current?.play();\n      } else {\n        if (audioRef.current) {\n          audioRef.current.currentTime = currentTime;\n          if (isPlaying) audioRef.current.play();\n        }\n      }\n    }, 0);\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-player\">\n      <button onClick={togglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n      <button onClick={toggleWaveform}>\n        {showWaveform ? 'Hide Waveform' : 'Show Waveform'}\n      </button>\n      {showWaveform ? (\n        <div ref={waveformRef} style={{ width: '100%' }} />\n      ) : (\n        <audio\n          ref={audioRef}\n          src={audioUrl}\n          onTimeUpdate={() => setCurrentTime(audioRef.current?.currentTime || 0)}\n          onLoadedMetadata={() => setDuration(audioRef.current?.duration || 0)}\n        />\n      )}\n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n      {!showWaveform && (\n        <input\n          type=\"range\"\n          min={0}\n          max={duration}\n          value={currentTime}\n          onChange={(e) => {\n            const time = parseFloat(e.target.value);\n            setCurrentTime(time);\n            if (audioRef.current) {\n              audioRef.current.currentTime = time;\n            }\n          }}\n          style={{ width: '100%' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FridayAudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}