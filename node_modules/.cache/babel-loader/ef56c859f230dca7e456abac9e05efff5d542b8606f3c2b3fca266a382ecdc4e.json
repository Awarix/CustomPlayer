{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Friday/CustomAudioZoomBegunok.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = time => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\nconst CustomAudioZoomBegunok = ({\n  audioUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const progressRef = useRef(null);\n  const waveformData = useRef([]);\n  const containerRef = useRef(null);\n  const handleProgressBarDrag = e => {\n    const container = containerRef.current;\n    if (!container || !audioRef.current) return;\n    const updateProgress = clientX => {\n      const rect = container.getBoundingClientRect();\n      const progress = (clientX - rect.left) / rect.width;\n      const newTime = (scrollPosition + progress / zoomLevel) * duration;\n      audioRef.current.currentTime = Math.max(0, Math.min(newTime, duration));\n    };\n    updateProgress(e.clientX);\n    const handleMouseMove = e => {\n      updateProgress(e.clientX);\n    };\n    const handleMouseUp = () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 10000; // Увеличиваем количество сэмплов для большей детализации\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n    drawWaveform();\n  };\n  const drawWaveform = () => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = width / waveformData.current.length * zoomLevel;\n    const visibleBars = Math.floor(width / barWidth);\n    const startIndex = Math.floor(scrollPosition * (waveformData.current.length - visibleBars));\n    ctx.fillStyle = '#D1D6DA';\n    ctx.strokeStyle = '#D1D6DA';\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2 + padding);\n      ctx.lineTo(x, height / 2 + padding - barHeight / 2);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2 + padding);\n      ctx.lineTo(x, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n    // Draw progress\n    const progressWidth = (currentTime / duration - scrollPosition) * width * zoomLevel;\n    ctx.fillStyle = '#4Db6AC';\n    ctx.strokeStyle = '#4Db6AC';\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2 + padding);\n      ctx.lineTo(x, height / 2 + padding - barHeight / 2);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2 + padding);\n      ctx.lineTo(x, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n    ctx.restore();\n  };\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = (scrollPosition + x / rect.width / zoomLevel) * duration;\n    audioRef.current.currentTime = clickProgress;\n    setCurrentTime(clickProgress);\n  };\n  const handleScroll = e => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n  const zoomIn = () => {\n    setZoomLevel(prevZoom => Math.min(prevZoom * 2, 64));\n  };\n  const zoomOut = () => {\n    setZoomLevel(prevZoom => Math.max(prevZoom / 2, 1));\n  };\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current.duration);\n        generateWaveformData();\n      });\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current.currentTime);\n      });\n    }\n  }, []);\n  const animationFrameRef = useRef();\n  const updateProgressBar = useCallback(() => {\n    if (progressRef.current && containerRef.current && audioRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const progress = (audioRef.current.currentTime / duration - scrollPosition) * zoomLevel;\n      const position = Math.max(0, Math.min(progress * containerWidth, containerWidth));\n      progressRef.current.style.transform = `translateX(${position}px)`;\n    }\n    animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n  }, [duration, scrollPosition, zoomLevel]);\n  useEffect(() => {\n    animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [updateProgressBar]);\n  useEffect(() => {\n    const handleResize = () => {\n      drawWaveform();\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [drawWaveform, updateProgressBar]);\n  useEffect(() => {\n    drawWaveform();\n    updateProgressBar();\n  }, [isExpanded, currentTime, zoomLevel, scrollPosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        var _audioRef$current;\n        if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n          audioRef.current.play();\n          setIsPlaying(true);\n        } else {\n          var _audioRef$current2;\n          (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n          setIsPlaying(false);\n        }\n      },\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsExpanded(!isExpanded),\n      children: isExpanded ? 'Collapse' : 'Expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"waveform-container\",\n      style: {\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onClick: handleCanvasClick,\n        style: {\n          width: '100%',\n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: progressRef,\n          className: \"progress-handle\",\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '2px',\n            height: '100%',\n            backgroundColor: 'red',\n            cursor: 'ew-resize',\n            pointerEvents: 'auto',\n            transform: 'translateX(0)',\n            transition: 'transform 0.1s linear'\n          },\n          onMouseDown: handleProgressBarDrag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Zoom: \", zoomLevel.toFixed(1), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: scrollPosition,\n        onChange: handleScroll,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomAudioZoomBegunok, \"kfBJv5bD+gidIII9izPem2ak5XQ=\");\n_c = CustomAudioZoomBegunok;\nexport default CustomAudioZoomBegunok;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioZoomBegunok\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","formatTime","time","minutes","Math","floor","seconds","toString","padStart","CustomAudioZoomBegunok","audioUrl","_s","isPlaying","setIsPlaying","isExpanded","setIsExpanded","currentTime","setCurrentTime","duration","setDuration","zoomLevel","setZoomLevel","scrollPosition","setScrollPosition","audioRef","canvasRef","progressRef","waveformData","containerRef","handleProgressBarDrag","e","container","current","updateProgress","clientX","rect","getBoundingClientRect","progress","left","width","newTime","max","min","handleMouseMove","handleMouseUp","document","removeEventListener","addEventListener","generateWaveformData","audioContext","window","AudioContext","webkitAudioContext","response","fetch","arrayBuffer","audioBuffer","decodeAudioData","rawData","getChannelData","samples","blockSize","length","filteredData","i","blockStart","sum","j","abs","push","multiplier","pow","map","n","drawWaveform","canvas","ctx","getContext","dpr","devicePixelRatio","padding","offsetWidth","height","scale","clearRect","barWidth","visibleBars","startIndex","fillStyle","strokeStyle","dataIndex","x","barHeight","beginPath","moveTo","lineTo","stroke","progressWidth","save","clip","restore","handleCanvasClick","clickProgress","handleScroll","parseFloat","target","value","zoomIn","prevZoom","zoomOut","animationFrameRef","updateProgressBar","containerWidth","position","style","transform","requestAnimationFrame","cancelAnimationFrame","handleResize","className","children","onClick","_audioRef$current","paused","play","_audioRef$current2","pause","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","overflow","cursor","top","pointerEvents","backgroundColor","transition","onMouseDown","toFixed","type","step","onChange","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Friday/CustomAudioZoomBegunok.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst formatTime = (time: number) => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\n\nconst CustomAudioZoomBegunok: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const progressRef = useRef<HTMLDivElement>(null);\n  const waveformData = useRef<number[]>([]);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleProgressBarDrag = (e: React.MouseEvent<HTMLDivElement>) => {\n    const container = containerRef.current;\n    if (!container || !audioRef.current) return;\n\n    const updateProgress = (clientX: number) => {\n      const rect = container.getBoundingClientRect();\n      const progress = (clientX - rect.left) / rect.width;\n      const newTime = (scrollPosition + progress / zoomLevel) * duration;\n      audioRef.current!.currentTime = Math.max(0, Math.min(newTime, duration));\n    };\n\n    updateProgress(e.clientX);\n\n    const handleMouseMove = (e: MouseEvent) => {\n      updateProgress(e.clientX);\n    };\n\n    const handleMouseUp = () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n\n    const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 10000; // Увеличиваем количество сэмплов для большей детализации\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n\n    drawWaveform();\n  };\n\n  const drawWaveform = () => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d')!;\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = (width / waveformData.current.length) * zoomLevel;\n    const visibleBars = Math.floor(width / barWidth);\n    const startIndex = Math.floor(scrollPosition * (waveformData.current.length - visibleBars));\n\n    ctx.fillStyle = '#D1D6DA';\n    ctx.strokeStyle = '#D1D6DA';\n\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2 + padding);\n      ctx.lineTo(x, height / 2 + padding - barHeight / 2);\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(x, height / 2 + padding);\n      ctx.lineTo(x, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n  // Draw progress\n  const progressWidth = ((currentTime / duration) - scrollPosition) * width * zoomLevel;\n  ctx.fillStyle = '#4Db6AC';\n  ctx.strokeStyle = '#4Db6AC';\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(0, 0, progressWidth, height);\n  ctx.clip();\n\n  for (let i = 0; i < visibleBars; i++) {\n    const dataIndex = startIndex + i;\n    if (dataIndex >= waveformData.current.length) break;\n\n    const x = i * barWidth;\n    const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n\n    ctx.beginPath();\n    ctx.moveTo(x, height / 2 + padding);\n    ctx.lineTo(x, height / 2 + padding - barHeight / 2);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(x, height / 2 + padding);\n    ctx.lineTo(x, height / 2 + padding + barHeight / 2);\n    ctx.stroke();\n  }\n\n  ctx.restore();\n};\n\nconst handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n  const canvas = canvasRef.current;\n  if (!canvas || !audioRef.current) return;\n\n  const rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const clickProgress = (scrollPosition + (x / rect.width) / zoomLevel) * duration;\n\n  audioRef.current.currentTime = clickProgress;\n  setCurrentTime(clickProgress);\n};\n\nconst handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n  setScrollPosition(parseFloat(e.target.value));\n};\n\nconst zoomIn = () => {\n  setZoomLevel(prevZoom => Math.min(prevZoom * 2, 64));\n};\n\nconst zoomOut = () => {\n  setZoomLevel(prevZoom => Math.max(prevZoom / 2, 1));\n};\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current!.duration);\n        generateWaveformData();\n      });\n\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current!.currentTime);\n      });\n    }\n  }, []);\n\n  const animationFrameRef = useRef<number>();\n\n  const updateProgressBar = useCallback(() => {\n    if (progressRef.current && containerRef.current && audioRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const progress = ((audioRef.current.currentTime / duration) - scrollPosition) * zoomLevel;\n      const position = Math.max(0, Math.min(progress * containerWidth, containerWidth));\n      progressRef.current.style.transform = `translateX(${position}px)`;\n    }\n    animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n  }, [duration, scrollPosition, zoomLevel]);\n\n  useEffect(() => {\n    animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [updateProgressBar]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      drawWaveform();\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      animationFrameRef.current = requestAnimationFrame(updateProgressBar);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [drawWaveform, updateProgressBar]);\n\n  useEffect(() => {\n    drawWaveform();\n    updateProgressBar();\n  }, [isExpanded, currentTime, zoomLevel, scrollPosition]);\n\n  return (\n    <div className=\"audio-player\">\n      <button onClick={() => {\n        if (audioRef.current?.paused) {\n          audioRef.current.play();\n          setIsPlaying(true);\n        } else {\n          audioRef.current?.pause();\n          setIsPlaying(false);\n        }\n      }}>\n        {isPlaying ? 'Pause' : 'Play'}\n      </button>\n      <button onClick={() => setIsExpanded(!isExpanded)}>\n        {isExpanded ? 'Collapse' : 'Expand'}\n      </button>\n      <audio ref={audioRef} src={audioUrl} />\n      <div \n        ref={containerRef}\n        className=\"waveform-container\" \n        style={{ position: 'relative', overflow: 'hidden' }}\n      >\n        <canvas \n          ref={canvasRef} \n          onClick={handleCanvasClick}\n          style={{ \n            width: '100%', \n            height: isExpanded ? '300px' : '80px',\n            cursor: 'pointer'\n          }} \n        />\n        <div \n          className=\"progress-bar\" \n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            pointerEvents: 'none'\n          }}\n        >\n          <div \n            ref={progressRef}\n            className=\"progress-handle\"\n            style={{\n              position: 'absolute',\n              top: '0',\n              left: '0',\n              width: '2px',\n              height: '100%',\n              backgroundColor: 'red',\n              cursor: 'ew-resize',\n              pointerEvents: 'auto',\n              transform: 'translateX(0)',\n              transition: 'transform 0.1s linear'\n            }}\n            onMouseDown={handleProgressBarDrag}\n          />\n        </div>\n      </div>\n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n      {isExpanded && (\n        <div>\n          <button onClick={zoomIn}>Zoom In</button>\n          <button onClick={zoomOut}>Zoom Out</button>\n          <span>Zoom: {zoomLevel.toFixed(1)}x</span>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.01\"\n            value={scrollPosition}\n            onChange={handleScroll}\n            style={{ width: '100%' }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomAudioZoomBegunok;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}