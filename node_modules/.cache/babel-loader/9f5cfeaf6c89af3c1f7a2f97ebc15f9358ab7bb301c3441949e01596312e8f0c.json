{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = time => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\nconst ZoomTest4 = ({\n  audioUrl,\n  onWordClick\n}) => {\n  _s();\n  var _canvasRef$current2;\n  const canvasRef = useRef(null);\n  const audioRef = useRef(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const [hoveredWord, setHoveredWord] = useState(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    const samplesPerPixel = audioData.length / zoom / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw timeline\n    const timelinePosition = currentTime / audioDuration * width;\n    ctx.beginPath();\n    ctx.moveTo(timelinePosition, 0);\n    ctx.lineTo(timelinePosition, height);\n    ctx.strokeStyle = 'red';\n    ctx.stroke();\n  }, [audioData, zoom, scrollPosition, currentTime, audioDuration]);\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      const filteredData = Array.from(channelData);\n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n    fetchAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    var _canvas$parentElement;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = ((_canvas$parentElement = canvas.parentElement) === null || _canvas$parentElement === void 0 ? void 0 : _canvas$parentElement.clientWidth) || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    drawWaveform();\n  }, [drawWaveform]);\n  const handleZoom = direction => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + width * (audioData.length / zoom) / width / 2;\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - width * (audioData.length / newZoom) / width / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n  const handleScroll = e => {\n    if (canvasRef.current) {\n      var _canvasRef$current;\n      const newScrollPosition = parseFloat(e.target.value);\n      setScrollPosition(newScrollPosition);\n      setCurrentTime(newScrollPosition / (((_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.width) / window.devicePixelRatio || 1) * audioDuration);\n      if (audioRef.current) {\n        audioRef.current.currentTime = currentTime;\n      }\n    }\n  };\n  const togglePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        if (audioRef.current) {\n          setCurrentTime(audioRef.current.currentTime);\n        }\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '2000px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('out'),\n        disabled: zoom === 1,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('in'),\n        disabled: zoom === 64,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), zoom > 1 && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: canvasRef.current ? (((_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.width) / window.devicePixelRatio || 1) * (zoom - 1) * (audioDuration / audioData.length) : '100',\n      value: scrollPosition,\n      onChange: handleScroll,\n      style: {\n        width: '2000px',\n        margin: '10px auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(ZoomTest4, \"JNHUDFIPKWXgvJQDNCvguTmNgr0=\");\n_c = ZoomTest4;\nexport default ZoomTest4;\nvar _c;\n$RefreshReg$(_c, \"ZoomTest4\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsxDEV","_jsxDEV","formatTime","time","minutes","Math","floor","seconds","toString","padStart","ZoomTest4","audioUrl","onWordClick","_s","_canvasRef$current2","canvasRef","audioRef","zoom","setZoom","scrollPosition","setScrollPosition","audioData","setAudioData","hoveredWord","setHoveredWord","audioDuration","setAudioDuration","isPlaying","setIsPlaying","currentTime","setCurrentTime","drawWaveform","canvas","current","ctx","getContext","dpr","window","devicePixelRatio","width","height","clearRect","beginPath","samplesPerPixel","length","startSample","endSample","min","ceil","i","x","y","moveTo","lineTo","strokeStyle","stroke","timelinePosition","fetchAudio","response","fetch","arrayBuffer","audioContext","AudioContext","webkitAudioContext","audioBuffer","decodeAudioData","channelData","getChannelData","filteredData","Array","from","duration","_canvas$parentElement","parentWidth","parentElement","clientWidth","canvasWidth","style","handleZoom","direction","centerSample","prevZoom","newZoom","max","newScrollPosition","handleScroll","e","_canvasRef$current","parseFloat","target","value","togglePlayPause","pause","play","interval","setInterval","clearInterval","children","margin","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","onChange","display","src","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest4.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\n\ninterface Word {\n  word: string;\n  color: string;\n  start: number;\n}\n\ninterface WaveformProps {\n  audioUrl: string;\n  words?: Word[];\n  onWordClick?: (word: Word) => void;\n}\n\nconst formatTime = (time: number) => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\n\nconst ZoomTest4: React.FC<WaveformProps> = ({ audioUrl, onWordClick }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState<number[]>([]);\n  const [hoveredWord, setHoveredWord] = useState<Word | null>(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    const samplesPerPixel = (audioData.length / zoom) / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw timeline\n    const timelinePosition = currentTime / audioDuration * width;\n    ctx.beginPath();\n    ctx.moveTo(timelinePosition, 0);\n    ctx.lineTo(timelinePosition, height);\n    ctx.strokeStyle = 'red';\n    ctx.stroke();\n\n  }, [audioData, zoom, scrollPosition, currentTime, audioDuration]);\n\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      \n      const filteredData = Array.from(channelData);\n      \n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n\n    fetchAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = canvas.parentElement?.clientWidth || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n\n    drawWaveform();\n  }, [drawWaveform]);\n\n  const handleZoom = (direction: 'in' | 'out') => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + (width * (audioData.length / zoom) / width) / 2;\n\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - (width * (audioData.length / newZoom) / width) / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (canvasRef.current) {\n    const newScrollPosition = parseFloat(e.target.value);\n    setScrollPosition(newScrollPosition);\n    setCurrentTime(newScrollPosition / (canvasRef.current?.width / window.devicePixelRatio || 1) * audioDuration);\n    if (audioRef.current) {\n      audioRef.current.currentTime = currentTime;\n    }\n  }\n  };\n\n  const togglePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        if (audioRef.current) {\n          setCurrentTime(audioRef.current.currentTime);\n        }\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying]);\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ width: '2000px', margin: '0 auto' }}>\n        <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n      </div>\n      <div>\n        <button onClick={togglePlayPause}>{isPlaying ? 'Pause' : 'Play'}</button>\n        <button onClick={() => handleZoom('out')} disabled={zoom === 1}>Zoom Out</button>\n        <button onClick={() => handleZoom('in')} disabled={zoom === 64}>Zoom In</button>\n      </div>\n      {zoom > 1 && (\n        <input\n          type=\"range\"\n          min=\"0\"\n          max={canvasRef.current ? (canvasRef.current?.width / window.devicePixelRatio || 1) * (zoom - 1) * (audioDuration / audioData.length) : '100'}\n          value={scrollPosition}\n          onChange={handleScroll}\n          style={{ width: '2000px', margin: '10px auto', display: 'block' }}\n        />\n      )}\n      <audio ref={audioRef} src={audioUrl} />\n    </div>\n  );\n};\n\nexport default ZoomTest4;\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}