{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/AudioPlayerW2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayerW2 = ({\n  audioUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const audioRef = useRef(null);\n  const [audioBuffer, setAudioBuffer] = useState(null);\n  const [zoom, setZoom] = useState(1);\n  const [offset, setOffset] = useState(0);\n  useEffect(() => {\n    const loadAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const decodedBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      setAudioBuffer(decodedBuffer);\n    };\n    loadAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    if (audioBuffer && canvasRef.current) {\n      drawWaveform();\n    }\n  }, [audioBuffer, zoom, offset]);\n  const drawWaveform = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    const data = audioBuffer.getChannelData(0);\n    const step = Math.ceil(data.length / width);\n    const amp = height / 2;\n    for (let i = 0; i < width; i++) {\n      const index = Math.floor((i + offset) * step * zoom);\n      const x = i;\n      const y = (1 + data[index]) * amp;\n      ctx.lineTo(x, y);\n    }\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n  };\n  const handleZoomIn = () => {\n    setZoom(prevZoom => prevZoom * 1.2);\n  };\n  const handleZoomOut = () => {\n    setZoom(prevZoom => Math.max(1, prevZoom / 1.2));\n  };\n  const handleScroll = e => {\n    setOffset(Number(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: audioBuffer ? audioBuffer.length / zoom - 800 : 0,\n      value: offset,\n      onChange: handleScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayerW2, \"UHyOgqhiUloQ0wxSgDhdcbPvkxI=\");\n_c = AudioPlayerW2;\nexport default AudioPlayerW2;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayerW2\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","AudioPlayerW2","audioUrl","_s","canvasRef","audioRef","audioBuffer","setAudioBuffer","zoom","setZoom","offset","setOffset","loadAudio","response","fetch","arrayBuffer","audioContext","window","AudioContext","webkitAudioContext","decodedBuffer","decodeAudioData","current","drawWaveform","canvas","ctx","getContext","width","height","clearRect","beginPath","data","getChannelData","step","Math","ceil","length","amp","i","index","floor","x","y","lineTo","strokeStyle","stroke","handleZoomIn","prevZoom","handleZoomOut","max","handleScroll","e","Number","target","value","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","min","onChange","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/AudioPlayerW2.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst AudioPlayerW2: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [audioBuffer, setAudioBuffer] = useState<AudioBuffer | null>(null);\n  const [zoom, setZoom] = useState(1);\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    const loadAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const decodedBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      setAudioBuffer(decodedBuffer);\n    };\n\n    loadAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    if (audioBuffer && canvasRef.current) {\n      drawWaveform();\n    }\n  }, [audioBuffer, zoom, offset]);\n\n  const drawWaveform = () => {\n    const canvas = canvasRef.current!;\n    const ctx = canvas.getContext('2d')!;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    const data = audioBuffer!.getChannelData(0);\n    const step = Math.ceil(data.length / width);\n    const amp = height / 2;\n\n    for (let i = 0; i < width; i++) {\n      const index = Math.floor((i + offset) * step * zoom);\n      const x = i;\n      const y = (1 + data[index]) * amp;\n      ctx.lineTo(x, y);\n    }\n\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n  };\n\n  const handleZoomIn = () => {\n    setZoom(prevZoom => prevZoom * 1.2);\n  };\n\n  const handleZoomOut = () => {\n    setZoom(prevZoom => Math.max(1, prevZoom / 1.2));\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setOffset(Number(e.target.value));\n  };\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={800} height={200} />\n      {/* <audio ref={audioRef} src={audioUrl} controls /> */}\n      <div>\n        <button onClick={handleZoomIn}>Zoom In</button>\n        <button onClick={handleZoomOut}>Zoom Out</button>\n      </div>\n      <input\n        type=\"range\"\n        min={0}\n        max={audioBuffer ? audioBuffer.length / zoom - 800 : 0}\n        value={offset}\n        onChange={handleScroll}\n      />\n    </div>\n  );\n};\n\nexport default AudioPlayerW2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}