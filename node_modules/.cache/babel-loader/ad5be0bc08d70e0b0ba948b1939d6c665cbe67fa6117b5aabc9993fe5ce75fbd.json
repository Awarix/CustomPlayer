{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/wavesurfer/SuperAudioPlayer/CompactPlayer.tsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport PlayCircleFilledIcon from \"@mui/icons-material/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@mui/icons-material/PauseCircleFilled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompactPlayer = ({\n  url,\n  isPlay,\n  togglePlay,\n  currentTime,\n  setCurrentTime\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const wavesurferRef = useRef(null);\n\n  //   useEffect(() => {\n  //     if (containerRef.current && !wavesurferRef.current) {\n  //       wavesurferRef.current = WaveSurfer.create({\n  //         container: containerRef.current,\n  //         waveColor: \"#b7e1dd\",\n  //         progressColor: \"#4Db6AC\",\n  //         cursorColor: \"#357F78\",\n  //         responsive: true,\n  //         height: 40,\n  //         barWidth: 2,\n  //         barGap: 1,\n  //       });\n\n  //       wavesurferRef.current.on(\"ready\", () => {\n  //         wavesurferRef.current?.setCurrentTime(currentTime);\n  //       });\n\n  //       wavesurferRef.current.on(\"audioprocess\", () => {\n  //         if (wavesurferRef.current) {\n  //           setCurrentTime(wavesurferRef.current.getCurrentTime());\n  //         }\n  //       });\n\n  //       wavesurferRef.current.load(url);\n  //     }\n\n  //     return () => {\n  //       wavesurferRef.current?.destroy();\n  //     };\n  //   }, [url, currentTime]);\n\n  //   useEffect(() => {\n  //     if (wavesurferRef.current) {\n  //       if (isPlay) {\n  //         wavesurferRef.current.play();\n  //       } else {\n  //         wavesurferRef.current.pause();\n  //       }\n  //     }\n  //   }, [isPlay]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      size: \"medium\",\n      onClick: togglePlay,\n      children: isPlay ? /*#__PURE__*/_jsxDEV(PauseCircleFilledIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      style: {\n        flex: 1,\n        marginLeft: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CompactPlayer, \"9nxrKODN4yDz2SLq+2npu3qeWtY=\");\n_c = CompactPlayer;\nexport default CompactPlayer;\nvar _c;\n$RefreshReg$(_c, \"CompactPlayer\");","map":{"version":3,"names":["useRef","IconButton","PlayCircleFilledIcon","PauseCircleFilledIcon","jsxDEV","_jsxDEV","CompactPlayer","url","isPlay","togglePlay","currentTime","setCurrentTime","_s","containerRef","wavesurferRef","style","display","alignItems","width","children","color","size","onClick","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","ref","flex","marginLeft","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/wavesurfer/SuperAudioPlayer/CompactPlayer.tsx"],"sourcesContent":["import { FC, useEffect, useRef } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport PlayCircleFilledIcon from \"@mui/icons-material/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@mui/icons-material/PauseCircleFilled\";\n\nconst CompactPlayer: FC<{\n  url: string;\n  isPlay: boolean;\n  togglePlay: () => void;\n  currentTime: number;\n  setCurrentTime: (time: number) => void;\n}> = ({ url, isPlay, togglePlay, currentTime, setCurrentTime }) => {\n    \n  const containerRef = useRef<HTMLDivElement>(null);\n  const wavesurferRef = useRef<WaveSurfer | null>(null);\n\n//   useEffect(() => {\n//     if (containerRef.current && !wavesurferRef.current) {\n//       wavesurferRef.current = WaveSurfer.create({\n//         container: containerRef.current,\n//         waveColor: \"#b7e1dd\",\n//         progressColor: \"#4Db6AC\",\n//         cursorColor: \"#357F78\",\n//         responsive: true,\n//         height: 40,\n//         barWidth: 2,\n//         barGap: 1,\n//       });\n\n//       wavesurferRef.current.on(\"ready\", () => {\n//         wavesurferRef.current?.setCurrentTime(currentTime);\n//       });\n\n//       wavesurferRef.current.on(\"audioprocess\", () => {\n//         if (wavesurferRef.current) {\n//           setCurrentTime(wavesurferRef.current.getCurrentTime());\n//         }\n//       });\n\n//       wavesurferRef.current.load(url);\n//     }\n\n//     return () => {\n//       wavesurferRef.current?.destroy();\n//     };\n//   }, [url, currentTime]);\n\n//   useEffect(() => {\n//     if (wavesurferRef.current) {\n//       if (isPlay) {\n//         wavesurferRef.current.play();\n//       } else {\n//         wavesurferRef.current.pause();\n//       }\n//     }\n//   }, [isPlay]);\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\n      <IconButton color=\"primary\" size=\"medium\" onClick={togglePlay}>\n        {isPlay ? <PauseCircleFilledIcon fontSize=\"large\" /> : <PlayCircleFilledIcon fontSize=\"large\" />}\n      </IconButton>\n      <div ref={containerRef} style={{ flex: 1, marginLeft: 10 }} />\n    </div>\n  );\n};\n\nexport default CompactPlayer;"],"mappings":";;AAAA,SAAwBA,MAAM,QAAQ,OAAO;AAC7C,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,qBAAqB,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,aAMJ,GAAGA,CAAC;EAAEC,GAAG;EAAEC,MAAM;EAAEC,UAAU;EAAEC,WAAW;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAEjE,MAAMC,YAAY,GAAGb,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAMc,aAAa,GAAGd,MAAM,CAAoB,IAAI,CAAC;;EAEvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACEK,OAAA;IAAKU,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnEd,OAAA,CAACJ,UAAU;MAACmB,KAAK,EAAC,SAAS;MAACC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEb,UAAW;MAAAU,QAAA,EAC3DX,MAAM,gBAAGH,OAAA,CAACF,qBAAqB;QAACoB,QAAQ,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGtB,OAAA,CAACH,oBAAoB;QAACqB,QAAQ,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,eACbtB,OAAA;MAAKuB,GAAG,EAAEf,YAAa;MAACE,KAAK,EAAE;QAAEc,IAAI,EAAE,CAAC;QAAEC,UAAU,EAAE;MAAG;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACf,EAAA,CA5DIN,aAMJ;AAAAyB,EAAA,GANIzB,aAMJ;AAwDF,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}