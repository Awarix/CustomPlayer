{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/AudioWaveform.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WaveformContainer = styled.div`\n  width: 100%;\n  height: 200px;\n  position: relative;\n  overflow: hidden;\n`;\n_c = WaveformContainer;\nconst WaveformCanvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n`;\n_c2 = WaveformCanvas;\nconst AudioWaveform = ({\n  audioBuffer\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [zoom, setZoom] = useState(1);\n  const [offset, setOffset] = useState(0);\n  useEffect(() => {\n    drawWaveform();\n  }, [audioBuffer, zoom, offset]);\n  const drawWaveform = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const width = canvas.width;\n    const height = canvas.height;\n    const channelData = audioBuffer.getChannelData(0);\n    const step = Math.ceil(channelData.length / width);\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    ctx.moveTo(0, height / 2);\n    for (let i = 0; i < width; i++) {\n      const index = Math.floor((i + offset) * step * zoom);\n      const x = i;\n      const y = (1 + channelData[index]) * height / 2;\n      ctx.lineTo(x, y);\n    }\n    ctx.strokeStyle = '#3498db';\n    ctx.stroke();\n  };\n  const handleWheel = e => {\n    if (e.deltaY < 0) {\n      setZoom(prev => Math.min(prev * 1.1, 50));\n    } else {\n      setZoom(prev => Math.max(prev / 1.1, 1));\n    }\n  };\n  const handleMouseMove = e => {\n    if (e.buttons === 1) {\n      setOffset(prev => Math.max(0, prev - e.movementX));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WaveformContainer, {\n    onWheel: handleWheel,\n    onMouseMove: handleMouseMove,\n    children: /*#__PURE__*/_jsxDEV(WaveformCanvas, {\n      ref: canvasRef,\n      width: 800,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioWaveform, \"9P/PvXghxjT5nDkVJhbge1EQ0YQ=\");\n_c3 = AudioWaveform;\nexport default AudioWaveform;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"WaveformContainer\");\n$RefreshReg$(_c2, \"WaveformCanvas\");\n$RefreshReg$(_c3, \"AudioWaveform\");","map":{"version":3,"names":["React","useRef","useEffect","useState","styled","jsxDEV","_jsxDEV","WaveformContainer","div","_c","WaveformCanvas","canvas","_c2","AudioWaveform","audioBuffer","_s","canvasRef","zoom","setZoom","offset","setOffset","drawWaveform","current","ctx","getContext","width","height","channelData","getChannelData","step","Math","ceil","length","clearRect","beginPath","moveTo","i","index","floor","x","y","lineTo","strokeStyle","stroke","handleWheel","e","deltaY","prev","min","max","handleMouseMove","buttons","movementX","onWheel","onMouseMove","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/AudioWaveform.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst WaveformContainer = styled.div`\n  width: 100%;\n  height: 200px;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst WaveformCanvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n`;\n\ninterface AudioWaveformProps {\n  audioBuffer: AudioBuffer;\n}\n\nconst AudioWaveform: React.FC<AudioWaveformProps> = ({ audioBuffer }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [zoom, setZoom] = useState(1);\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    drawWaveform();\n  }, [audioBuffer, zoom, offset]);\n\n  const drawWaveform = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n    const channelData = audioBuffer.getChannelData(0);\n    const step = Math.ceil(channelData.length / width);\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    ctx.moveTo(0, height / 2);\n\n    for (let i = 0; i < width; i++) {\n      const index = Math.floor((i + offset) * step * zoom);\n      const x = i;\n      const y = (1 + channelData[index]) * height / 2;\n      ctx.lineTo(x, y);\n    }\n\n    ctx.strokeStyle = '#3498db';\n    ctx.stroke();\n  };\n\n  const handleWheel = (e: React.WheelEvent) => {\n    if (e.deltaY < 0) {\n      setZoom(prev => Math.min(prev * 1.1, 50));\n    } else {\n      setZoom(prev => Math.max(prev / 1.1, 1));\n    }\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (e.buttons === 1) {\n      setOffset(prev => Math.max(0, prev - e.movementX));\n    }\n  };\n\n  return (\n    <WaveformContainer onWheel={handleWheel} onMouseMove={handleMouseMove}>\n      <WaveformCanvas ref={canvasRef} width={800} height={200} />\n    </WaveformContainer>\n  );\n};\n\nexport default AudioWaveform;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}