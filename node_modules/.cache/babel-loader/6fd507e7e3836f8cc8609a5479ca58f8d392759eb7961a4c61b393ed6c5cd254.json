{"ast":null,"code":"/*!\n * wavesurfer.js regions plugin 6.6.4 (2023-06-10)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(\"WaveSurfer\", [], t) : \"object\" == typeof exports ? exports.WaveSurfer = t() : (e.WaveSurfer = e.WaveSurfer || {}, e.WaveSurfer.regions = t());\n}(self, () => (() => {\n  \"use strict\";\n\n  var e = {\n      23: (e, t, r) => {\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var n = r(638);\n        function i(e) {\n          return i = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n            return typeof e;\n          } : function (e) {\n            return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n          }, i(e);\n        }\n        function a(e, t) {\n          var r = Object.keys(e);\n          if (Object.getOwnPropertySymbols) {\n            var n = Object.getOwnPropertySymbols(e);\n            t && (n = n.filter(function (t) {\n              return Object.getOwnPropertyDescriptor(e, t).enumerable;\n            })), r.push.apply(r, n);\n          }\n          return r;\n        }\n        function s(e) {\n          for (var t = 1; t < arguments.length; t++) {\n            var r = null != arguments[t] ? arguments[t] : {};\n            t % 2 ? a(Object(r), !0).forEach(function (t) {\n              o(e, t, r[t]);\n            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : a(Object(r)).forEach(function (t) {\n              Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n            });\n          }\n          return e;\n        }\n        function o(e, t, r) {\n          return (t = u(t)) in e ? Object.defineProperty(e, t, {\n            value: r,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n          }) : e[t] = r, e;\n        }\n        function l(e, t) {\n          for (var r = 0; r < t.length; r++) {\n            var n = t[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, u(n.key), n);\n          }\n        }\n        function u(e) {\n          var t = function (e, t) {\n            if (\"object\" !== i(e) || null === e) return e;\n            var r = e[Symbol.toPrimitive];\n            if (void 0 !== r) {\n              var n = r.call(e, t || \"default\");\n              if (\"object\" !== i(n)) return n;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (\"string\" === t ? String : Number)(e);\n          }(e, \"string\");\n          return \"symbol\" === i(t) ? t : String(t);\n        }\n        var h = function () {\n          function e(t, r) {\n            var i = this;\n            !function (e, t) {\n              if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n            }(this, e), this.params = t, this.wavesurfer = r, this.util = s(s({}, r.util), {}, {\n              getRegionSnapToGridValue: function (e) {\n                return i.getRegionSnapToGridValue(e, t);\n              }\n            }), this.maxRegions = t.maxRegions, this.regionsMinLength = t.regionsMinLength || null, Object.getOwnPropertyNames(this.util.Observer.prototype).forEach(function (e) {\n              n.Region.prototype[e] = i.util.Observer.prototype[e];\n            }), this.wavesurfer.Region = n.Region;\n            this._onBackendCreated = function () {\n              i.wrapper = i.wavesurfer.drawer.wrapper, i.orientation = i.wavesurfer.drawer.orientation, i.defaultEdgeScrollWidth = .05 * i.wrapper.clientWidth, i.params.regions && i.params.regions.forEach(function (e) {\n                i.add(e);\n              });\n            }, this.list = {}, this._onReady = function () {\n              i.wrapper = i.wavesurfer.drawer.wrapper, i.vertical = i.wavesurfer.drawer.params.vertical, i.params.dragSelection && i.enableDragSelection(i.params), Object.keys(i.list).forEach(function (e) {\n                i.list[e].updateRender();\n              });\n            };\n          }\n          var t, r, i;\n          return t = e, i = [{\n            key: \"create\",\n            value: function (t) {\n              return {\n                name: \"regions\",\n                deferInit: !(!t || !t.deferInit) && t.deferInit,\n                params: t,\n                staticProps: {\n                  addRegion: function (e) {\n                    return this.initialisedPluginList.regions || this.initPlugin(\"regions\"), this.regions.add(e);\n                  },\n                  clearRegions: function () {\n                    this.regions && this.regions.clear();\n                  },\n                  enableDragSelection: function (e) {\n                    this.initialisedPluginList.regions || this.initPlugin(\"regions\"), this.regions.enableDragSelection(e);\n                  },\n                  disableDragSelection: function () {\n                    this.regions.disableDragSelection();\n                  }\n                },\n                instance: e\n              };\n            }\n          }], (r = [{\n            key: \"init\",\n            value: function () {\n              this.wavesurfer.isReady ? (this._onBackendCreated(), this._onReady()) : (this.wavesurfer.once(\"ready\", this._onReady), this.wavesurfer.once(\"backend-created\", this._onBackendCreated));\n            }\n          }, {\n            key: \"destroy\",\n            value: function () {\n              this.wavesurfer.un(\"ready\", this._onReady), this.wavesurfer.un(\"backend-created\", this._onBackendCreated), this.wavesurfer.setDisabledEventEmissions([\"region-removed\"]), this.disableDragSelection(), this.clear();\n            }\n          }, {\n            key: \"wouldExceedMaxRegions\",\n            value: function () {\n              return this.maxRegions && Object.keys(this.list).length >= this.maxRegions;\n            }\n          }, {\n            key: \"add\",\n            value: function (e) {\n              var t = this;\n              if (this.wouldExceedMaxRegions()) return null;\n              !(e = s({\n                edgeScrollWidth: this.params.edgeScrollWidth || this.defaultEdgeScrollWidth,\n                contentEditable: this.params.contentEditable,\n                removeButton: this.params.removeButton\n              }, e)).formatTimeCallback && this.params.formatTimeCallback && (e = s(s({}, e), {}, {\n                formatTimeCallback: this.params.formatTimeCallback\n              })), !e.minLength && this.regionsMinLength && (e = s(s({}, e), {}, {\n                minLength: this.regionsMinLength\n              }));\n              var r = new this.wavesurfer.Region(e, this.util, this.wavesurfer);\n              return this.list[r.id] = r, r.on(\"remove\", function () {\n                delete t.list[r.id];\n              }), r;\n            }\n          }, {\n            key: \"clear\",\n            value: function () {\n              var e = this;\n              Object.keys(this.list).forEach(function (t) {\n                e.list[t].remove();\n              });\n            }\n          }, {\n            key: \"enableDragSelection\",\n            value: function (e) {\n              var t = this;\n              this.disableDragSelection();\n              var r,\n                n,\n                i,\n                a,\n                s,\n                o,\n                l,\n                u = e.slop || 2,\n                h = this.wavesurfer.drawer.container,\n                d = !1 !== e.scroll && this.wavesurfer.params.scrollParent,\n                c = e.scrollSpeed || 1,\n                f = e.scrollThreshold || 10,\n                v = this.wavesurfer.getDuration(),\n                p = 0,\n                g = function e(r) {\n                  if (a && o) {\n                    var s = t.wrapper.scrollLeft + c * o;\n                    t.wrapper.scrollLeft = s = Math.min(n, Math.max(0, s));\n                    var l = t.wavesurfer.drawer.handleEvent(r);\n                    a.update({\n                      start: Math.min(l * v, i * v),\n                      end: Math.max(l * v, i * v)\n                    }), s < n && s > 0 && window.requestAnimationFrame(function () {\n                      e(r);\n                    });\n                  }\n                },\n                m = function (u) {\n                  if (!(u.touches && u.touches.length > 1)) {\n                    if (v = t.wavesurfer.getDuration(), s = u.targetTouches ? u.targetTouches[0].identifier : null, n = t.wrapper.scrollWidth - t.wrapper.clientWidth, l = t.util.withOrientation(t.wrapper.getBoundingClientRect(), t.vertical), t.wavesurfer.params.splitChannels && t.wavesurfer.params.splitChannelsOptions.splitDragSelection) {\n                      var h = (u.touches ? u.touches[0].clientY : u.clientY) - l.top,\n                        d = null != t.wavesurfer.backend.buffer ? t.wavesurfer.backend.buffer.numberOfChannels : 1,\n                        c = t.wrapper.clientHeight / d,\n                        f = Math.floor(h / c);\n                      e.channelIdx = f;\n                      var p = t.wavesurfer.params.splitChannelsOptions.channelColors[f];\n                      p && p.dragColor && (e.color = p.dragColor);\n                    }\n                    r = !0, i = t.wavesurfer.drawer.handleEvent(u, !0), a = null, o = null;\n                  }\n                };\n              this.wrapper.addEventListener(\"mousedown\", m), this.wrapper.addEventListener(\"touchstart\", m), this.on(\"disable-drag-selection\", function () {\n                t.wrapper.removeEventListener(\"touchstart\", m), t.wrapper.removeEventListener(\"mousedown\", m);\n              });\n              var w = function (e) {\n                e.touches && e.touches.length > 1 || (r = !1, p = 0, o = null, a && (t.util.preventClick(), a.fireEvent(\"update-end\", e), t.wavesurfer.fireEvent(\"region-update-end\", a, e)), a = null);\n              };\n              this.wrapper.addEventListener(\"mouseleave\", w), this.wrapper.addEventListener(\"mouseup\", w), this.wrapper.addEventListener(\"touchend\", w), document.body.addEventListener(\"mouseup\", w), document.body.addEventListener(\"touchend\", w), this.on(\"disable-drag-selection\", function () {\n                document.body.removeEventListener(\"mouseup\", w), document.body.removeEventListener(\"touchend\", w), t.wrapper.removeEventListener(\"touchend\", w), t.wrapper.removeEventListener(\"mouseup\", w), t.wrapper.removeEventListener(\"mouseleave\", w);\n              });\n              var b = function (n) {\n                if (r && !(++p <= u) && !(n.touches && n.touches.length > 1) && (!n.targetTouches || n.targetTouches[0].identifier == s) && (a || (a = t.add(e || {})))) {\n                  var c = t.wavesurfer.drawer.handleEvent(n),\n                    m = t.wavesurfer.regions.util.getRegionSnapToGridValue(i * v),\n                    w = t.wavesurfer.regions.util.getRegionSnapToGridValue(c * v);\n                  a.update({\n                    start: Math.min(w, m),\n                    end: Math.max(w, m)\n                  });\n                  var b = t.util.withOrientation(n, t.vertical);\n                  if (d && h.clientWidth < t.wrapper.scrollWidth) {\n                    var y = b.clientX - l.left;\n                    (o = y <= f ? -1 : y >= l.right - f ? 1 : null) && g(n);\n                  }\n                }\n              };\n              this.wrapper.addEventListener(\"mousemove\", b), this.wrapper.addEventListener(\"touchmove\", b), this.on(\"disable-drag-selection\", function () {\n                t.wrapper.removeEventListener(\"touchmove\", b), t.wrapper.removeEventListener(\"mousemove\", b);\n              }), this.wavesurfer.on(\"region-created\", function (e) {\n                t.regionsMinLength && (e.minLength = t.regionsMinLength);\n              });\n            }\n          }, {\n            key: \"disableDragSelection\",\n            value: function () {\n              this.fireEvent(\"disable-drag-selection\");\n            }\n          }, {\n            key: \"getCurrentRegion\",\n            value: function () {\n              var e = this,\n                t = this.wavesurfer.getCurrentTime(),\n                r = null;\n              return Object.keys(this.list).forEach(function (n) {\n                var i = e.list[n];\n                i.start <= t && i.end >= t && (!r || i.end - i.start < r.end - r.start) && (r = i);\n              }), r;\n            }\n          }, {\n            key: \"getRegionSnapToGridValue\",\n            value: function (e, t) {\n              if (t.snapToGridInterval) {\n                var r = t.snapToGridOffset || 0;\n                return Math.round((e - r) / t.snapToGridInterval) * t.snapToGridInterval + r;\n              }\n              return e;\n            }\n          }]) && l(t.prototype, r), i && l(t, i), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n          }), e;\n        }();\n        t.default = h, e.exports = t.default;\n      },\n      638: (e, t) => {\n        function r(e) {\n          return r = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n            return typeof e;\n          } : function (e) {\n            return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n          }, r(e);\n        }\n        function n(e, t) {\n          var r = Object.keys(e);\n          if (Object.getOwnPropertySymbols) {\n            var n = Object.getOwnPropertySymbols(e);\n            t && (n = n.filter(function (t) {\n              return Object.getOwnPropertyDescriptor(e, t).enumerable;\n            })), r.push.apply(r, n);\n          }\n          return r;\n        }\n        function i(e) {\n          for (var t = 1; t < arguments.length; t++) {\n            var r = null != arguments[t] ? arguments[t] : {};\n            t % 2 ? n(Object(r), !0).forEach(function (t) {\n              a(e, t, r[t]);\n            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function (t) {\n              Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n            });\n          }\n          return e;\n        }\n        function a(e, t, r) {\n          return (t = o(t)) in e ? Object.defineProperty(e, t, {\n            value: r,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n          }) : e[t] = r, e;\n        }\n        function s(e, t) {\n          for (var r = 0; r < t.length; r++) {\n            var n = t[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, o(n.key), n);\n          }\n        }\n        function o(e) {\n          var t = function (e, t) {\n            if (\"object\" !== r(e) || null === e) return e;\n            var n = e[Symbol.toPrimitive];\n            if (void 0 !== n) {\n              var i = n.call(e, t || \"default\");\n              if (\"object\" !== r(i)) return i;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (\"string\" === t ? String : Number)(e);\n          }(e, \"string\");\n          return \"symbol\" === r(t) ? t : String(t);\n        }\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.Region = void 0;\n        var l = function () {\n          function e(t, r, n) {\n            var i,\n              a = this;\n            !function (e, t) {\n              if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n            }(this, e), this.wavesurfer = n, this.wrapper = n.drawer.wrapper, this.util = n.util, this.style = this.util.style, this.regionsUtil = r, this.vertical = n.drawer.params.vertical, this.id = null == t.id ? n.util.getId() : t.id, this.start = Number(t.start) || 0, this.end = null == t.end ? this.start + 4 / this.wrapper.scrollWidth * this.wavesurfer.getDuration() : Number(t.end), this.resize = void 0 === t.resize || Boolean(t.resize), this.drag = void 0 === t.drag || Boolean(t.drag), this.contentEditable = Boolean(t.contentEditable), this.removeButton = Boolean(t.removeButton), this.isResizing = !1, this.isDragging = !1, this.loop = Boolean(t.loop), this.color = t.color || \"rgba(0, 0, 0, 0.1)\", this.handleStyle = t.handleStyle || {\n              left: {},\n              right: {}\n            }, this.handleLeftEl = null, this.handleRightEl = null, this.data = t.data || {}, this.attributes = t.attributes || {}, this.showTooltip = null === (i = t.showTooltip) || void 0 === i || i, this.maxLength = t.maxLength, this.minLength = t.minLength, this._onRedraw = function () {\n              return a.updateRender();\n            }, this.scroll = !1 !== t.scroll && n.params.scrollParent, this.scrollSpeed = t.scrollSpeed || 1, this.scrollThreshold = t.scrollThreshold || 10, this.preventContextMenu = void 0 !== t.preventContextMenu && Boolean(t.preventContextMenu);\n            var s = null == t.channelIdx ? -1 : parseInt(t.channelIdx);\n            if (this.channelIdx = s, this.regionHeight = \"100%\", this.marginTop = \"0px\", -1 !== s) {\n              var o = null != this.wavesurfer.backend.buffer ? this.wavesurfer.backend.buffer.numberOfChannels : -1;\n              o >= 0 && s < o && (this.regionHeight = Math.floor(1 / o * 100) + \"%\", this.marginTop = this.wavesurfer.getHeight() * s + \"px\");\n            }\n            this.formatTimeCallback = t.formatTimeCallback, this.edgeScrollWidth = t.edgeScrollWidth, this.bindInOut(), this.render(), this.wavesurfer.on(\"zoom\", this._onRedraw), this.wavesurfer.on(\"redraw\", this._onRedraw), this.wavesurfer.fireEvent(\"region-created\", this);\n          }\n          var t, r, n;\n          return t = e, (r = [{\n            key: \"update\",\n            value: function (e, t) {\n              null != e.start && (this.start = Number(e.start)), null != e.end && (this.end = Number(e.end)), null != e.loop && (this.loop = Boolean(e.loop)), null != e.color && (this.color = e.color), null != e.handleStyle && (this.handleStyle = e.handleStyle), null != e.data && (this.data = e.data), null != e.resize && (this.resize = Boolean(e.resize), this.updateHandlesResize(this.resize)), null != e.drag && (this.drag = Boolean(e.drag)), null != e.maxLength && (this.maxLength = Number(e.maxLength)), null != e.minLength && (this.minLength = Number(e.minLength)), null != e.attributes && (this.attributes = e.attributes), this.updateRender(), this.fireEvent(\"update\"), this.wavesurfer.fireEvent(\"region-updated\", this, t);\n            }\n          }, {\n            key: \"remove\",\n            value: function () {\n              this.element && (this.element.remove(), this.element = null, this.fireEvent(\"remove\"), this.wavesurfer.un(\"zoom\", this._onRedraw), this.wavesurfer.un(\"redraw\", this._onRedraw), this.wavesurfer.fireEvent(\"region-removed\", this));\n            }\n          }, {\n            key: \"play\",\n            value: function (e) {\n              var t = e || this.start;\n              this.wavesurfer.play(t, this.end), this.fireEvent(\"play\"), this.wavesurfer.fireEvent(\"region-play\", this);\n            }\n          }, {\n            key: \"playLoop\",\n            value: function (e) {\n              this.loop = !0, this.play(e);\n            }\n          }, {\n            key: \"setLoop\",\n            value: function (e) {\n              this.loop = e;\n            }\n          }, {\n            key: \"render\",\n            value: function () {\n              for (var e in this.element = this.util.withOrientation(this.wrapper.appendChild(document.createElement(\"region\")), this.vertical), this.element.className = \"wavesurfer-region\", this.showTooltip && (this.element.title = this.formatTime(this.start, this.end)), this.element.setAttribute(\"data-id\", this.id), this.attributes) this.element.setAttribute(\"data-region-\" + e, this.attributes[e]);\n              if (this.style(this.element, {\n                position: \"absolute\",\n                zIndex: 3,\n                height: this.regionHeight,\n                top: this.marginTop\n              }), this.removeButton) {\n                var t = document.createElement(\"div\");\n                t.className = \"remove-region-button\", t.textContent = \"⨯\", this.removeButtonEl = this.element.appendChild(t), this.style(this.removeButtonEl, {\n                  zIndex: 4,\n                  position: \"absolute\",\n                  bottom: 0,\n                  right: \"4px\",\n                  cursor: \"pointer\",\n                  fontSize: \"20px\",\n                  lineHeight: \"21px\",\n                  color: \"grey\"\n                });\n              }\n              if (this.contentEditable) {\n                var r = document.createElement(\"div\");\n                r.className = \"region-content\", r.contentEditable = \"true\", r.innerText = this.data.text || \"\", this.contentEl = this.element.appendChild(r), this.style(this.contentEl, {\n                  zIndex: 4,\n                  padding: \"2px 5px\",\n                  cursor: \"text\"\n                });\n              }\n              if (this.resize) {\n                this.handleLeftEl = this.util.withOrientation(this.element.appendChild(document.createElement(\"handle\")), this.vertical), this.handleRightEl = this.util.withOrientation(this.element.appendChild(document.createElement(\"handle\")), this.vertical), this.handleLeftEl.className = \"wavesurfer-handle wavesurfer-handle-start\", this.handleRightEl.className = \"wavesurfer-handle wavesurfer-handle-end\";\n                var n = {\n                    cursor: this.vertical ? \"row-resize\" : \"col-resize\",\n                    position: \"absolute\",\n                    top: \"0px\",\n                    width: \"2px\",\n                    height: \"100%\",\n                    backgroundColor: \"rgba(0, 0, 0, 1)\"\n                  },\n                  i = \"none\" !== this.handleStyle.left ? Object.assign({\n                    left: \"0px\"\n                  }, n, this.handleStyle.left) : null,\n                  a = \"none\" !== this.handleStyle.right ? Object.assign({\n                    right: \"0px\"\n                  }, n, this.handleStyle.right) : null;\n                i && this.style(this.handleLeftEl, i), a && this.style(this.handleRightEl, a);\n              }\n              this.updateRender(), this.bindEvents();\n            }\n          }, {\n            key: \"formatTime\",\n            value: function (e, t) {\n              return this.formatTimeCallback ? this.formatTimeCallback(e, t) : (e == t ? [e] : [e, t]).map(function (e) {\n                return [Math.floor(e % 3600 / 60), (\"00\" + Math.floor(e % 60)).slice(-2)].join(\":\");\n              }).join(\"-\");\n            }\n          }, {\n            key: \"getWidth\",\n            value: function () {\n              return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n            }\n          }, {\n            key: \"updateRender\",\n            value: function () {\n              var e = this.wavesurfer.getDuration(),\n                t = this.getWidth(),\n                r = this.start,\n                n = this.end;\n              if (r < 0 && (n -= r = 0), n > e && (r = e - ((n = e) - r)), null != this.minLength && (n = Math.max(r + this.minLength, n)), null != this.maxLength && (n = Math.min(r + this.maxLength, n)), null != this.element) {\n                var i = Math.round(r / e * t),\n                  a = Math.round(n / e * t) - i;\n                for (var s in this.style(this.element, {\n                  left: i + \"px\",\n                  width: a + \"px\",\n                  backgroundColor: this.color,\n                  cursor: this.drag ? \"move\" : \"default\"\n                }), this.attributes) this.element.setAttribute(\"data-region-\" + s, this.attributes[s]);\n                this.showTooltip && (this.element.title = this.formatTime(this.start, this.end));\n              }\n            }\n          }, {\n            key: \"bindInOut\",\n            value: function () {\n              var e = this;\n              this.firedIn = !1, this.firedOut = !1;\n              var t = function (t) {\n                var r = Math.round(10 * e.start) / 10,\n                  n = Math.round(10 * e.end) / 10;\n                t = Math.round(10 * t) / 10, !e.firedOut && e.firedIn && (r > t || n <= t) && (e.firedOut = !0, e.firedIn = !1, e.fireEvent(\"out\"), e.wavesurfer.fireEvent(\"region-out\", e)), !e.firedIn && r <= t && n > t && (e.firedIn = !0, e.firedOut = !1, e.fireEvent(\"in\"), e.wavesurfer.fireEvent(\"region-in\", e));\n              };\n              this.wavesurfer.backend.on(\"audioprocess\", t), this.on(\"remove\", function () {\n                e.wavesurfer.backend.un(\"audioprocess\", t);\n              }), this.on(\"out\", function () {\n                if (e.loop) {\n                  var t = e.wavesurfer.getCurrentTime();\n                  t >= e.start && t <= e.end && e.wavesurfer.play(e.start);\n                }\n              });\n            }\n          }, {\n            key: \"bindEvents\",\n            value: function () {\n              var e = this,\n                t = this.preventContextMenu;\n              this.element.addEventListener(\"mouseenter\", function (t) {\n                e.fireEvent(\"mouseenter\", t), e.wavesurfer.fireEvent(\"region-mouseenter\", e, t);\n              }), this.element.addEventListener(\"mouseleave\", function (t) {\n                e.fireEvent(\"mouseleave\", t), e.wavesurfer.fireEvent(\"region-mouseleave\", e, t);\n              }), this.element.addEventListener(\"click\", function (t) {\n                t.preventDefault(), e.fireEvent(\"click\", t), e.wavesurfer.fireEvent(\"region-click\", e, t);\n              }), this.element.addEventListener(\"dblclick\", function (t) {\n                t.stopPropagation(), t.preventDefault(), e.fireEvent(\"dblclick\", t), e.wavesurfer.fireEvent(\"region-dblclick\", e, t);\n              }), this.element.addEventListener(\"contextmenu\", function (r) {\n                t && r.preventDefault(), e.fireEvent(\"contextmenu\", r), e.wavesurfer.fireEvent(\"region-contextmenu\", e, r);\n              }), (this.drag || this.resize) && this.bindDragEvents(), this.contentEditable && (this.contentEl.addEventListener(\"blur\", this.onContentBlur.bind(this)), this.contentEl.addEventListener(\"click\", this.onContentClick.bind(this))), this.removeButton && this.removeButtonEl.addEventListener(\"click\", this.onRemove.bind(this));\n            }\n          }, {\n            key: \"bindDragEvents\",\n            value: function () {\n              var e,\n                t,\n                r,\n                n,\n                i,\n                a,\n                s,\n                o,\n                l,\n                u = this,\n                h = this.wavesurfer.drawer.container,\n                d = this.scrollSpeed,\n                c = !1,\n                f = function t(h) {\n                  var c = u.util.withOrientation(h, u.vertical),\n                    f = u.wavesurfer.getDuration();\n                  if (a && (r || i)) {\n                    var v = c.clientX,\n                      p = 0,\n                      g = 0,\n                      m = 0,\n                      w = u.regionsUtil.getRegionSnapToGridValue(u.wavesurfer.drawer.handleEvent(h) * f);\n                    if (r) -1 === a ? (g = o * u.wavesurfer.params.minPxPerSec, p = v - s.left) : (g = l * u.wavesurfer.params.minPxPerSec, p = s.right - v);else {\n                      var b = u.minLength;\n                      b || (b = 0), \"start\" === i ? (w > u.end - b && (w = u.end - b, m = d * a), w < 0 && (w = 0)) : \"end\" === i && (w < u.start + b && (w = u.start + b, m = d * a), w > f && (w = f));\n                    }\n                    var y = u.wrapper.scrollLeft;\n                    if (-1 === a) {\n                      if (0 === Math.round(y)) return;\n                      if (Math.round(y - g + p) <= 0) return;\n                    } else {\n                      if (Math.round(y) === n) return;\n                      if (Math.round(y + g - p) >= n) return;\n                    }\n                    var E = y - m + d * a;\n                    if (-1 === a) {\n                      var L = Math.max(0 + g - p, E);\n                      u.wrapper.scrollLeft = E = L;\n                    } else {\n                      var x = Math.min(n - g + p, E);\n                      u.wrapper.scrollLeft = E = x;\n                    }\n                    var k = w - e;\n                    e = w, r ? u.onDrag(k) : u.onResize(k, i), window.requestAnimationFrame(function () {\n                      t(h);\n                    });\n                  }\n                },\n                v = function (a) {\n                  var h = u.wavesurfer.getDuration();\n                  a.touches && a.touches.length > 1 || (t = a.targetTouches ? a.targetTouches[0].identifier : null, (u.drag || u.resize) && a.stopPropagation(), e = u.regionsUtil.getRegionSnapToGridValue(u.wavesurfer.drawer.handleEvent(a, !0) * h), o = e - u.start, l = u.end - e, n = u.wrapper.scrollWidth - u.wrapper.clientWidth, s = u.util.withOrientation(u.wrapper.getBoundingClientRect(), u.vertical), u.isResizing = !1, u.isDragging = !1, \"handle\" === a.target.tagName.toLowerCase() ? (u.isResizing = !0, i = a.target.classList.contains(\"wavesurfer-handle-start\") ? \"start\" : \"end\") : (u.isDragging = !0, r = !0, i = !1));\n                },\n                p = function (e) {\n                  e.touches && e.touches.length > 1 || ((r || i) && (u.isDragging = !1, u.isResizing = !1, r = !1, a = null, i = !1), c && (c = !1, u.util.preventClick(), u.fireEvent(\"update-end\", e), u.wavesurfer.fireEvent(\"region-update-end\", u, e)));\n                },\n                g = function (n) {\n                  var d = u.wavesurfer.getDuration(),\n                    v = u.util.withOrientation(n, u.vertical),\n                    p = null;\n                  if (!(n.touches && n.touches.length > 1) && (!n.targetTouches || n.targetTouches[0].identifier == t) && (r || i)) {\n                    var g = u.regionsUtil.getRegionSnapToGridValue(u.wavesurfer.drawer.handleEvent(n) * d);\n                    if (r) {\n                      var m = u.wavesurfer.getDuration();\n                      g > m - l && (g = m - l), g - o < 0 && (g = o);\n                    }\n                    if (i) {\n                      var w = u.minLength;\n                      w || (w = 0), \"start\" === i ? (g > u.end - w && (g = u.end - w), g < 0 && (g = 0)) : \"end\" === i && (g < u.start + w && (p = (g = u.start + w) - (u.end + (g - e))), g > d && (g = d));\n                    }\n                    if (p || (p = g - e), e = g, u.drag && r && (c = c || !!p, u.onDrag(p)), u.resize && i && (c = c || !!p, u.onResize(p, i)), u.scroll && h.clientWidth < u.wrapper.scrollWidth) {\n                      var b = v.clientX;\n                      (a = b < s.left + u.edgeScrollWidth ? -1 : b > s.right - u.edgeScrollWidth ? 1 : null) && f(n);\n                    }\n                  }\n                };\n              this.element.addEventListener(\"mousedown\", v), this.element.addEventListener(\"touchstart\", v), document.body.addEventListener(\"mousemove\", g), document.body.addEventListener(\"touchmove\", g, {\n                passive: !1\n              }), document.addEventListener(\"mouseup\", p), document.body.addEventListener(\"touchend\", p), this.on(\"remove\", function () {\n                document.removeEventListener(\"mouseup\", p), document.body.removeEventListener(\"touchend\", p), document.body.removeEventListener(\"mousemove\", g), document.body.removeEventListener(\"touchmove\", g);\n              }), this.wavesurfer.on(\"destroy\", function () {\n                document.removeEventListener(\"mouseup\", p), document.body.removeEventListener(\"touchend\", p);\n              });\n            }\n          }, {\n            key: \"onDrag\",\n            value: function (e) {\n              var t = this.wavesurfer.getDuration();\n              this.end + e > t && (e = t - this.end), this.start + e < 0 && (e = -1 * this.start);\n              var r = {\n                direction: this._getDragDirection(e),\n                action: \"drag\"\n              };\n              this.update({\n                start: this.start + e,\n                end: this.end + e\n              }, r);\n            }\n          }, {\n            key: \"_getDragDirection\",\n            value: function (e) {\n              return e < 0 ? \"left\" : e > 0 ? \"right\" : null;\n            }\n          }, {\n            key: \"onResize\",\n            value: function (e, t) {\n              var r = this.wavesurfer.getDuration(),\n                n = {\n                  action: \"resize\",\n                  direction: \"start\" === t ? \"left\" : \"right\"\n                };\n              \"start\" === t ? (e > 0 && this.end - (this.start + e) < this.minLength && (e = this.end - this.minLength - this.start), e < 0 && this.end - (this.start + e) > this.maxLength && (e = this.end - this.start - this.maxLength), e < 0 && this.start + e < 0 && (e = -1 * this.start), this.update({\n                start: Math.min(this.start + e, this.end),\n                end: Math.max(this.start + e, this.end)\n              }, n)) : (e < 0 && this.end + e - this.start < this.minLength && (e = this.start + this.minLength - this.end), e > 0 && this.end + e - this.start > this.maxLength && (e = this.maxLength - (this.end - this.start)), e > 0 && this.end + e > r && (e = r - this.end), this.update({\n                start: Math.min(this.end + e, this.start),\n                end: Math.max(this.end + e, this.start)\n              }, n));\n            }\n          }, {\n            key: \"onContentBlur\",\n            value: function (e) {\n              var t = (this.data || {}).text,\n                r = e.target.innerText,\n                n = i(i({}, this.data), {}, {\n                  text: r\n                }),\n                a = {\n                  action: \"contentEdited\",\n                  oldText: t,\n                  text: r\n                };\n              this.update({\n                data: n\n              }, a);\n            }\n          }, {\n            key: \"onContentClick\",\n            value: function (e) {\n              e.stopPropagation();\n            }\n          }, {\n            key: \"onRemove\",\n            value: function (e) {\n              e.stopPropagation(), this.remove();\n            }\n          }, {\n            key: \"updateHandlesResize\",\n            value: function (e) {\n              var t;\n              t = e ? this.vertical ? \"row-resize\" : \"col-resize\" : \"auto\", this.handleLeftEl && this.style(this.handleLeftEl, {\n                cursor: t\n              }), this.handleRightEl && this.style(this.handleRightEl, {\n                cursor: t\n              });\n            }\n          }]) && s(t.prototype, r), n && s(t, n), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n          }), e;\n        }();\n        t.Region = l;\n      }\n    },\n    t = {};\n  var r = function r(n) {\n    var i = t[n];\n    if (void 0 !== i) return i.exports;\n    var a = t[n] = {\n      exports: {}\n    };\n    return e[n](a, a.exports, r), a.exports;\n  }(23);\n  return r;\n})());","map":{"version":3,"names":["e","t","exports","module","define","amd","WaveSurfer","regions","self","n","r","i","Symbol","iterator","constructor","prototype","a","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","s","arguments","length","forEach","o","getOwnPropertyDescriptors","defineProperties","defineProperty","u","value","configurable","writable","l","key","toPrimitive","call","TypeError","String","Number","h","params","wavesurfer","util","getRegionSnapToGridValue","maxRegions","regionsMinLength","getOwnPropertyNames","Observer","Region","_onBackendCreated","wrapper","drawer","orientation","defaultEdgeScrollWidth","clientWidth","add","list","_onReady","vertical","dragSelection","enableDragSelection","updateRender","name","deferInit","staticProps","addRegion","initialisedPluginList","initPlugin","clearRegions","clear","disableDragSelection","instance","isReady","once","un","setDisabledEventEmissions","wouldExceedMaxRegions","edgeScrollWidth","contentEditable","removeButton","formatTimeCallback","minLength","id","on","remove","slop","container","d","scroll","scrollParent","c","scrollSpeed","f","scrollThreshold","v","getDuration","p","g","scrollLeft","Math","min","max","handleEvent","update","start","end","window","requestAnimationFrame","m","eventDown","touches","targetTouches","identifier","scrollWidth","withOrientation","getBoundingClientRect","splitChannels","splitChannelsOptions","splitDragSelection","clientY","top","backend","buffer","numberOfChannels","clientHeight","floor","channelIdx","channelColors","dragColor","color","addEventListener","removeEventListener","w","eventUp","preventClick","fireEvent","document","body","b","eventMove","y","clientX","left","right","getCurrentTime","snapToGridInterval","snapToGridOffset","round","default","style","regionsUtil","getId","resize","Boolean","drag","isResizing","isDragging","loop","handleStyle","handleLeftEl","handleRightEl","data","attributes","showTooltip","maxLength","_onRedraw","preventContextMenu","parseInt","regionHeight","marginTop","getHeight","bindInOut","render","updateHandlesResize","element","play","appendChild","createElement","className","title","formatTime","setAttribute","position","zIndex","height","textContent","removeButtonEl","bottom","cursor","fontSize","lineHeight","innerText","text","contentEl","padding","width","backgroundColor","assign","bindEvents","map","slice","join","pixelRatio","getWidth","firedIn","firedOut","onProcess","preventDefault","stopPropagation","bindDragEvents","onContentBlur","bind","onContentClick","onRemove","minPxPerSec","E","L","x","k","onDrag","onResize","onDown","target","tagName","toLowerCase","classList","contains","onUp","onMove","passive","direction","_getDragDirection","action","oldText"],"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/src/plugin/regions/index.js","webpack://WaveSurfer/src/plugin/regions/region.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(self, () => {\nreturn ","/**\n *  @since 4.0.0 This class has been split\n *\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?boolean} contentEditable=false Allow/disallow editing content of the region\n * @property {?boolean} removeButton=false adds remove region button\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * @property {number} maxRegions Maximum number of regions that may be created by the user at one time.\n * `initPlugin('regions')`\n * @property {function} formatTimeCallback Allows custom formating for region tooltip.\n * @property {?number} edgeScrollWidth='5% from container edges' Optional width for edgeScroll to start\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\n * @property {?object} handleStyle A set of CSS properties used to style the left and right handle.\n * @property {?boolean} preventContextMenu=false Determines whether the context menu is prevented from being opened.\n * @property {boolean} showTooltip=true Enable/disable tooltip displaying start and end times when hovering over region.\n */\n\nimport {Region} from \"./region.js\";\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = {\n            ...ws.util,\n            getRegionSnapToGridValue: value => {\n                return this.getRegionSnapToGridValue(value, params);\n            }\n        };\n        this.maxRegions = params.maxRegions;\n        this.regionsMinLength = params.regionsMinLength || null;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        // By default, scroll the container if the user drags a region\n        // within 5% (based on its initial size) of its edge\n        const scrollWidthProportion = 0.05;\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this.orientation = this.wavesurfer.drawer.orientation;\n            this.defaultEdgeScrollWidth = this.wrapper.clientWidth * scrollWidthProportion;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this.vertical = this.wavesurfer.drawer.params.vertical;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        // Disabling `region-removed' because destroying the plugin calls\n        // the Region.remove() method that is also used to remove regions based\n        // on user input. This can cause confusion since teardown is not a\n        // user event, but would emit `region-removed` as if it was.\n        this.wavesurfer.setDisabledEventEmissions(['region-removed']);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * check to see if adding a new region would exceed maxRegions\n     * @return {boolean} whether we should proceed and create a region\n     * @private\n     */\n    wouldExceedMaxRegions() {\n        return (\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\n        );\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        if (this.wouldExceedMaxRegions()) {\n            return null;\n        }\n\n        params = {\n            edgeScrollWidth: this.params.edgeScrollWidth || this.defaultEdgeScrollWidth,\n            contentEditable: this.params.contentEditable,\n            removeButton: this.params.removeButton,\n            ...params\n        };\n\n        // Take formatTimeCallback from plugin params if not already set\n        if (!params.formatTimeCallback && this.params.formatTimeCallback) {\n            params = {...params, formatTimeCallback: this.params.formatTimeCallback};\n        }\n\n        if (!params.minLength && this.regionsMinLength) {\n            params = {...params, minLength: this.regionsMinLength};\n        }\n\n        const region = new this.wavesurfer.Region(params, this.util, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        this.disableDragSelection();\n\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth -\n                this.wrapper.clientWidth;\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            // set the region channel index based on the clicked area\n            if (this.wavesurfer.params.splitChannels && this.wavesurfer.params.splitChannelsOptions.splitDragSelection) {\n                const y = (e.touches ? e.touches[0].clientY : e.clientY) - wrapperRect.top;\n                const channelCount = this.wavesurfer.backend.buffer != null ? this.wavesurfer.backend.buffer.numberOfChannels : 1;\n                const channelHeight = this.wrapper.clientHeight / channelCount;\n                const channelIdx = Math.floor(y / channelHeight);\n                params.channelIdx = channelIdx;\n                const channelColors = this.wavesurfer.params.splitChannelsOptions.channelColors[channelIdx];\n                if (channelColors && channelColors.dragColor) {\n                    params.color = channelColors.dragColor;\n                }\n            }\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseleave', eventUp);\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n            this.wrapper.removeEventListener('mouseleave', eventUp);\n        });\n\n        const eventMove = event => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n            if (!region) {\n                region = this.add(params || {});\n                if (!region) {\n                    return;\n                }\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(event);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = orientedEvent.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(event);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n\n        this.wavesurfer.on('region-created', region => {\n            if (this.regionsMinLength) {\n                region.minLength = this.regionsMinLength;\n            }\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n","/**\n *  @since 4.0.0\n *\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nexport class Region {\n    constructor(params, regionsUtils, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.regionsUtil = regionsUtils;\n        this.vertical = ws.drawer.params.vertical;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                this.start +\n                (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        this.contentEditable = Boolean(params.contentEditable);\n        this.removeButton = Boolean(params.removeButton);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        // The left and right handleStyle properties can be set to 'none' for\n        // no styling or can be assigned an object containing CSS properties.\n        this.handleStyle = params.handleStyle || {\n            left: {},\n            right: {}\n        };\n        this.handleLeftEl = null;\n        this.handleRightEl = null;\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n        this.showTooltip = params.showTooltip ?? true;\n\n        this.maxLength = params.maxLength;\n        // It assumes the minLength parameter value, or the regionsMinLength parameter value, if the first one not provided\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n        // Determines whether the context menu is prevented from being opened.\n        this.preventContextMenu =\n            params.preventContextMenu === undefined\n                ? false\n                : Boolean(params.preventContextMenu);\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.channelIdx = channelIdx;\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n\n        if (channelIdx !== -1) {\n            let channelCount =\n                this.wavesurfer.backend.buffer != null\n                    ? this.wavesurfer.backend.buffer.numberOfChannels\n                    : -1;\n            if (channelCount >= 0 && channelIdx < channelCount) {\n                this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n                this.marginTop =\n                    this.wavesurfer.getHeight() * channelIdx + 'px';\n            }\n        }\n\n        this.formatTimeCallback = params.formatTimeCallback;\n        this.edgeScrollWidth = params.edgeScrollWidth;\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params, eventParams) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n            this.updateHandlesResize(this.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this, eventParams);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.element.remove();\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        this.loop = true;\n        this.play(start);\n    }\n\n    /**\n     * Set looping on/off.\n     * @param {boolean} loop True if should play in loop\n     */\n    setLoop(loop) {\n        this.loop = loop;\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        this.element = this.util.withOrientation(\n            this.wrapper.appendChild(document.createElement('region')),\n            this.vertical\n        );\n\n        this.element.className = 'wavesurfer-region';\n        if (this.showTooltip) {\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n        this.element.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            this.element.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(this.element, {\n            position: 'absolute',\n            zIndex: 3,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Button Remove Region */\n        if (this.removeButton){\n            const removeButtonEl = document.createElement('div');\n            removeButtonEl.className = 'remove-region-button';\n            removeButtonEl.textContent = '⨯';\n            this.removeButtonEl = this.element.appendChild(removeButtonEl);\n            const css = {\n                zIndex: 4,\n                position: 'absolute',\n                bottom: 0,\n                right: '4px',\n                cursor:'pointer',\n                fontSize: '20px',\n                lineHeight: '21px',\n                color: 'grey'\n            };\n            this.style(this.removeButtonEl, css);\n        }\n\n        /* Edit content */\n        if (this.contentEditable){\n            const contentEl = document.createElement('div');\n            contentEl.className = 'region-content';\n            contentEl.contentEditable = 'true';\n            contentEl.innerText = this.data.text || '';\n            this.contentEl = this.element.appendChild(contentEl);\n            const css = {\n                zIndex: 4,\n                padding: '2px 5px',\n                cursor:'text'};\n            this.style(this.contentEl, css);\n        }\n\n        /* Resize handles */\n        if (this.resize) {\n            this.handleLeftEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n            this.handleRightEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n\n            this.handleLeftEl.className = 'wavesurfer-handle wavesurfer-handle-start';\n            this.handleRightEl.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n            // Default CSS properties for both handles.\n            const css = {\n                cursor: this.vertical ? 'row-resize' : 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '2px',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            };\n\n            // Merge CSS properties per handle.\n            const handleLeftCss =\n                this.handleStyle.left !== 'none'\n                    ? Object.assign(\n                        { left: '0px' },\n                        css,\n                        this.handleStyle.left\n                    )\n                    : null;\n            const handleRightCss =\n                this.handleStyle.right !== 'none'\n                    ? Object.assign(\n                        { right: '0px' },\n                        css,\n                        this.handleStyle.right\n                    )\n                    : null;\n\n            if (handleLeftCss) {\n                this.style(this.handleLeftEl, handleLeftCss);\n            }\n\n            if (handleRightCss) {\n                this.style(this.handleRightEl, handleRightCss);\n            }\n        }\n\n        this.updateRender();\n        this.bindEvents();\n    }\n\n    formatTime(start, end) {\n        if (this.formatTimeCallback) {\n            return this.formatTimeCallback(start, end);\n        }\n        return (start == end ? [start] : [start, end])\n            .map((time) =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        let startLimited = this.start;\n        let endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            if (this.showTooltip) {\n                this.element.title = this.formatTime(this.start, this.end);\n            }\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = (time) => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                const realTime = this.wavesurfer.getCurrentTime();\n                if (realTime >= this.start && realTime <= this.end) {\n                    this.wavesurfer.play(this.start);\n                }\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        const preventContextMenu = this.preventContextMenu;\n\n        this.element.addEventListener('mouseenter', (e) => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', (e) => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        this.element.addEventListener('contextmenu', (e) => {\n            if (preventContextMenu) {\n                e.preventDefault();\n            }\n            this.fireEvent('contextmenu', e);\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n\n        /* Edit content */\n        if (this.contentEditable){\n            this.contentEl.addEventListener('blur', this.onContentBlur.bind(this));\n            this.contentEl.addEventListener('click', this.onContentClick.bind(this));\n        }\n        /* Remove button */\n        if (this.removeButton){\n            this.removeButtonEl.addEventListener('click', this.onRemove.bind(this));\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n        let regionLeftHalfTime;\n        let regionRightHalfTime;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = (event) => {\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            const x = orientedEvent.clientX;\n            let distanceBetweenCursorAndWrapperEdge = 0;\n            let regionHalfTimeWidth = 0;\n            let adjustment = 0;\n\n            // Get the currently selected time according to the mouse position\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // Considering the point of contact with the region while edgescrolling\n                if (scrollDirection === -1) {\n                    regionHalfTimeWidth = regionLeftHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = x - wrapperRect.left;\n                } else {\n                    regionHalfTimeWidth = regionRightHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = wrapperRect.right - x;\n                }\n            } else {\n                // Considering minLength while edgescroll\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        time = this.start + minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            // Don't edgescroll if region has reached min or max limit\n            const wrapperScrollLeft = this.wrapper.scrollLeft;\n\n            if (scrollDirection === -1) {\n                if (Math.round(wrapperScrollLeft) === 0) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge) <= 0) {\n                    return;\n                }\n            } else {\n                if (Math.round(wrapperScrollLeft) === maxScroll) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge) >= maxScroll) {\n                    return;\n                }\n            }\n\n            // Update scroll position\n            let scrollLeft = wrapperScrollLeft - adjustment + scrollSpeed * scrollDirection;\n\n            if (scrollDirection === -1) {\n                const calculatedLeft = Math.max(0 + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedLeft;\n            } else {\n                const calculatedRight = Math.min(maxScroll - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedRight;\n            }\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(event);\n            });\n        };\n\n        const onDown = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            touchId = event.targetTouches ? event.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                event.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event, true) * duration\n            );\n\n            // Store the selected point of contact when we begin dragging\n            regionLeftHalfTime = startTime - this.start;\n            regionRightHalfTime = this.end - startTime;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (event.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = event.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = (event) => {\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', event);\n                this.wavesurfer.fireEvent('region-update-end', this, event);\n            }\n        };\n        const onMove = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n            let delta = null;\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // To maintain relative cursor start point while dragging\n                const maxEnd = this.wavesurfer.getDuration();\n                if (time > maxEnd - regionRightHalfTime) {\n                    time = maxEnd - regionRightHalfTime;\n                }\n\n                if (time - regionLeftHalfTime < 0) {\n                    time = regionLeftHalfTime;\n                }\n            }\n\n            if (resize) {\n                // To maintain relative cursor start point while resizing\n                // we have to handle for minLength\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        // Calculate the end time based on the min length of the region.\n                        time = this.start + minLength;\n                        delta = time - (this.end + (time - startTime));\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            if (!delta) {\n                delta = time - startTime;\n            }\n\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll && container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                // Triggering edgescroll from within edgeScrollWidth\n                let x = orientedEvent.clientX;\n\n                // Check direction\n                if (x < wrapperRect.left + this.edgeScrollWidth) {\n                    scrollDirection = -1;\n                } else if (x > wrapperRect.right - this.edgeScrollWidth) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(event);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        document.body.addEventListener('mousemove', onMove);\n        document.body.addEventListener('touchmove', onMove, {passive: false});\n\n        document.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            document.body.removeEventListener('mousemove', onMove);\n            document.body.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd) {\n            delta = maxEnd - this.end;\n        }\n\n        if (this.start + delta < 0) {\n            delta = this.start * -1;\n        }\n\n        const eventParams = {\n            direction: this._getDragDirection(delta),\n            action: 'drag'\n        };\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        }, eventParams);\n    }\n\n    /**\n     * Returns the direction of dragging region based on delta\n     * Negative delta means region is moving to the left\n     * Positive - to the right\n     * For zero delta the direction is not defined\n     * @param {number} delta Drag offset\n     * @returns {string|null} Direction 'left', 'right' or null\n     */\n    _getDragDirection(delta) {\n        if (delta < 0) {\n            return 'left';\n        }\n        if (delta > 0) {\n            return 'right';\n        }\n        return null;\n    }\n\n    /**\n     * @example\n     * onResize(-5, 'start') // Moves the start point 5 seconds back\n     * onResize(0.5, 'end') // Moves the end point 0.5 seconds forward\n     *\n     * @param {number} delta How much to add or subtract, given in seconds\n     * @param {string} direction 'start 'or 'end'\n     */\n    onResize(delta, direction) {\n        const duration = this.wavesurfer.getDuration();\n        const eventParams = {\n            action: 'resize',\n            direction: direction === 'start' ? 'left' : 'right'\n        };\n\n        if (direction === 'start') {\n            // Check if changing the start by the given delta would result in the region being smaller than minLength\n            if (delta > 0 && this.end - (this.start + delta) < this.minLength) {\n                delta = this.end - this.minLength - this.start;\n            }\n\n            // Check if changing the start by the given delta would result in the region being larger than maxLength\n            if (delta < 0 && this.end - (this.start + delta) > this.maxLength) {\n                delta = this.end - this.start - this.maxLength;\n            }\n\n            if (delta < 0 && (this.start + delta) < 0) {\n                delta = this.start * -1;\n            }\n\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            }, eventParams);\n        } else {\n            // Check if changing the end by the given delta would result in the region being smaller than minLength\n            if (delta < 0 && this.end + delta - this.start < this.minLength) {\n                delta = this.start + this.minLength - this.end;\n            }\n\n            // Check if changing the end by the given delta would result in the region being larger than maxLength\n            if (delta > 0 && this.end + delta - this.start > this.maxLength) {\n                delta = this.maxLength - (this.end - this.start);\n            }\n\n            if (delta > 0 && (this.end + delta) > duration) {\n                delta = duration - this.end;\n            }\n\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            }, eventParams);\n        }\n    }\n\n    onContentBlur(event){\n        const {text: oldText} = this.data || {};\n        const text = event.target.innerText;\n        const data = {...this.data, text };\n        const eventParams = {action: 'contentEdited', oldText, text};\n        this.update({data}, eventParams);\n    }\n\n    onContentClick(event){\n        event.stopPropagation();\n    }\n\n    onRemove(event){\n        event.stopPropagation();\n        this.remove();\n    }\n\n    updateHandlesResize(resize) {\n        let cursorStyle;\n        if (resize) {\n            cursorStyle = this.vertical ? 'row-resize' : 'col-resize';\n        } else {\n            cursorStyle = 'auto';\n        }\n\n        this.handleLeftEl && this.style(this.handleLeftEl, { cursor: cursorStyle });\n        this.handleRightEl && this.style(this.handleRightEl, { cursor: cursorStyle });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(23);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}