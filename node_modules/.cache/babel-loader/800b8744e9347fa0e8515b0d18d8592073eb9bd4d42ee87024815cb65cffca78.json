{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/wavesurfer/test2Players/Player1.tsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { WaveSurfer, WaveForm } from \"wavesurfer-react\";\nimport WordMarker from \"../SuperZhestkyiPlayer/WordMarker\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WaveSurferDisplay = ({\n  onMount,\n  plugins,\n  zoom,\n  autoCenter,\n  isWavesurferReady,\n  keywords,\n  channelCount\n}) => {\n  _s();\n  const wavesurferRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WaveSurfer, {\n      onMount: ws => {\n        wavesurferRef.current = ws;\n        onMount(ws);\n      },\n      plugins: plugins,\n      children: [/*#__PURE__*/_jsxDEV(WaveForm, {\n        id: \"waveform\",\n        waveColor: \"#b7e1dd\",\n        progressColor: \"#4Db6AC\",\n        cursorColor: \"#357F78\",\n        autoCenter: autoCenter,\n        splitChannels: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"20px\"\n        },\n        id: \"timeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), isWavesurferReady && wavesurferRef.current && keywords.map((kw, index) => /*#__PURE__*/_jsxDEV(WordMarker, {\n      keyword: kw.keyword,\n      color: kw.color,\n      wavesurfer: wavesurferRef.current,\n      zoom: zoom,\n      isReady: isWavesurferReady,\n      channelCount: channelCount\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n_s(WaveSurferDisplay, \"G6ha4Z/d+/OxmcbTXGXgRnDjrl4=\");\n_c = WaveSurferDisplay;\nexport default WaveSurferDisplay;\nvar _c;\n$RefreshReg$(_c, \"WaveSurferDisplay\");","map":{"version":3,"names":["useRef","WaveSurfer","WaveForm","WordMarker","jsxDEV","_jsxDEV","Fragment","_Fragment","WaveSurferDisplay","onMount","plugins","zoom","autoCenter","isWavesurferReady","keywords","channelCount","_s","wavesurferRef","children","ws","current","id","waveColor","progressColor","cursorColor","splitChannels","fileName","_jsxFileName","lineNumber","columnNumber","style","height","map","kw","index","keyword","color","wavesurfer","isReady","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/wavesurfer/test2Players/Player1.tsx"],"sourcesContent":["import { FC, useRef,} from \"react\";\nimport { WaveSurfer, WaveForm } from \"wavesurfer-react\";\nimport WordMarker from \"../SuperZhestkyiPlayer/WordMarker\";\n\n\nconst WaveSurferDisplay: FC<{\n    onMount: (waveSurfer: any) => void;\n    plugins: any[];\n    zoom: number;\n    autoCenter: boolean;\n    isWavesurferReady: boolean;\n    keywords: any[];\n    channelCount: number;\n  }> = ({ onMount, plugins, zoom, autoCenter, isWavesurferReady, keywords, channelCount }) => {\n    const wavesurferRef = useRef<any>(null);\n  \n    return (\n      <>\n        <WaveSurfer onMount={(ws) => {\n          wavesurferRef.current = ws;\n          onMount(ws);\n        }} plugins={plugins}>\n          <WaveForm\n            id=\"waveform\"\n            waveColor=\"#b7e1dd\"\n            progressColor=\"#4Db6AC\"\n            cursorColor=\"#357F78\"\n            autoCenter={autoCenter}\n            splitChannels={true}\n          />\n          <div style={{ height: \"20px\" }} id=\"timeline\" />\n        </WaveSurfer>\n  \n        {isWavesurferReady && wavesurferRef.current && keywords.map((kw, index) => (\n          <WordMarker\n            key={index}\n            keyword={kw.keyword}\n            color={kw.color}\n            wavesurfer={wavesurferRef.current}\n            zoom={zoom}\n            isReady={isWavesurferReady}\n            channelCount={channelCount}\n          />\n        ))}\n      </>\n    );\n  };\n\n  export default WaveSurferDisplay"],"mappings":";;AAAA,SAAaA,MAAM,QAAQ,OAAO;AAClC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,kBAAkB;AACvD,OAAOC,UAAU,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3D,MAAMC,iBAQF,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC,IAAI;EAAEC,UAAU;EAAEC,iBAAiB;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1F,MAAMC,aAAa,GAAGjB,MAAM,CAAM,IAAI,CAAC;EAEvC,oBACEK,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACJ,UAAU;MAACQ,OAAO,EAAGU,EAAE,IAAK;QAC3BF,aAAa,CAACG,OAAO,GAAGD,EAAE;QAC1BV,OAAO,CAACU,EAAE,CAAC;MACb,CAAE;MAACT,OAAO,EAAEA,OAAQ;MAAAQ,QAAA,gBAClBb,OAAA,CAACH,QAAQ;QACPmB,EAAE,EAAC,UAAU;QACbC,SAAS,EAAC,SAAS;QACnBC,aAAa,EAAC,SAAS;QACvBC,WAAW,EAAC,SAAS;QACrBZ,UAAU,EAAEA,UAAW;QACvBa,aAAa,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFxB,OAAA;QAAKyB,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAO,CAAE;QAACV,EAAE,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EAEZhB,iBAAiB,IAAII,aAAa,CAACG,OAAO,IAAIN,QAAQ,CAACkB,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,kBACpE7B,OAAA,CAACF,UAAU;MAETgC,OAAO,EAAEF,EAAE,CAACE,OAAQ;MACpBC,KAAK,EAAEH,EAAE,CAACG,KAAM;MAChBC,UAAU,EAAEpB,aAAa,CAACG,OAAQ;MAClCT,IAAI,EAAEA,IAAK;MACX2B,OAAO,EAAEzB,iBAAkB;MAC3BE,YAAY,EAAEA;IAAa,GANtBmB,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOX,CACF,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACb,EAAA,CAzCER,iBAQF;AAAA+B,EAAA,GARE/B,iBAQF;AAmCF,eAAeA,iBAAiB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}