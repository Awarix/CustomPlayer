{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/graph/CallGraph.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallGraph = ({\n  people\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    if (!svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    // Очищаем SVG перед отрисовкой\n    svg.selectAll('*').remove();\n    const graph = generateCallGraph(people);\n    const simulation = d3.forceSimulation(graph.nodes).force('link', d3.forceLink(graph.links).id(d => d.id)).force('charge', d3.forceManyBody()).force('center', d3.forceCenter(width / 2, height / 2));\n    const link = svg.append('g').selectAll('line').data(graph.links).enter().append('line').attr('stroke', '#999').attr('stroke-opacity', 0.6);\n    const node = svg.append('g').selectAll('circle').data(graph.nodes).enter().append('circle').attr('r', 5).attr('fill', '#69b3a2');\n    node.append('title').text(d => d.name);\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n    });\n  }, [people]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    width: \"600\",\n    height: \"400\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_s(CallGraph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = CallGraph;\nfunction generateCallGraph(people) {\n  const nodes = [];\n  const links = [];\n  people.forEach(person => {\n    nodes.push({\n      id: person.phone,\n      name: `${person.name} ${person.surname}`\n    });\n  });\n  people.forEach(person => {\n    person.outgoing.forEach(outgoingCall => {\n      links.push({\n        source: person.phone,\n        target: outgoingCall\n      });\n    });\n  });\n  return {\n    nodes,\n    links\n  };\n}\nexport default CallGraph;\nvar _c;\n$RefreshReg$(_c, \"CallGraph\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","CallGraph","people","_s","svgRef","current","svg","select","width","attr","height","selectAll","remove","graph","generateCallGraph","simulation","forceSimulation","nodes","force","forceLink","links","id","d","forceManyBody","forceCenter","link","append","data","enter","node","text","name","on","source","x","y","target","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","forEach","person","push","phone","surname","outgoing","outgoingCall","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/graph/CallGraph.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { Person, Graph, Node, Link } from './types';\n\ninterface CallGraphProps {\n  people: Person[];\n}\n\nconst CallGraph: React.FC<CallGraphProps> = ({ people }) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    if (!svgRef.current) return;\n\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    // Очищаем SVG перед отрисовкой\n    svg.selectAll('*').remove();\n\n    const graph = generateCallGraph(people);\n\n    const simulation = d3.forceSimulation(graph.nodes)\n      .force('link', d3.forceLink<Node, Link>(graph.links).id(d => d.id))\n      .force('charge', d3.forceManyBody())\n      .force('center', d3.forceCenter(width / 2, height / 2));\n\n    const link = svg.append('g')\n      .selectAll('line')\n      .data(graph.links)\n      .enter().append('line')\n      .attr('stroke', '#999')\n      .attr('stroke-opacity', 0.6);\n\n    const node = svg.append('g')\n      .selectAll('circle')\n      .data(graph.nodes)\n      .enter().append('circle')\n      .attr('r', 5)\n      .attr('fill', '#69b3a2');\n\n    node.append('title')\n      .text(d => d.name);\n\n    simulation.on('tick', () => {\n      link\n        .attr('x1', d => (d.source as unknown as Node).x!)\n        .attr('y1', d => (d.source as unknown as Node).y!)\n        .attr('x2', d => (d.target as unknown as Node).x!)\n        .attr('y2', d => (d.target as unknown as Node).y!);\n\n      node\n        .attr('cx', d => d.x!)\n        .attr('cy', d => d.y!);\n    });\n\n  }, [people]);\n\n  return <svg ref={svgRef} width=\"600\" height=\"400\" />;\n};\n\nfunction generateCallGraph(people: Person[]): Graph {\n  const nodes: Node[] = [];\n  const links: Link[] = [];\n\n  people.forEach(person => {\n    nodes.push({ id: person.phone, name: `${person.name} ${person.surname}` });\n  });\n\n  people.forEach(person => {\n    person.outgoing.forEach(outgoingCall => {\n      links.push({ source: person.phone, target: outgoingCall });\n    });\n  });\n\n  return { nodes, links };\n}\n\nexport default CallGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}