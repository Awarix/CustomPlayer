{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = time => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\nconst ZoomTest4 = ({\n  audioUrl,\n  words,\n  onWordClick\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const timelineRef = useRef(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const [hoveredWord, setHoveredWord] = useState(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      scaledStart: word.start / audioDuration * audioData.length\n    }));\n  }, [words, audioData, audioDuration]);\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    const samplesPerPixel = audioData.length / zoom / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const wordStart = word.scaledStart / audioData.length * width;\n      const wordEnd = (word.scaledStart + word.word.length / 10) / audioData.length * width;\n      if (wordStart >= 0 && wordEnd <= width) {\n        ctx.fillStyle = word.color;\n        ctx.fillRect(wordStart, 0, wordEnd - wordStart, height);\n      }\n    });\n\n    // Draw current time marker\n    if (isPlaying) {\n      const currentTimeSample = currentTime / audioDuration * audioData.length;\n      const currentTimePosition = currentTimeSample / audioData.length * width;\n      ctx.strokeStyle = 'red';\n      ctx.beginPath();\n      ctx.moveTo(currentTimePosition, 0);\n      ctx.lineTo(currentTimePosition, height);\n      ctx.stroke();\n    }\n  }, [audioData, zoom, scrollPosition, scaledWords, hoveredWord, isPlaying, currentTime]);\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n\n      // Use the full audio data instead of downsampling\n      const filteredData = Array.from(channelData);\n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n    fetchAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    var _canvas$parentElement;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = ((_canvas$parentElement = canvas.parentElement) === null || _canvas$parentElement === void 0 ? void 0 : _canvas$parentElement.clientWidth) || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    drawWaveform();\n  }, [drawWaveform]);\n  const handleZoom = direction => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + width * (audioData.length / zoom) / width / 2;\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - width * (audioData.length / newZoom) / width / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n  const handleScroll = e => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n  const handleTimelineClick = e => {\n    const timeline = timelineRef.current;\n    if (!timeline) return;\n    const timelineWidth = timeline.offsetWidth;\n    const clickPosition = e.nativeEvent.offsetX;\n    const newScrollPosition = clickPosition / timelineWidth * (audioData.length / zoom);\n    setScrollPosition(newScrollPosition);\n  };\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (isPlaying) {\n      // Pause audio\n    } else {\n      // Play audio from current time\n    }\n  };\n  const handleAudioTimeUpdate = e => {\n    const audio = e.target;\n    setCurrentTime(audio.currentTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '2000px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: timelineRef,\n        style: {\n          width: '2000px',\n          height: '20px',\n          backgroundColor: 'lightgray',\n          marginTop: '10px'\n        },\n        onClick: handleTimelineClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('out'),\n        disabled: zoom === 1,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('in'),\n        disabled: zoom === 64,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), zoom > 1 && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: canvasRef.current ? canvasRef.current.width / window.devicePixelRatio * (zoom - 1) : 0,\n      value: scrollPosition,\n      onChange: handleScroll,\n      style: {\n        width: '2000px',\n        margin: '10px auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Current Time: \", formatTime(currentTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: handleAudioTimeUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(ZoomTest4, \"7T2O5mKvFQqCFbjRDL3cSW0VLP8=\");\n_c = ZoomTest4;\nexport default ZoomTest4;\nvar _c;\n$RefreshReg$(_c, \"ZoomTest4\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useMemo","jsxDEV","_jsxDEV","formatTime","time","minutes","Math","floor","seconds","toString","padStart","ZoomTest4","audioUrl","words","onWordClick","_s","canvasRef","timelineRef","zoom","setZoom","scrollPosition","setScrollPosition","audioData","setAudioData","hoveredWord","setHoveredWord","audioDuration","setAudioDuration","isPlaying","setIsPlaying","currentTime","setCurrentTime","scaledWords","map","word","scaledStart","start","length","drawWaveform","canvas","current","ctx","getContext","dpr","window","devicePixelRatio","width","height","clearRect","beginPath","samplesPerPixel","startSample","endSample","min","ceil","i","x","y","moveTo","lineTo","strokeStyle","stroke","forEach","wordStart","wordEnd","fillStyle","color","fillRect","currentTimeSample","currentTimePosition","fetchAudio","response","fetch","arrayBuffer","audioContext","AudioContext","webkitAudioContext","audioBuffer","decodeAudioData","channelData","getChannelData","filteredData","Array","from","duration","_canvas$parentElement","parentWidth","parentElement","clientWidth","canvasWidth","style","handleZoom","direction","centerSample","prevZoom","newZoom","max","newScrollPosition","handleScroll","e","parseFloat","target","value","handleTimelineClick","timeline","timelineWidth","offsetWidth","clickPosition","nativeEvent","offsetX","handlePlayPause","handleAudioTimeUpdate","audio","children","margin","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","marginTop","onClick","disabled","type","onChange","display","onTimeUpdate","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest4.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\n\ninterface Word {\n  word: string;\n  color: string;\n  start: number;\n}\n\ninterface WaveformProps {\n  audioUrl: string;\n  words: Word[];\n  onWordClick?: (word: Word) => void;\n}\n\nconst formatTime = (time: number) => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\n\nconst ZoomTest4: React.FC<WaveformProps> = ({ audioUrl, words, onWordClick }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const timelineRef = useRef<HTMLDivElement>(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState<number[]>([]);\n  const [hoveredWord, setHoveredWord] = useState<Word | null>(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      scaledStart: (word.start / audioDuration) * audioData.length,\n    }));\n  }, [words, audioData, audioDuration]);\n\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    const samplesPerPixel = (audioData.length / zoom) / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const wordStart = (word.scaledStart / audioData.length) * width;\n      const wordEnd = ((word.scaledStart + (word.word.length / 10)) / audioData.length) * width;\n\n      if (wordStart >= 0 && wordEnd <= width) {\n        ctx.fillStyle = word.color;\n        ctx.fillRect(wordStart, 0, wordEnd - wordStart, height);\n      }\n    });\n\n    // Draw current time marker\n    if (isPlaying) {\n      const currentTimeSample = (currentTime / audioDuration) * audioData.length;\n      const currentTimePosition = (currentTimeSample / audioData.length) * width;\n      ctx.strokeStyle = 'red';\n      ctx.beginPath();\n      ctx.moveTo(currentTimePosition, 0);\n      ctx.lineTo(currentTimePosition, height);\n      ctx.stroke();\n    }\n  }, [audioData, zoom, scrollPosition, scaledWords, hoveredWord, isPlaying, currentTime]);\n\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n\n      // Use the full audio data instead of downsampling\n      const filteredData = Array.from(channelData);\n\n      setAudioData(filteredData);\n      setAudioDuration(audioBuffer.duration);\n    };\n\n    fetchAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = canvas.parentElement?.clientWidth || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n\n    drawWaveform();\n  }, [drawWaveform]);\n\n  const handleZoom = (direction: 'in' | 'out') => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + (width * (audioData.length / zoom) / width) / 2;\n\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - (width * (audioData.length / newZoom) / width) / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n\n  const handleTimelineClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    const timeline = timelineRef.current;\n    if (!timeline) return;\n\n    const timelineWidth = timeline.offsetWidth;\n    const clickPosition = e.nativeEvent.offsetX;\n    const newScrollPosition = (clickPosition / timelineWidth) * (audioData.length / zoom);\n    setScrollPosition(newScrollPosition);\n  };\n\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n\n    if (isPlaying) {\n      // Pause audio\n    } else {\n      // Play audio from current time\n    }\n  };\n\n  const handleAudioTimeUpdate = (e: React.SyntheticEvent<HTMLAudioElement>) => {\n    const audio = e.target as HTMLAudioElement;\n    setCurrentTime(audio.currentTime);\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ width: '2000px', margin: '0 auto' }}>\n        <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n        <div\n          ref={timelineRef}\n          style={{ width: '2000px', height: '20px', backgroundColor: 'lightgray', marginTop: '10px' }}\n          onClick={handleTimelineClick}\n        />\n      </div>\n      <div>\n        <button onClick={() => handleZoom('out')} disabled={zoom === 1}>Zoom Out</button>\n        <button onClick={() => handleZoom('in')} disabled={zoom === 64}>Zoom In</button>\n        <button onClick={handlePlayPause}>{isPlaying ? 'Pause' : 'Play'}</button>\n      </div>\n      {zoom > 1 && (\n        <input\n          type=\"range\"\n          min={0}\n          max={canvasRef.current ? (canvasRef.current.width / window.devicePixelRatio) * (zoom - 1) : 0}\n          value={scrollPosition}\n          onChange={handleScroll}\n          style={{ width: '2000px', margin: '10px auto', display: 'block' }}\n        />\n      )}\n      <div>\n        Current Time: {formatTime(currentTime)}\n      </div>\n      <audio onTimeUpdate={handleAudioTimeUpdate} />\n    </div>\n  );\n};\n\nexport default ZoomTest4;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}