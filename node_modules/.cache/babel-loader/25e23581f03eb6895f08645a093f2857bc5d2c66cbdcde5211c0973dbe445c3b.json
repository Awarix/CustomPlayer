{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/WaveFormZoomTest.tsx\",\n  _s = $RefreshSig$();\n// import React, { useRef, useEffect, useState } from 'react';\n\n// interface WaveformProps {\n//   audioUrl: string;\n// }\n\n// const WaveFormZoomTest: React.FC<WaveformProps> = ({ audioUrl }) => {\n//   const canvasRef = useRef<HTMLCanvasElement>(null);\n//   const [zoom, setZoom] = useState(1);\n//   const [scrollPosition, setScrollPosition] = useState(0);\n//   const [audioData, setAudioData] = useState<number[]>([]);\n\n//   useEffect(() => {\n//     const fetchAudio = async () => {\n//       const response = await fetch(audioUrl);\n//       const arrayBuffer = await response.arrayBuffer();\n//       const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n//       const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n//       const channelData = audioBuffer.getChannelData(0);\n//       const samples = 1000;\n//       const blockSize = Math.floor(channelData.length / samples);\n//       const filteredData = [];\n//       for (let i = 0; i < samples; i++) {\n//         const blockStart = blockSize * i;\n//         let sum = 0;\n//         for (let j = 0; j < blockSize; j++) {\n//           sum += Math.abs(channelData[blockStart + j]);\n//         }\n//         filteredData.push(sum / blockSize);\n//       }\n//       setAudioData(filteredData);\n//     };\n\n//     fetchAudio();\n//   }, [audioUrl]);\n\n//   useEffect(() => {\n//     const canvas = canvasRef.current;\n//     if (!canvas) return;\n\n//     const ctx = canvas.getContext('2d');\n//     if (!ctx) return;\n\n//     const dpr = window.devicePixelRatio || 1;\n//     const parentWidth = canvas.parentElement?.clientWidth || 0;\n//     canvas.width = parentWidth * 0.8 * dpr;\n//     canvas.height = 300 * dpr;\n//     canvas.style.width = `${parentWidth * 0.8}px`;\n//     canvas.style.height = '300px';\n//     ctx.scale(dpr, dpr);\n\n//     const drawWaveform = () => {\n//       ctx.clearRect(0, 0, canvas.width, canvas.height);\n//       ctx.beginPath();\n//       ctx.moveTo(0, canvas.height / 2);\n//       const width = canvas.width / dpr;\n//       const height = canvas.height / dpr;\n//       const step = width / (audioData.length * zoom);\n//       for (let i = 0; i < audioData.length; i++) {\n//         const x = i * step - scrollPosition;\n//         if (x < 0) continue;\n//         if (x > width) break;\n//         const y = (1 - audioData[i]) * height / 2;\n//         ctx.lineTo(x, y);\n//       }\n//       ctx.strokeStyle = 'blue';\n//       ctx.stroke();\n//     };\n\n//     drawWaveform();\n//   }, [audioData, zoom, scrollPosition]);\n\n//   const handleZoomIn = () => {\n//     setZoom(prev => Math.min(prev * 2, 64));\n//   };\n\n//   const handleZoomOut = () => {\n//     setZoom(prev => Math.max(prev / 2, 1));\n//   };\n\n//   const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setScrollPosition(Number(e.target.value));\n//   };\n\n//   return (\n//     <div style={{ width: '100%' }}>\n//       <div style={{ width: '80%', margin: '0 auto' }}>\n//         <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n//       </div>\n//       <div>\n//         <button onClick={handleZoomOut} disabled={zoom === 1}>Zoom Out</button>\n//         <button onClick={handleZoomIn} disabled={zoom === 64}>Zoom In</button>\n//       </div>\n//       {zoom > 1 && (\n//         <input\n//           type=\"range\"\n//           min={0}\n//           max={canvasRef.current ? (canvasRef.current.width / window.devicePixelRatio) * (1 - 1/zoom) : 0}\n//           value={scrollPosition}\n//           onChange={handleScroll}\n//           style={{ width: '80%', margin: '10px auto', display: 'block' }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WaveFormZoomTest;\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WaveFormZoomTest = ({\n  audioUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      const samples = 1000;\n      const blockSize = Math.floor(channelData.length / samples);\n      const filteredData = [];\n      for (let i = 0; i < samples; i++) {\n        const blockStart = blockSize * i;\n        let sum = 0;\n        for (let j = 0; j < blockSize; j++) {\n          sum += Math.abs(channelData[blockStart + j]);\n        }\n        filteredData.push(sum / blockSize);\n      }\n      setAudioData(filteredData);\n    };\n    fetchAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    var _canvas$parentElement;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = ((_canvas$parentElement = canvas.parentElement) === null || _canvas$parentElement === void 0 ? void 0 : _canvas$parentElement.clientWidth) || 0;\n    const canvasWidth = parentWidth * 0.8;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    ctx.scale(dpr, dpr);\n    const drawWaveform = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.beginPath();\n      const width = canvasWidth;\n      const height = 300;\n      const step = width * zoom / audioData.length;\n      for (let i = 0; i < audioData.length; i++) {\n        const x = i * step - scrollPosition;\n        if (x < -step) continue;\n        if (x > width) break;\n        const y = (1 - audioData[i]) * height / 2;\n        if (i === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      }\n      ctx.strokeStyle = 'blue';\n      ctx.stroke();\n    };\n    drawWaveform();\n  }, [audioData, zoom, scrollPosition]);\n  const handleZoomIn = () => {\n    setZoom(prev => {\n      const newZoom = Math.min(prev * 2, 64);\n      setScrollPosition(prev => prev * (newZoom / prev));\n      return newZoom;\n    });\n  };\n  const handleZoomOut = () => {\n    setZoom(prev => {\n      const newZoom = Math.max(prev / 2, 1);\n      setScrollPosition(prev => prev * (newZoom / prev));\n      return newZoom;\n    });\n  };\n  const handleScroll = e => {\n    setScrollPosition(Number(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        disabled: zoom === 1,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        disabled: zoom === 64,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), zoom > 1 && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: canvasRef.current ? canvasRef.current.width / window.devicePixelRatio * (zoom - 1) : 0,\n      value: scrollPosition,\n      onChange: handleScroll,\n      style: {\n        width: '80%',\n        margin: '10px auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(WaveFormZoomTest, \"SCNx1GmfnXSi0Vxd801qENc9dwU=\");\n_c = WaveFormZoomTest;\nexport default WaveFormZoomTest;\nvar _c;\n$RefreshReg$(_c, \"WaveFormZoomTest\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","WaveFormZoomTest","audioUrl","_s","canvasRef","zoom","setZoom","scrollPosition","setScrollPosition","audioData","setAudioData","fetchAudio","response","fetch","arrayBuffer","audioContext","window","AudioContext","webkitAudioContext","audioBuffer","decodeAudioData","channelData","getChannelData","samples","blockSize","Math","floor","length","filteredData","i","blockStart","sum","j","abs","push","_canvas$parentElement","canvas","current","ctx","getContext","dpr","devicePixelRatio","parentWidth","parentElement","clientWidth","canvasWidth","width","height","style","scale","drawWaveform","clearRect","beginPath","step","x","y","moveTo","lineTo","strokeStyle","stroke","handleZoomIn","prev","newZoom","min","handleZoomOut","max","handleScroll","e","Number","target","value","children","margin","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","onChange","display","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/WaveFormZoomTest.tsx"],"sourcesContent":["// import React, { useRef, useEffect, useState } from 'react';\n\n// interface WaveformProps {\n//   audioUrl: string;\n// }\n\n// const WaveFormZoomTest: React.FC<WaveformProps> = ({ audioUrl }) => {\n//   const canvasRef = useRef<HTMLCanvasElement>(null);\n//   const [zoom, setZoom] = useState(1);\n//   const [scrollPosition, setScrollPosition] = useState(0);\n//   const [audioData, setAudioData] = useState<number[]>([]);\n\n//   useEffect(() => {\n//     const fetchAudio = async () => {\n//       const response = await fetch(audioUrl);\n//       const arrayBuffer = await response.arrayBuffer();\n//       const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n//       const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n//       const channelData = audioBuffer.getChannelData(0);\n//       const samples = 1000;\n//       const blockSize = Math.floor(channelData.length / samples);\n//       const filteredData = [];\n//       for (let i = 0; i < samples; i++) {\n//         const blockStart = blockSize * i;\n//         let sum = 0;\n//         for (let j = 0; j < blockSize; j++) {\n//           sum += Math.abs(channelData[blockStart + j]);\n//         }\n//         filteredData.push(sum / blockSize);\n//       }\n//       setAudioData(filteredData);\n//     };\n\n//     fetchAudio();\n//   }, [audioUrl]);\n\n//   useEffect(() => {\n//     const canvas = canvasRef.current;\n//     if (!canvas) return;\n\n//     const ctx = canvas.getContext('2d');\n//     if (!ctx) return;\n\n//     const dpr = window.devicePixelRatio || 1;\n//     const parentWidth = canvas.parentElement?.clientWidth || 0;\n//     canvas.width = parentWidth * 0.8 * dpr;\n//     canvas.height = 300 * dpr;\n//     canvas.style.width = `${parentWidth * 0.8}px`;\n//     canvas.style.height = '300px';\n//     ctx.scale(dpr, dpr);\n\n//     const drawWaveform = () => {\n//       ctx.clearRect(0, 0, canvas.width, canvas.height);\n//       ctx.beginPath();\n//       ctx.moveTo(0, canvas.height / 2);\n//       const width = canvas.width / dpr;\n//       const height = canvas.height / dpr;\n//       const step = width / (audioData.length * zoom);\n//       for (let i = 0; i < audioData.length; i++) {\n//         const x = i * step - scrollPosition;\n//         if (x < 0) continue;\n//         if (x > width) break;\n//         const y = (1 - audioData[i]) * height / 2;\n//         ctx.lineTo(x, y);\n//       }\n//       ctx.strokeStyle = 'blue';\n//       ctx.stroke();\n//     };\n\n//     drawWaveform();\n//   }, [audioData, zoom, scrollPosition]);\n\n//   const handleZoomIn = () => {\n//     setZoom(prev => Math.min(prev * 2, 64));\n//   };\n\n//   const handleZoomOut = () => {\n//     setZoom(prev => Math.max(prev / 2, 1));\n//   };\n\n//   const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setScrollPosition(Number(e.target.value));\n//   };\n\n//   return (\n//     <div style={{ width: '100%' }}>\n//       <div style={{ width: '80%', margin: '0 auto' }}>\n//         <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n//       </div>\n//       <div>\n//         <button onClick={handleZoomOut} disabled={zoom === 1}>Zoom Out</button>\n//         <button onClick={handleZoomIn} disabled={zoom === 64}>Zoom In</button>\n//       </div>\n//       {zoom > 1 && (\n//         <input\n//           type=\"range\"\n//           min={0}\n//           max={canvasRef.current ? (canvasRef.current.width / window.devicePixelRatio) * (1 - 1/zoom) : 0}\n//           value={scrollPosition}\n//           onChange={handleScroll}\n//           style={{ width: '80%', margin: '10px auto', display: 'block' }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WaveFormZoomTest;\n\n\nimport React, { useRef, useEffect, useState } from 'react';\n\ninterface WaveformProps {\n  audioUrl: string;\n}\n\nconst WaveFormZoomTest: React.FC<WaveformProps> = ({ audioUrl }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState<number[]>([]);\n\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      const channelData = audioBuffer.getChannelData(0);\n      const samples = 1000;\n      const blockSize = Math.floor(channelData.length / samples);\n      const filteredData = [];\n      for (let i = 0; i < samples; i++) {\n        const blockStart = blockSize * i;\n        let sum = 0;\n        for (let j = 0; j < blockSize; j++) {\n          sum += Math.abs(channelData[blockStart + j]);\n        }\n        filteredData.push(sum / blockSize);\n      }\n      setAudioData(filteredData);\n    };\n\n    fetchAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = canvas.parentElement?.clientWidth || 0;\n    const canvasWidth = parentWidth * 0.8;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    ctx.scale(dpr, dpr);\n\n    const drawWaveform = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.beginPath();\n      \n      const width = canvasWidth;\n      const height = 300;\n      const step = (width * zoom) / audioData.length;\n      \n      for (let i = 0; i < audioData.length; i++) {\n        const x = i * step - scrollPosition;\n        if (x < -step) continue;\n        if (x > width) break;\n        const y = (1 - audioData[i]) * height / 2;\n        if (i === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      }\n      \n      ctx.strokeStyle = 'blue';\n      ctx.stroke();\n    };\n\n    drawWaveform();\n  }, [audioData, zoom, scrollPosition]);\n\n  const handleZoomIn = () => {\n    setZoom(prev => {\n      const newZoom = Math.min(prev * 2, 64);\n      setScrollPosition(prev => prev * (newZoom / prev));\n      return newZoom;\n    });\n  };\n\n  const handleZoomOut = () => {\n    setZoom(prev => {\n      const newZoom = Math.max(prev / 2, 1);\n      setScrollPosition(prev => prev * (newZoom / prev));\n      return newZoom;\n    });\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setScrollPosition(Number(e.target.value));\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ width: '80%', margin: '0 auto' }}>\n        <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n      </div>\n      <div>\n        <button onClick={handleZoomOut} disabled={zoom === 1}>Zoom Out</button>\n        <button onClick={handleZoomIn} disabled={zoom === 64}>Zoom In</button>\n      </div>\n      {zoom > 1 && (\n        <input\n          type=\"range\"\n          min={0}\n          max={canvasRef.current ? (canvasRef.current.width / window.devicePixelRatio) * (zoom - 1) : 0}\n          value={scrollPosition}\n          onChange={handleScroll}\n          style={{ width: '80%', margin: '10px auto', display: 'block' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default WaveFormZoomTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}