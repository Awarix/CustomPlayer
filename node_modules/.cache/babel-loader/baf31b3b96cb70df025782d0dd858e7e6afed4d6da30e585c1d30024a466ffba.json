{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/AudioPlayer.tsx\",\n  _s = $RefreshSig$();\n// AudioPlayer.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useAudio } from './AudioContext';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContainer = styled.div`\n  background-color: #2c3e50;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = PlayerContainer;\nconst PlayButton = styled.button`\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.5);\n  }\n`;\n_c2 = PlayButton;\nconst Canvas = styled.canvas`\n  margin-top: 20px;\n  background-color: #34495e;\n  border-radius: 4px;\n`;\n_c3 = Canvas;\nconst AudioPlayer = () => {\n  _s();\n  const {\n    currentAudioUrl\n  } = useAudio();\n  const audioContextRef = useRef(null);\n  const sourceNodeRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    return () => {\n      var _audioContextRef$curr;\n      (_audioContextRef$curr = audioContextRef.current) === null || _audioContextRef$curr === void 0 ? void 0 : _audioContextRef$curr.close();\n    };\n  }, []);\n  const playAudio = async () => {\n    if (!audioContextRef.current) return;\n    if (sourceNodeRef.current) {\n      sourceNodeRef.current.stop();\n    }\n    const response = await fetch(currentAudioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContextRef.current.decodeAudioData(arrayBuffer);\n    sourceNodeRef.current = audioContextRef.current.createBufferSource();\n    sourceNodeRef.current.buffer = audioBuffer;\n    sourceNodeRef.current.connect(audioContextRef.current.destination);\n    const analyser = audioContextRef.current.createAnalyser();\n    sourceNodeRef.current.connect(analyser);\n    sourceNodeRef.current.start();\n    setIsPlaying(true);\n    drawOscilloscope(analyser);\n  };\n  const drawOscilloscope = analyser => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const canvasCtx = canvas.getContext('2d');\n    if (!canvasCtx) return;\n    const draw = () => {\n      const WIDTH = canvas.width;\n      const HEIGHT = canvas.height;\n      analyser.fftSize = 2048;\n      const bufferLength = analyser.fftSize;\n      const dataArray = new Uint8Array(bufferLength);\n      canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);\n      const drawVisual = requestAnimationFrame(draw);\n      analyser.getByteTimeDomainData(dataArray);\n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = 'rgb(0, 255, 0)';\n      canvasCtx.beginPath();\n      const sliceWidth = WIDTH * 1.0 / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * HEIGHT / 2;\n        if (i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n        x += sliceWidth;\n      }\n      canvasCtx.lineTo(canvas.width, canvas.height / 2);\n      canvasCtx.stroke();\n    };\n    draw();\n  };\n  const stopAudio = () => {\n    if (sourceNodeRef.current) {\n      sourceNodeRef.current.stop();\n      setIsPlaying(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PlayButton, {\n      onClick: isPlaying ? stopAudio : playAudio,\n      children: isPlaying ? 'Stop' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      ref: canvasRef,\n      width: \"800\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"/4x+V1z9fk+5YuXzBy3A8VFFycQ=\", false, function () {\n  return [useAudio];\n});\n_c4 = AudioPlayer;\nexport default AudioPlayer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PlayerContainer\");\n$RefreshReg$(_c2, \"PlayButton\");\n$RefreshReg$(_c3, \"Canvas\");\n$RefreshReg$(_c4, \"AudioPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useAudio","styled","jsxDEV","_jsxDEV","PlayerContainer","div","_c","PlayButton","button","_c2","Canvas","canvas","_c3","AudioPlayer","_s","currentAudioUrl","audioContextRef","sourceNodeRef","canvasRef","isPlaying","setIsPlaying","current","window","AudioContext","webkitAudioContext","_audioContextRef$curr","close","playAudio","stop","response","fetch","arrayBuffer","audioBuffer","decodeAudioData","createBufferSource","buffer","connect","destination","analyser","createAnalyser","start","drawOscilloscope","canvasCtx","getContext","draw","WIDTH","width","HEIGHT","height","fftSize","bufferLength","dataArray","Uint8Array","clearRect","drawVisual","requestAnimationFrame","getByteTimeDomainData","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","stopAudio","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c4","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/AudioPlayer.tsx"],"sourcesContent":["// AudioPlayer.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useAudio } from './AudioContext';\nimport styled from 'styled-components';\n\nconst PlayerContainer = styled.div`\n  background-color: #2c3e50;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst PlayButton = styled.button`\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.5);\n  }\n`;\n\nconst Canvas = styled.canvas`\n  margin-top: 20px;\n  background-color: #34495e;\n  border-radius: 4px;\n`;\n\n\nconst AudioPlayer: React.FC = () => {\n  const { currentAudioUrl } = useAudio();\n  const audioContextRef = useRef<AudioContext | null>(null);\n  const sourceNodeRef = useRef<AudioBufferSourceNode | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)();\n    return () => {\n      audioContextRef.current?.close();\n    };\n  }, []);\n\n  const playAudio = async () => {\n    if (!audioContextRef.current) return;\n\n    if (sourceNodeRef.current) {\n      sourceNodeRef.current.stop();\n    }\n\n    const response = await fetch(currentAudioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContextRef.current.decodeAudioData(arrayBuffer);\n\n    sourceNodeRef.current = audioContextRef.current.createBufferSource();\n    sourceNodeRef.current.buffer = audioBuffer;\n    sourceNodeRef.current.connect(audioContextRef.current.destination);\n\n    const analyser = audioContextRef.current.createAnalyser();\n    sourceNodeRef.current.connect(analyser);\n\n    sourceNodeRef.current.start();\n    setIsPlaying(true);\n\n    drawOscilloscope(analyser);\n  };\n\n  const drawOscilloscope = (analyser: AnalyserNode) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const canvasCtx = canvas.getContext('2d');\n    if (!canvasCtx) return;\n\n    const draw = () => {\n      const WIDTH = canvas.width;\n      const HEIGHT = canvas.height;\n\n      analyser.fftSize = 2048;\n      const bufferLength = analyser.fftSize;\n      const dataArray = new Uint8Array(bufferLength);\n\n      canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);\n\n      const drawVisual = requestAnimationFrame(draw);\n\n      analyser.getByteTimeDomainData(dataArray);\n\n      canvasCtx.lineWidth = 2;\n\n      canvasCtx.strokeStyle = 'rgb(0, 255, 0)';\n      canvasCtx.beginPath();\n\n      const sliceWidth = WIDTH * 1.0 / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * HEIGHT / 2;\n\n        if (i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height / 2);\n      canvasCtx.stroke();\n    };\n\n    draw();\n  };\n\n  const stopAudio = () => {\n    if (sourceNodeRef.current) {\n      sourceNodeRef.current.stop();\n      setIsPlaying(false);\n    }\n  };\n\n  return (\n    <PlayerContainer>\n      <PlayButton onClick={isPlaying ? stopAudio : playAudio}>\n        {isPlaying ? 'Stop' : 'Play'}\n      </PlayButton>\n      <Canvas ref={canvasRef} width=\"800\" height=\"200\" />\n    </PlayerContainer>\n  );\n};\n\nexport default AudioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}