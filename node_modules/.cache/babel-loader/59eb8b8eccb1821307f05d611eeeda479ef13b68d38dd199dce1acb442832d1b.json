{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Begunok2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Begunok2 = ({\n  audioUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const waveformData = useRef([]);\n  const animationFrameRef = useRef(null);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current.duration);\n        generateWaveformData();\n      });\n\n      // audioRef.current.addEventListener('timeupdate', () => {\n      //   setCurrentTime(audioRef.current!.currentTime);\n      // });\n      audioRef.current.addEventListener('play', () => {\n        startAnimation();\n      });\n      audioRef.current.addEventListener('pause', () => {\n        stopAnimation();\n      });\n    }\n    return () => {\n      stopAnimation();\n    };\n  }, []);\n  const startAnimation = () => {\n    const update = () => {\n      if (audioRef.current) {\n        setCurrentTime(audioRef.current.currentTime);\n        drawWaveform();\n        animationFrameRef.current = requestAnimationFrame(update);\n      }\n    };\n    animationFrameRef.current = requestAnimationFrame(update);\n  };\n  const stopAnimation = () => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  };\n  useEffect(() => {\n    drawWaveform();\n  }, [isExpanded, currentTime, zoomLevel]);\n  const togglePlay = () => {\n    var _audioRef$current;\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      audioRef.current.play();\n    } else {\n      var _audioRef$current2;\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoomLevel(1); // Reset zoom level when collapsing\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 1500;\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n    drawWaveform();\n  };\n  const drawWaveform = () => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 5;\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = width / waveformData.current.length * zoomLevel;\n    const visibleBars = Math.floor(width / barWidth);\n    const startIndex = Math.floor(currentTime / duration * (waveformData.current.length - visibleBars));\n    ctx.fillStyle = '#b7e1dd';\n    ctx.strokeStyle = '#b7e1dd';\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n\n    // Draw progress\n    const progressWidth = currentTime / duration * width;\n    ctx.fillStyle = '#357F78';\n    ctx.strokeStyle = '#357F78';\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n    ctx.restore();\n\n    // Draw playhead (vertical line)\n    ctx.beginPath();\n    ctx.strokeStyle = '#357F78';\n    ctx.lineWidth = 1;\n    ctx.moveTo(progressWidth, 0);\n    ctx.lineTo(progressWidth, height);\n    ctx.stroke();\n  };\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = x / rect.width;\n\n    // audioRef.current.currentTime = clickProgress * duration;\n    // setCurrentTime(clickProgress * duration);\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n    drawWaveform();\n  };\n  const zoomIn = () => {\n    setZoomLevel(prevZoom => Math.min(prevZoom * 2, 64));\n  };\n  const zoomOut = () => {\n    setZoomLevel(prevZoom => Math.max(prevZoom / 2, 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpand,\n      children: isExpanded ? 'Collapse' : 'Expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '98%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onClick: handleCanvasClick,\n        style: {\n          width: '100%',\n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Zoom: \", zoomLevel, \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Begunok2, \"z9yCq4Rjh06DBJ5cFibSmWuOhfM=\");\n_c = Begunok2;\nexport default Begunok2;\nvar _c;\n$RefreshReg$(_c, \"Begunok2\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Begunok2","audioUrl","_s","isPlaying","setIsPlaying","isExpanded","setIsExpanded","currentTime","setCurrentTime","duration","setDuration","zoomLevel","setZoomLevel","audioRef","canvasRef","waveformData","animationFrameRef","current","addEventListener","generateWaveformData","startAnimation","stopAnimation","update","drawWaveform","requestAnimationFrame","cancelAnimationFrame","togglePlay","_audioRef$current","paused","play","_audioRef$current2","pause","toggleExpand","formatTime","time","minutes","Math","floor","seconds","toString","padStart","audioContext","window","AudioContext","webkitAudioContext","response","fetch","arrayBuffer","audioBuffer","decodeAudioData","rawData","getChannelData","samples","blockSize","length","filteredData","i","blockStart","sum","j","abs","push","multiplier","pow","max","map","n","canvas","ctx","getContext","dpr","devicePixelRatio","padding","width","offsetWidth","height","scale","clearRect","barWidth","visibleBars","startIndex","fillStyle","strokeStyle","dataIndex","x","barHeight","beginPath","lineTo","stroke","progressWidth","save","rect","clip","restore","lineWidth","moveTo","handleCanvasClick","e","getBoundingClientRect","clientX","left","clickProgress","zoomIn","prevZoom","min","zoomOut","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","ref","src","cursor","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Begunok2.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst Begunok2: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const waveformData = useRef<number[]>([]);\n\n  const animationFrameRef = useRef<number | null>(null);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current!.duration);\n        generateWaveformData();\n      });\n\n      // audioRef.current.addEventListener('timeupdate', () => {\n      //   setCurrentTime(audioRef.current!.currentTime);\n      // });\n      audioRef.current.addEventListener('play', () => {\n        startAnimation();\n      });\n\n      audioRef.current.addEventListener('pause', () => {\n        stopAnimation();\n      });\n    }\n    return () => {\n      stopAnimation();\n    };\n  }, []);\n\n  const startAnimation = () => {\n    const update = () => {\n      if (audioRef.current) {\n        setCurrentTime(audioRef.current.currentTime);\n        drawWaveform();\n        animationFrameRef.current = requestAnimationFrame(update);\n      }\n    };\n    animationFrameRef.current = requestAnimationFrame(update);\n  };\n\n  const stopAnimation = () => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    drawWaveform();\n  }, [isExpanded, currentTime, zoomLevel]);\n\n\n\n  const togglePlay = () => {\n    if (audioRef.current?.paused) {\n      audioRef.current.play();\n    } else {\n      audioRef.current?.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoomLevel(1); // Reset zoom level when collapsing\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const generateWaveformData = async () => {\n    if (!audioRef.current) return;\n\n    const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n    const response = await fetch(audioUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n\n    const rawData = audioBuffer.getChannelData(0);\n    const samples = 1500;\n    const blockSize = Math.floor(rawData.length / samples);\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i;\n      let sum = 0;\n      for (let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]);\n      }\n      filteredData.push(sum / blockSize);\n    }\n\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    waveformData.current = filteredData.map(n => n * multiplier);\n\n    drawWaveform();\n  };\n\n  const drawWaveform = () => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n  \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d')!;\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 5;\n  \n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n  \n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  \n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = (width / waveformData.current.length) * zoomLevel;\n    const visibleBars = Math.floor(width / barWidth);\n    const startIndex = Math.floor((currentTime / duration) * (waveformData.current.length - visibleBars));\n    \n    ctx.fillStyle = '#b7e1dd';\n    ctx.strokeStyle = '#b7e1dd';\n  \n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n  \n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n  \n      ctx.beginPath();\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n  \n    // Draw progress\n    const progressWidth = (currentTime / duration) * width;\n    ctx.fillStyle = '#357F78';\n    ctx.strokeStyle = '#357F78';\n  \n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n  \n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n  \n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n  \n      ctx.beginPath();\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n  \n    ctx.restore();\n  \n    // Draw playhead (vertical line)\n    ctx.beginPath();\n    ctx.strokeStyle = '#357F78';\n    ctx.lineWidth = 1;\n    ctx.moveTo(progressWidth, 0);\n    ctx.lineTo(progressWidth, height);\n    ctx.stroke();\n  };\n\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = x / rect.width;\n\n    // audioRef.current.currentTime = clickProgress * duration;\n    // setCurrentTime(clickProgress * duration);\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n    drawWaveform();\n  };\n\n  const zoomIn = () => {\n    setZoomLevel(prevZoom => Math.min(prevZoom * 2, 64));\n  };\n\n  const zoomOut = () => {\n    setZoomLevel(prevZoom => Math.max(prevZoom / 2, 1));\n  };\n\n  return (\n    <div className=\"audio-player\">\n      <button onClick={togglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n      <button onClick={toggleExpand}>\n        {isExpanded ? 'Collapse' : 'Expand'}\n      </button>\n      <div style={{display: 'flex', justifyContent: 'center', width: '98%'}}>\n       <audio ref={audioRef} src={audioUrl} />\n       <canvas \n        ref={canvasRef} \n        onClick={handleCanvasClick}\n        style={{ \n          width: '100%', \n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }} \n      /> \n      </div>\n      \n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n      {isExpanded && (\n        <div>\n          <button onClick={zoomIn}>Zoom In</button>\n          <button onClick={zoomOut}>Zoom Out</button>\n          <span>Zoom: {zoomLevel}x</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Begunok2;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM3D,MAAMC,QAAoC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMkB,QAAQ,GAAGjB,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMkB,SAAS,GAAGlB,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAMmB,YAAY,GAAGnB,MAAM,CAAW,EAAE,CAAC;EAEzC,MAAMoB,iBAAiB,GAAGpB,MAAM,CAAgB,IAAI,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,IAAIgB,QAAQ,CAACI,OAAO,EAAE;MACpBJ,QAAQ,CAACI,OAAO,CAACC,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;QACxDR,WAAW,CAACG,QAAQ,CAACI,OAAO,CAAER,QAAQ,CAAC;QACvCU,oBAAoB,CAAC,CAAC;MACxB,CAAC,CAAC;;MAEF;MACA;MACA;MACAN,QAAQ,CAACI,OAAO,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;QAC9CE,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC;MAEFP,QAAQ,CAACI,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;QAC/CG,aAAa,CAAC,CAAC;MACjB,CAAC,CAAC;IACJ;IACA,OAAO,MAAM;MACXA,aAAa,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAME,MAAM,GAAGA,CAAA,KAAM;MACnB,IAAIT,QAAQ,CAACI,OAAO,EAAE;QACpBT,cAAc,CAACK,QAAQ,CAACI,OAAO,CAACV,WAAW,CAAC;QAC5CgB,YAAY,CAAC,CAAC;QACdP,iBAAiB,CAACC,OAAO,GAAGO,qBAAqB,CAACF,MAAM,CAAC;MAC3D;IACF,CAAC;IACDN,iBAAiB,CAACC,OAAO,GAAGO,qBAAqB,CAACF,MAAM,CAAC;EAC3D,CAAC;EAED,MAAMD,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIL,iBAAiB,CAACC,OAAO,EAAE;MAC7BQ,oBAAoB,CAACT,iBAAiB,CAACC,OAAO,CAAC;MAC/CD,iBAAiB,CAACC,OAAO,GAAG,IAAI;IAClC;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd0B,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAAClB,UAAU,EAAEE,WAAW,EAAEI,SAAS,CAAC,CAAC;EAIxC,MAAMe,UAAU,GAAGA,CAAA,KAAM;IAAA,IAAAC,iBAAA;IACvB,KAAAA,iBAAA,GAAId,QAAQ,CAACI,OAAO,cAAAU,iBAAA,eAAhBA,iBAAA,CAAkBC,MAAM,EAAE;MAC5Bf,QAAQ,CAACI,OAAO,CAACY,IAAI,CAAC,CAAC;IACzB,CAAC,MAAM;MAAA,IAAAC,kBAAA;MACL,CAAAA,kBAAA,GAAAjB,QAAQ,CAACI,OAAO,cAAAa,kBAAA,uBAAhBA,kBAAA,CAAkBC,KAAK,CAAC,CAAC;IAC3B;IACA3B,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAM6B,YAAY,GAAGA,CAAA,KAAM;IACzB1B,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BO,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMqB,UAAU,GAAIC,IAAY,IAAK;IACnC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC;IACrC,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC;IACrC,OAAQ,GAAEC,OAAQ,IAAGG,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EAC5D,CAAC;EAED,MAAMrB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAACN,QAAQ,CAACI,OAAO,EAAE;IAEvB,MAAMwB,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAKD,MAAM,CAASE,kBAAkB,EAAE,CAAC;IACtF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC7C,QAAQ,CAAC;IACtC,MAAM8C,WAAW,GAAG,MAAMF,QAAQ,CAACE,WAAW,CAAC,CAAC;IAChD,MAAMC,WAAW,GAAG,MAAMP,YAAY,CAACQ,eAAe,CAACF,WAAW,CAAC;IAEnE,MAAMG,OAAO,GAAGF,WAAW,CAACG,cAAc,CAAC,CAAC,CAAC;IAC7C,MAAMC,OAAO,GAAG,IAAI;IACpB,MAAMC,SAAS,GAAGjB,IAAI,CAACC,KAAK,CAACa,OAAO,CAACI,MAAM,GAAGF,OAAO,CAAC;IACtD,MAAMG,YAAY,GAAG,EAAE;IACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,EAAEI,CAAC,EAAE,EAAE;MAChC,IAAIC,UAAU,GAAGJ,SAAS,GAAGG,CAAC;MAC9B,IAAIE,GAAG,GAAG,CAAC;MACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,SAAS,EAAEM,CAAC,EAAE,EAAE;QAClCD,GAAG,GAAGA,GAAG,GAAGtB,IAAI,CAACwB,GAAG,CAACV,OAAO,CAACO,UAAU,GAAGE,CAAC,CAAC,CAAC;MAC/C;MACAJ,YAAY,CAACM,IAAI,CAACH,GAAG,GAAGL,SAAS,CAAC;IACpC;IAEA,MAAMS,UAAU,GAAG1B,IAAI,CAAC2B,GAAG,CAAC3B,IAAI,CAAC4B,GAAG,CAAC,GAAGT,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1DxC,YAAY,CAACE,OAAO,GAAGsC,YAAY,CAACU,GAAG,CAACC,CAAC,IAAIA,CAAC,GAAGJ,UAAU,CAAC;IAE5DvC,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMA,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACT,SAAS,CAACG,OAAO,IAAIF,YAAY,CAACE,OAAO,CAACqC,MAAM,KAAK,CAAC,EAAE;IAE7D,MAAMa,MAAM,GAAGrD,SAAS,CAACG,OAAO;IAChC,MAAMmD,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAE;IACpC,MAAMC,GAAG,GAAG5B,MAAM,CAAC6B,gBAAgB,IAAI,CAAC;IACxC,MAAMC,OAAO,GAAG,CAAC;IAEjBL,MAAM,CAACM,KAAK,GAAGN,MAAM,CAACO,WAAW,GAAGJ,GAAG;IACvCH,MAAM,CAACQ,MAAM,GAAG,CAACtE,UAAU,GAAG,GAAG,GAAG,EAAE,IAAIiE,GAAG;IAE7CF,GAAG,CAACQ,KAAK,CAACN,GAAG,EAAEA,GAAG,CAAC;IACnBF,GAAG,CAACS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEV,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACQ,MAAM,CAAC;IAEhD,MAAMF,KAAK,GAAGN,MAAM,CAACM,KAAK,GAAGH,GAAG;IAChC,MAAMK,MAAM,GAAGR,MAAM,CAACQ,MAAM,GAAGL,GAAG;IAClC,MAAMQ,QAAQ,GAAIL,KAAK,GAAG1D,YAAY,CAACE,OAAO,CAACqC,MAAM,GAAI3C,SAAS;IAClE,MAAMoE,WAAW,GAAG3C,IAAI,CAACC,KAAK,CAACoC,KAAK,GAAGK,QAAQ,CAAC;IAChD,MAAME,UAAU,GAAG5C,IAAI,CAACC,KAAK,CAAE9B,WAAW,GAAGE,QAAQ,IAAKM,YAAY,CAACE,OAAO,CAACqC,MAAM,GAAGyB,WAAW,CAAC,CAAC;IAErGX,GAAG,CAACa,SAAS,GAAG,SAAS;IACzBb,GAAG,CAACc,WAAW,GAAG,SAAS;IAE3B,KAAK,IAAI1B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,WAAW,EAAEvB,CAAC,EAAE,EAAE;MACpC,MAAM2B,SAAS,GAAGH,UAAU,GAAGxB,CAAC;MAChC,IAAI2B,SAAS,IAAIpE,YAAY,CAACE,OAAO,CAACqC,MAAM,EAAE;MAE9C,MAAM8B,CAAC,GAAG5B,CAAC,GAAGsB,QAAQ;MACtB,MAAMO,SAAS,GAAGtE,YAAY,CAACE,OAAO,CAACkE,SAAS,CAAC,IAAIR,MAAM,GAAGH,OAAO,GAAG,CAAC,CAAC;MAE1EJ,GAAG,CAACkB,SAAS,CAAC,CAAC;MACflB,GAAG,CAACmB,MAAM,CAACH,CAAC,GAAGN,QAAQ,GAAG,CAAC,EAAEH,MAAM,GAAG,CAAC,GAAGH,OAAO,GAAGa,SAAS,GAAG,CAAC,CAAC;MAClEjB,GAAG,CAACmB,MAAM,CAACH,CAAC,GAAGN,QAAQ,GAAG,CAAC,EAAEH,MAAM,GAAG,CAAC,GAAGH,OAAO,GAAGa,SAAS,GAAG,CAAC,CAAC;MAClEjB,GAAG,CAACoB,MAAM,CAAC,CAAC;IACd;;IAEA;IACA,MAAMC,aAAa,GAAIlF,WAAW,GAAGE,QAAQ,GAAIgE,KAAK;IACtDL,GAAG,CAACa,SAAS,GAAG,SAAS;IACzBb,GAAG,CAACc,WAAW,GAAG,SAAS;IAE3Bd,GAAG,CAACsB,IAAI,CAAC,CAAC;IACVtB,GAAG,CAACkB,SAAS,CAAC,CAAC;IACflB,GAAG,CAACuB,IAAI,CAAC,CAAC,EAAE,CAAC,EAAEF,aAAa,EAAEd,MAAM,CAAC;IACrCP,GAAG,CAACwB,IAAI,CAAC,CAAC;IAEV,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,WAAW,EAAEvB,CAAC,EAAE,EAAE;MACpC,MAAM2B,SAAS,GAAGH,UAAU,GAAGxB,CAAC;MAChC,IAAI2B,SAAS,IAAIpE,YAAY,CAACE,OAAO,CAACqC,MAAM,EAAE;MAE9C,MAAM8B,CAAC,GAAG5B,CAAC,GAAGsB,QAAQ;MACtB,MAAMO,SAAS,GAAGtE,YAAY,CAACE,OAAO,CAACkE,SAAS,CAAC,IAAIR,MAAM,GAAGH,OAAO,GAAG,CAAC,CAAC;MAE1EJ,GAAG,CAACkB,SAAS,CAAC,CAAC;MACflB,GAAG,CAACmB,MAAM,CAACH,CAAC,GAAGN,QAAQ,GAAG,CAAC,EAAEH,MAAM,GAAG,CAAC,GAAGH,OAAO,GAAGa,SAAS,GAAG,CAAC,CAAC;MAClEjB,GAAG,CAACmB,MAAM,CAACH,CAAC,GAAGN,QAAQ,GAAG,CAAC,EAAEH,MAAM,GAAG,CAAC,GAAGH,OAAO,GAAGa,SAAS,GAAG,CAAC,CAAC;MAClEjB,GAAG,CAACoB,MAAM,CAAC,CAAC;IACd;IAEApB,GAAG,CAACyB,OAAO,CAAC,CAAC;;IAEb;IACAzB,GAAG,CAACkB,SAAS,CAAC,CAAC;IACflB,GAAG,CAACc,WAAW,GAAG,SAAS;IAC3Bd,GAAG,CAAC0B,SAAS,GAAG,CAAC;IACjB1B,GAAG,CAAC2B,MAAM,CAACN,aAAa,EAAE,CAAC,CAAC;IAC5BrB,GAAG,CAACmB,MAAM,CAACE,aAAa,EAAEd,MAAM,CAAC;IACjCP,GAAG,CAACoB,MAAM,CAAC,CAAC;EACd,CAAC;EAED,MAAMQ,iBAAiB,GAAIC,CAAsC,IAAK;IACpE,MAAM9B,MAAM,GAAGrD,SAAS,CAACG,OAAO;IAChC,IAAI,CAACkD,MAAM,IAAI,CAACtD,QAAQ,CAACI,OAAO,EAAE;IAElC,MAAM0E,IAAI,GAAGxB,MAAM,CAAC+B,qBAAqB,CAAC,CAAC;IAC3C,MAAMd,CAAC,GAAGa,CAAC,CAACE,OAAO,GAAGR,IAAI,CAACS,IAAI;IAC/B,MAAMC,aAAa,GAAGjB,CAAC,GAAGO,IAAI,CAAClB,KAAK;;IAEpC;IACA;IACA5D,QAAQ,CAACI,OAAO,CAACV,WAAW,GAAG8F,aAAa,GAAG5F,QAAQ;IACvDD,cAAc,CAAC6F,aAAa,GAAG5F,QAAQ,CAAC;IACxCc,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAM+E,MAAM,GAAGA,CAAA,KAAM;IACnB1F,YAAY,CAAC2F,QAAQ,IAAInE,IAAI,CAACoE,GAAG,CAACD,QAAQ,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,MAAME,OAAO,GAAGA,CAAA,KAAM;IACpB7F,YAAY,CAAC2F,QAAQ,IAAInE,IAAI,CAAC4B,GAAG,CAACuC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,oBACExG,OAAA;IAAK2G,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B5G,OAAA;MAAQ6G,OAAO,EAAElF,UAAW;MAAAiF,QAAA,EAAExG,SAAS,GAAG,OAAO,GAAG;IAAM;MAAA0G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACpEjH,OAAA;MAAQ6G,OAAO,EAAE5E,YAAa;MAAA2E,QAAA,EAC3BtG,UAAU,GAAG,UAAU,GAAG;IAAQ;MAAAwG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACTjH,OAAA;MAAKkH,KAAK,EAAE;QAACC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAE1C,KAAK,EAAE;MAAK,CAAE;MAAAkC,QAAA,gBACrE5G,OAAA;QAAOqH,GAAG,EAAEvG,QAAS;QAACwG,GAAG,EAAEpH;MAAS;QAAA4G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCjH,OAAA;QACCqH,GAAG,EAAEtG,SAAU;QACf8F,OAAO,EAAEZ,iBAAkB;QAC3BiB,KAAK,EAAE;UACLxC,KAAK,EAAE,MAAM;UACbE,MAAM,EAAEtE,UAAU,GAAG,OAAO,GAAG,MAAM;UACrCiH,MAAM,EAAE;QACV;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAENjH,OAAA;MAAA4G,QAAA,GACG1E,UAAU,CAAC1B,WAAW,CAAC,EAAC,KAAG,EAAC0B,UAAU,CAACxB,QAAQ,CAAC;IAAA;MAAAoG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EACL3G,UAAU,iBACTN,OAAA;MAAA4G,QAAA,gBACE5G,OAAA;QAAQ6G,OAAO,EAAEN,MAAO;QAAAK,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCjH,OAAA;QAAQ6G,OAAO,EAAEH,OAAQ;QAAAE,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3CjH,OAAA;QAAA4G,QAAA,GAAM,QAAM,EAAChG,SAAS,EAAC,GAAC;MAAA;QAAAkG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9G,EAAA,CAvOIF,QAAoC;AAAAuH,EAAA,GAApCvH,QAAoC;AAyO1C,eAAeA,QAAQ;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}