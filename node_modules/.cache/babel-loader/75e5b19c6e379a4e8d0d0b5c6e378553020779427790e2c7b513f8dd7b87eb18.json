{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = time => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\nconst ZoomTest4 = ({\n  audioUrl,\n  words,\n  onWordClick\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const [hoveredWord, setHoveredWord] = useState(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const audioRef = useRef(new Audio(audioUrl));\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      scaledStart: word.start / audioDuration * audioData.length\n    }));\n  }, [words, audioData, audioDuration]);\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    const samplesPerPixel = audioData.length / zoom / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const x = (word.scaledStart - startSample) / samplesPerPixel;\n      if (x >= 0 && x <= width) {\n        // Draw vertical line\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.strokeStyle = word.color;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n\n        // Draw word label\n        ctx.fillStyle = word === hoveredWord ? 'black' : word.color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word.word, x, 15);\n      }\n    });\n\n    // Draw time labels\n    ctx.fillStyle = '#000000';\n    ctx.font = '10px Arial';\n    const timeStep = 5; // шаг в секундах\n    for (let i = 0; i < audioDuration; i += timeStep) {\n      const x = i / audioDuration * width;\n      if (x >= 0 && x <= width) {\n        ctx.fillText(formatTime(i), x, height - 15);\n      }\n    }\n\n    // Draw playhead\n    const playheadX = currentTime / audioDuration * width;\n    ctx.beginPath();\n    ctx.moveTo(playheadX, 0);\n    ctx.lineTo(playheadX, height);\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  }, [audioData, zoom, scrollPosition, scaledWords, hoveredWord, currentTime]);\n\n  // Play/pause functionality\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  useEffect(() => {\n    const handleTimeUpdate = () => {\n      setCurrentTime(audioRef.current.currentTime);\n    };\n    const audioElement = audioRef.current;\n    audioElement.addEventListener('timeupdate', handleTimeUpdate);\n    return () => {\n      audioElement.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, []);\n  useEffect(() => {\n    if (isPlaying) {\n      const update = () => {\n        setCurrentTime(audioRef.current.currentTime);\n        drawWaveform();\n        requestAnimationFrame(update);\n      };\n      requestAnimationFrame(update);\n    }\n  }, [isPlaying, drawWaveform]);\n  const handleZoom = direction => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + width * (audioData.length / zoom) / width / 2;\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - width * (audioData.length / newZoom) / width / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n  const handleScroll = e => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '2000px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('out'),\n        disabled: zoom === 1,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('in'),\n        disabled: zoom === 64,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), zoom > 1 && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: canvasRef.current ? canvasRef.current.width / window.devicePixelRatio * (zoom - 1) : 0,\n      value: scrollPosition,\n      onChange: handleScroll,\n      style: {\n        width: '2000px',\n        margin: '10px auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(ZoomTest4, \"mK19Jm+CG5vY3jX6kO0cpJsNXPo=\");\n_c = ZoomTest4;\nexport default ZoomTest4;\nvar _c;\n$RefreshReg$(_c, \"ZoomTest4\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useMemo","jsxDEV","_jsxDEV","formatTime","time","minutes","Math","floor","seconds","toString","padStart","ZoomTest4","audioUrl","words","onWordClick","_s","canvasRef","zoom","setZoom","scrollPosition","setScrollPosition","audioData","setAudioData","hoveredWord","setHoveredWord","audioDuration","setAudioDuration","isPlaying","setIsPlaying","currentTime","setCurrentTime","audioRef","Audio","scaledWords","map","word","scaledStart","start","length","drawWaveform","canvas","current","ctx","getContext","dpr","window","devicePixelRatio","width","height","clearRect","beginPath","samplesPerPixel","startSample","endSample","min","ceil","i","x","y","moveTo","lineTo","strokeStyle","stroke","forEach","color","lineWidth","fillStyle","font","textAlign","fillText","timeStep","playheadX","togglePlayPause","pause","play","handleTimeUpdate","audioElement","addEventListener","removeEventListener","update","requestAnimationFrame","handleZoom","direction","centerSample","prevZoom","newZoom","max","newScrollPosition","handleScroll","e","parseFloat","target","value","style","children","margin","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","onChange","display","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest4.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\n\ninterface Word {\n  word: string;\n  color: string;\n  start: number;\n}\n\ninterface WaveformProps {\n  audioUrl: string;\n  words: Word[];\n  onWordClick?: (word: Word) => void;\n}\n\nconst formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\nconst ZoomTest4: React.FC<WaveformProps> = ({ audioUrl, words, onWordClick }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState<number[]>([]);\n  const [hoveredWord, setHoveredWord] = useState<Word | null>(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const audioRef = useRef<HTMLAudioElement>(new Audio(audioUrl));\n\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      scaledStart: (word.start / audioDuration) * audioData.length,\n    }));\n  }, [words, audioData, audioDuration]);\n\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    const samplesPerPixel = (audioData.length / zoom) / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n      const y = (1 - audioData[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n\n    ctx.strokeStyle = 'blue';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const x = (word.scaledStart - startSample) / samplesPerPixel;\n      if (x >= 0 && x <= width) {\n        // Draw vertical line\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.strokeStyle = word.color;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n\n        // Draw word label\n        ctx.fillStyle = word === hoveredWord ? 'black' : word.color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word.word, x, 15);\n      }\n    });\n\n    // Draw time labels\n    ctx.fillStyle = '#000000';\n    ctx.font = '10px Arial';\n    const timeStep = 5; // шаг в секундах\n    for (let i = 0; i < audioDuration; i += timeStep) {\n      const x = (i / audioDuration) * width;\n      if (x >= 0 && x <= width) {\n        ctx.fillText(formatTime(i), x, height - 15);\n      }\n    }\n\n    // Draw playhead\n    const playheadX = (currentTime / audioDuration) * width;\n    ctx.beginPath();\n    ctx.moveTo(playheadX, 0);\n    ctx.lineTo(playheadX, height);\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n\n  }, [audioData, zoom, scrollPosition, scaledWords, hoveredWord, currentTime]);\n\n  // Play/pause functionality\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  useEffect(() => {\n    const handleTimeUpdate = () => {\n      setCurrentTime(audioRef.current.currentTime);\n    };\n\n    const audioElement = audioRef.current;\n    audioElement.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      audioElement.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isPlaying) {\n      const update = () => {\n        setCurrentTime(audioRef.current.currentTime);\n        drawWaveform();\n        requestAnimationFrame(update);\n      };\n      requestAnimationFrame(update);\n    }\n  }, [isPlaying, drawWaveform]);\n\n  const handleZoom = (direction: 'in' | 'out') => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + (width * (audioData.length / zoom) / width) / 2;\n\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - (width * (audioData.length / newZoom) / width) / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ width: '2000px', margin: '0 auto' }}>\n        <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n      </div>\n      <div>\n        <button onClick={() => handleZoom('out')} disabled={zoom === 1}>Zoom Out</button>\n        <button onClick={() => handleZoom('in')} disabled={zoom === 64}>Zoom In</button>\n        <button onClick={togglePlayPause}>{isPlaying ? 'Pause' : 'Play'}</button> {/* New Play/Pause Button */}\n      </div>\n      {zoom > 1 && (\n        <input\n          type=\"range\"\n          min={0}\n          max={canvasRef.current ? (canvasRef.current.width / window.devicePixelRatio) * (zoom - 1) : 0}\n          value={scrollPosition}\n          onChange={handleScroll}\n          style={{ width: '2000px', margin: '10px auto', display: 'block' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ZoomTest4;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}