{"ast":null,"code":"import { BehaviorSubject, Subject } from \"rxjs\";\n\n// const subscriber = new BehaviorSubject(-1);\n\n// const TimeLineService = {\n//   send: (curr: number) => subscriber.next(curr),\n// };\n\nconst currTimeSubscriber = new BehaviorSubject(0);\nconst changeSegmentPositionSubscriber = new BehaviorSubject(null);\nconst changeSegmentTextSubscriber = new Subject();\nconst changeSpeakerSubscriber = new Subject();\n\n// const CurrTimeService = {\n//   send: (curr: number) => currTimeSubscriber.next(curr),\n// };\n\nexport { currTimeSubscriber, changeSegmentPositionSubscriber, changeSegmentTextSubscriber, changeSpeakerSubscriber };","map":{"version":3,"names":["BehaviorSubject","Subject","currTimeSubscriber","changeSegmentPositionSubscriber","changeSegmentTextSubscriber","changeSpeakerSubscriber"],"sources":["/home/gleb/my_app_test/src/subscribers/PlayerSubscriber.tsx"],"sourcesContent":["import { BehaviorSubject, Subject } from \"rxjs\";\n\n// const subscriber = new BehaviorSubject(-1);\n\n// const TimeLineService = {\n//   send: (curr: number) => subscriber.next(curr),\n// };\n\nconst currTimeSubscriber = new BehaviorSubject(0);\nconst changeSegmentPositionSubscriber = new BehaviorSubject<any>(null);\nconst changeSegmentTextSubscriber = new Subject<any>();\nconst changeSpeakerSubscriber = new Subject<any>();\n\n// const CurrTimeService = {\n//   send: (curr: number) => currTimeSubscriber.next(curr),\n// };\n\nexport { currTimeSubscriber, changeSegmentPositionSubscriber, changeSegmentTextSubscriber, changeSpeakerSubscriber };\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,OAAO,QAAQ,MAAM;;AAE/C;;AAEA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAG,IAAIF,eAAe,CAAC,CAAC,CAAC;AACjD,MAAMG,+BAA+B,GAAG,IAAIH,eAAe,CAAM,IAAI,CAAC;AACtE,MAAMI,2BAA2B,GAAG,IAAIH,OAAO,CAAM,CAAC;AACtD,MAAMI,uBAAuB,GAAG,IAAIJ,OAAO,CAAM,CAAC;;AAElD;AACA;AACA;;AAEA,SAASC,kBAAkB,EAAEC,+BAA+B,EAAEC,2BAA2B,EAAEC,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}