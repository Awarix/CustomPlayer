{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/components/Timestamps.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Slider, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timestamps = () => {\n  _s();\n  const [value, setValue] = useState(0);\n  const stepOptions = [10, 30, 60]; // Опции для выбора шага\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      setValue(newValue);\n    }\n  };\n  const handleSliderChange = newValue => {\n    setValue(newValue);\n    alert(`Начало отрезка: ${formatTime(newValue)}`); // Вывод алерта с началом отрезка\n  };\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainSeconds = seconds % 60;\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(remainSeconds).padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 200,\n    border: 1,\n    p: 1,\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      min: 0,\n      max: 60 // Общая продолжительность времени в секундах\n      ,\n      value: value,\n      step: 1,\n      onChange: handleChange,\n      onChangeCommitted: (event, newValue) => handleSliderChange(newValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), stepOptions.map(step => /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: formatTime(step)\n    }, step, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: formatTime(60)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Timestamps, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n_c = Timestamps;\nexport default Timestamps;\nvar _c;\n$RefreshReg$(_c, \"Timestamps\");","map":{"version":3,"names":["React","useState","Box","Slider","Typography","jsxDEV","_jsxDEV","Timestamps","_s","value","setValue","stepOptions","handleChange","event","newValue","handleSliderChange","alert","formatTime","seconds","hours","Math","floor","minutes","remainSeconds","String","padStart","width","border","p","children","min","max","step","onChange","onChangeCommitted","fileName","_jsxFileName","lineNumber","columnNumber","map","variant","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/components/Timestamps.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport { Box, Slider, Typography } from '@material-ui/core';\n\nconst Timestamps:FC = () => {\n  const [value, setValue] = useState<number>(0);\n  const stepOptions = [10, 30, 60]; // Опции для выбора шага\n\n  const handleChange = (event: any, newValue: number | number[]) => {\n    if (typeof newValue === 'number') {\n      setValue(newValue);\n    }\n  };\n\n  const handleSliderChange = (newValue: number) => {\n    setValue(newValue);\n    alert(`Начало отрезка: ${formatTime(newValue)}`); // Вывод алерта с началом отрезка\n  };\n\n  const formatTime = (seconds: number): string => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const remainSeconds = seconds % 60;\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(remainSeconds).padStart(2, '0')}`;\n  };\n\n  return (\n    <Box width={200} border={1} p={1}>\n      <Slider\n        min={0}\n        max={60} // Общая продолжительность времени в секундах\n        value={value}\n        step={1}\n        onChange={handleChange}\n        onChangeCommitted={(event, newValue) => handleSliderChange(newValue as number)}\n      />\n      {stepOptions.map((step) => (\n        <Typography key={step} variant=\"body2\">{formatTime(step)}</Typography>\n      ))}\n      <Typography variant=\"body2\">{formatTime(60)}</Typography>\n    </Box>\n  );\n}\n\nexport default Timestamps"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,UAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,CAAC,CAAC;EAC7C,MAAMU,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;EAElC,MAAMC,YAAY,GAAGA,CAACC,KAAU,EAAEC,QAA2B,KAAK;IAChE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAChCJ,QAAQ,CAACI,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAID,QAAgB,IAAK;IAC/CJ,QAAQ,CAACI,QAAQ,CAAC;IAClBE,KAAK,CAAE,mBAAkBC,UAAU,CAACH,QAAQ,CAAE,EAAC,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,MAAMG,UAAU,GAAIC,OAAe,IAAa;IAC9C,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,IAAI,CAAC;IACxC,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;IACjD,MAAMK,aAAa,GAAGL,OAAO,GAAG,EAAE;IAClC,OAAQ,GAAEM,MAAM,CAACL,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACD,aAAa,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;EAC1H,CAAC;EAED,oBACEnB,OAAA,CAACJ,GAAG;IAACwB,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,CAAE;IAACC,CAAC,EAAE,CAAE;IAAAC,QAAA,gBAC/BvB,OAAA,CAACH,MAAM;MACL2B,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE,EAAG,CAAC;MAAA;MACTtB,KAAK,EAAEA,KAAM;MACbuB,IAAI,EAAE,CAAE;MACRC,QAAQ,EAAErB,YAAa;MACvBsB,iBAAiB,EAAEA,CAACrB,KAAK,EAAEC,QAAQ,KAAKC,kBAAkB,CAACD,QAAkB;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,EACD3B,WAAW,CAAC4B,GAAG,CAAEP,IAAI,iBACpB1B,OAAA,CAACF,UAAU;MAAYoC,OAAO,EAAC,OAAO;MAAAX,QAAA,EAAEZ,UAAU,CAACe,IAAI;IAAC,GAAvCA,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgD,CACtE,CAAC,eACFhC,OAAA,CAACF,UAAU;MAACoC,OAAO,EAAC,OAAO;MAAAX,QAAA,EAAEZ,UAAU,CAAC,EAAE;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAAA9B,EAAA,CAtCKD,UAAa;AAAAkC,EAAA,GAAblC,UAAa;AAwCnB,eAAeA,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}