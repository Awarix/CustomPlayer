{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/audio/wavesurfer/WavePlayer.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport { WaveSurfer, WaveForm } from \"wavesurfer-react\";\nimport { currTimeSubscriber, changeSegmentPositionSubscriber } from \"../../subscribers/PlayerSubscriber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionsPlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.regions.min\");\nconst TimelinePlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\");\nconst WavePlayer = ({\n  file,\n  segments,\n  activeSegmentProp,\n  url\n}) => {\n  _s();\n  const [isPlay, setIsPlay] = useState(false);\n  const [autoCenter, setAutoCenter] = useState(true);\n  const [zoom, setZoom] = useState(10);\n  const [regions, setRegions] = useState([]);\n  const [activeSegment, setActiveSegment] = useState(activeSegmentProp);\n  const plugins = useMemo(() => [{\n    plugin: RegionsPlugin,\n    options: {\n      dragSelection: false,\n      showTooltip: false\n    }\n  }, {\n    plugin: TimelinePlugin,\n    options: {\n      container: \"#timeline\"\n    }\n  }], []);\n  const wavesurferRef = useRef(null);\n  const handleWSMount = useCallback(waveSurfer => {\n    wavesurferRef.current = waveSurfer;\n    wavesurferRef.current.load(url);\n    wavesurferRef.current.on(\"ready\", () => {\n      console.log(\"WaveSurfer is ready\");\n    });\n    wavesurferRef.current.on(\"region-update-end\", region => {\n      changeSegmentPositionSubscriber.next({\n        segment: region.data,\n        start: region.start,\n        end: region.end\n      });\n    });\n    let lastTime = 0;\n    wavesurferRef.current.on(\"audioprocess\", currentTime => {\n      const diff = Math.abs(currentTime - lastTime);\n      if (diff > 0.1) {\n        lastTime = currentTime;\n        currTimeSubscriber.next(currentTime);\n      }\n    });\n  }, [url]);\n  const setZoomClick = zoom => {\n    if (zoom < 5) zoom = 5;\n    if (zoom > 1000) zoom = 1000;\n    setZoom(zoom);\n  };\n  useEffect(() => {\n    const mappedRegions = segments.map(s => ({\n      id: s.id,\n      start: s.Start,\n      end: s.End,\n      color: \"rgba(212, 215, 247, 0.4)\",\n      drag: false,\n      resize: false,\n      channelIdx: s.ChannelNumber,\n      // Привязываем регион к соответствующему каналу\n      handleStyle: {\n        left: {\n          backgroundColor: \"transparent\",\n          width: \"5px\"\n        },\n        right: {\n          backgroundColor: \"transparent\",\n          width: \"5px\"\n        }\n      },\n      data: s\n    }));\n    setRegions(mappedRegions);\n  }, [segments]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    setZoom(10);\n    if (url === \"\") return;\n    wavesurferRef.current.load(url);\n  }, [file, url]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    if (wavesurferRef.current.params.minPxPerSec !== zoom) {\n      wavesurferRef.current.zoom(zoom);\n    }\n  }, [zoom]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    if (isPlay) {\n      wavesurferRef.current.play();\n    } else {\n      wavesurferRef.current.pause();\n    }\n  }, [isPlay]);\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n    setActiveSegment(activeSegmentProp);\n    if (activeSegmentProp) {\n      let zoomFactor = 500;\n      const width = wavesurferRef.current.drawer.wrapper.clientWidth;\n      const segmentDuration = activeSegmentProp.End - activeSegmentProp.Start;\n      for (let i = 0; i < 10; i++) {\n        if (segmentDuration * zoomFactor < width) break;\n        zoomFactor /= 2;\n      }\n      if (zoomFactor < 5) zoomFactor = 5;\n      setZoomClick(zoomFactor);\n      setAutoCenter(false);\n      setIsPlay(true);\n      const total = wavesurferRef.current.getDuration();\n      if (total > 0) {\n        const centerTime = activeSegmentProp.Start + segmentDuration / 2;\n        const t1 = centerTime / total;\n        wavesurferRef.current.zoom(zoomFactor);\n        wavesurferRef.current.seekAndCenter(t1);\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n        wavesurferRef.current.play();\n      }\n    }\n    regions.forEach(region => {\n      if (region.color !== \"rgba(212, 215, 247, 0.4)\") {\n        region.color = \"rgba(212, 215, 247, 0.4)\";\n      }\n      if ((activeSegmentProp === null || activeSegmentProp === void 0 ? void 0 : activeSegmentProp.id) === region.id) {\n        region.color = \"rgba(212, 215, 247, 0.4)\";\n      }\n    });\n    const subscription = currTimeSubscriber.subscribe(currentTime => {\n      if (wavesurferRef.current && activeSegmentProp && currentTime >= activeSegmentProp.End) {\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [activeSegmentProp, regions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(WaveSurfer, {\n      onMount: handleWSMount,\n      plugins: plugins,\n      children: [/*#__PURE__*/_jsxDEV(WaveForm, {\n        id: \"waveform\",\n        waveColor: \"#b7e1dd\",\n        progressColor: \"#4Db6AC\",\n        cursorColor: \"#357F78\",\n        autoCenter: autoCenter,\n        splitChannels: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"20px\"\n        },\n        id: \"timeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }, this), wavesurferRef.current && segments.map(segment => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: `${segment.ChannelNumber * 50}px`,\n        // Смещение по вертикали для отображения на нужном канале\n        left: `${segment.Start / wavesurferRef.current.getDuration() * 100}%`,\n        width: `${(segment.End - segment.Start) / wavesurferRef.current.getDuration() * 100}%`,\n        height: '50px',\n        // Высота региона, чтобы он перекрывал только один канал\n        backgroundColor: 'rgba(212, 215, 247, 0.4)'\n      }\n    }, segment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"40px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: e => {\n          document.activeElement.blur();\n          setIsPlay(prev => !prev);\n        },\n        children: isPlay ? /*#__PURE__*/_jsxDEV(PauseCircleFilledIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        title: \"\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0438\\u0442\\u044C \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\",\n        onClick: e => {\n          document.activeElement.blur();\n          setZoomClick(zoom * 2);\n        },\n        children: /*#__PURE__*/_jsxDEV(ZoomInIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        title: \"\\u0423\\u043C\\u0435\\u043D\\u044C\\u0448\\u0438\\u0442\\u044C \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\",\n        onClick: e => {\n          document.activeElement.blur();\n          setZoomClick(zoom / 2);\n        },\n        children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(WavePlayer, \"J2XZEJN7L7EoNuN7uDHytRY5Rtw=\");\n_c = WavePlayer;\nexport default WavePlayer;\nvar _c;\n$RefreshReg$(_c, \"WavePlayer\");","map":{"version":3,"names":["useMemo","useRef","useState","useEffect","useCallback","IconButton","PlayCircleFilledIcon","PauseCircleFilledIcon","ZoomInIcon","ZoomOutIcon","WaveSurfer","WaveForm","currTimeSubscriber","changeSegmentPositionSubscriber","jsxDEV","_jsxDEV","RegionsPlugin","require","TimelinePlugin","WavePlayer","file","segments","activeSegmentProp","url","_s","isPlay","setIsPlay","autoCenter","setAutoCenter","zoom","setZoom","regions","setRegions","activeSegment","setActiveSegment","plugins","plugin","options","dragSelection","showTooltip","container","wavesurferRef","handleWSMount","waveSurfer","current","load","on","console","log","region","next","segment","data","start","end","lastTime","currentTime","diff","Math","abs","setZoomClick","mappedRegions","map","s","id","Start","End","color","drag","resize","channelIdx","ChannelNumber","handleStyle","left","backgroundColor","width","right","params","minPxPerSec","play","pause","zoomFactor","drawer","wrapper","clientWidth","segmentDuration","i","total","getDuration","centerTime","t1","seekAndCenter","setCurrentTime","forEach","subscription","subscribe","unsubscribe","style","position","children","onMount","waveColor","progressColor","cursorColor","splitChannels","fileName","_jsxFileName","lineNumber","columnNumber","height","top","onClick","e","document","activeElement","blur","prev","fontSize","title","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/audio/wavesurfer/WavePlayer.tsx"],"sourcesContent":["import { FC, useMemo, useRef, useState, useEffect, useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport { WaveSurfer, WaveForm, Region } from \"wavesurfer-react\";\nimport { currTimeSubscriber, changeSegmentPositionSubscriber } from \"../../subscribers/PlayerSubscriber\";\nimport { SegmentModel as Segment } from \"../AudioContext\";\n\ninterface Props {\n  file: File | null;\n  segments: Segment[];\n  activeSegmentProp: Segment | null;\n  url: string;\n}\n\nconst RegionsPlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.regions.min\");\nconst TimelinePlugin = require(\"wavesurfer.js/dist/plugin/wavesurfer.timeline.min\");\n\nconst WavePlayer: FC<Props> = ({ file, segments, activeSegmentProp, url }) => {\n  const [isPlay, setIsPlay] = useState<boolean>(false);\n  const [autoCenter, setAutoCenter] = useState<boolean>(true);\n  const [zoom, setZoom] = useState<number>(10);\n  const [regions, setRegions] = useState<any[]>([]);\n  const [activeSegment, setActiveSegment] = useState<Segment | null>(activeSegmentProp);\n\n  const plugins = useMemo(() => [\n    {\n      plugin: RegionsPlugin,\n      options: { dragSelection: false, showTooltip: false },\n    },\n    {\n      plugin: TimelinePlugin,\n      options: { container: \"#timeline\" },\n    },\n  ], []);\n\n  const wavesurferRef = useRef<any>(null);\n\n  const handleWSMount = useCallback((waveSurfer) => {\n    wavesurferRef.current = waveSurfer;\n    wavesurferRef.current.load(url);\n\n    wavesurferRef.current.on(\"ready\", () => {\n      console.log(\"WaveSurfer is ready\");\n    });\n\n    wavesurferRef.current.on(\"region-update-end\", (region: any) => {\n      changeSegmentPositionSubscriber.next({\n        segment: region.data,\n        start: region.start,\n        end: region.end,\n      });\n    });\n\n    let lastTime = 0;\n    wavesurferRef.current.on(\"audioprocess\", (currentTime: number) => {\n      const diff = Math.abs(currentTime - lastTime);\n      if (diff > 0.1) {\n        lastTime = currentTime;\n        currTimeSubscriber.next(currentTime);\n      }\n    });\n  }, [url]);\n\n  const setZoomClick = (zoom: number) => {\n    if (zoom < 5) zoom = 5;\n    if (zoom > 1000) zoom = 1000;\n    setZoom(zoom);\n  };\n\n  useEffect(() => {\n    const mappedRegions = segments.map(s => ({\n      id: s.id,\n      start: s.Start,\n      end: s.End,\n      color: \"rgba(212, 215, 247, 0.4)\",\n      drag: false,\n      resize: false,\n      channelIdx: s.ChannelNumber, // Привязываем регион к соответствующему каналу\n      handleStyle: {\n        left: { backgroundColor: \"transparent\", width: \"5px\" },\n        right: { backgroundColor: \"transparent\", width: \"5px\" },\n      },\n      data: s,\n    }));\n    setRegions(mappedRegions);\n  }, [segments]);\n\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n\n    setZoom(10);\n\n    if (url === \"\") return;\n\n    wavesurferRef.current.load(url);\n  }, [file, url]);\n\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n\n    if (wavesurferRef.current.params.minPxPerSec !== zoom) {\n      wavesurferRef.current.zoom(zoom);\n    }\n  }, [zoom]);\n\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n\n    if (isPlay) {\n      wavesurferRef.current.play();\n    } else {\n      wavesurferRef.current.pause();\n    }\n  }, [isPlay]);\n\n  useEffect(() => {\n    if (!wavesurferRef.current) return;\n\n    setActiveSegment(activeSegmentProp);\n\n    if (activeSegmentProp) {\n      let zoomFactor = 500;\n      const width = wavesurferRef.current.drawer.wrapper.clientWidth;\n      const segmentDuration = activeSegmentProp.End - activeSegmentProp.Start;\n\n      for (let i = 0; i < 10; i++) {\n        if (segmentDuration * zoomFactor < width) break;\n        zoomFactor /= 2;\n      }\n      if (zoomFactor < 5) zoomFactor = 5;\n\n      setZoomClick(zoomFactor);\n      setAutoCenter(false);\n      setIsPlay(true);\n\n      const total = wavesurferRef.current.getDuration();\n      if (total > 0) {\n        const centerTime = activeSegmentProp.Start + (segmentDuration) / 2;\n        const t1 = centerTime / total;\n\n        wavesurferRef.current.zoom(zoomFactor);\n        wavesurferRef.current.seekAndCenter(t1);\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n        wavesurferRef.current.play();\n      }\n    }\n\n    regions.forEach(region => {\n      if (region.color !== \"rgba(212, 215, 247, 0.4)\") {\n        region.color = \"rgba(212, 215, 247, 0.4)\";\n      }\n\n      if (activeSegmentProp?.id === region.id) {\n        region.color = \"rgba(212, 215, 247, 0.4)\";\n      }\n    });\n\n    const subscription = currTimeSubscriber.subscribe(currentTime => {\n      if (wavesurferRef.current && activeSegmentProp && currentTime >= activeSegmentProp.End) {\n        wavesurferRef.current.setCurrentTime(activeSegmentProp.Start);\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [activeSegmentProp, regions]);\n\n  return (\n    <div style={{ position: 'relative', width: '100%' }}>\n    <WaveSurfer onMount={handleWSMount} plugins={plugins} >\n      <WaveForm id=\"waveform\" waveColor=\"#b7e1dd\" progressColor=\"#4Db6AC\" cursorColor=\"#357F78\" autoCenter={autoCenter} splitChannels={true} />\n      <div style={{ height: \"20px\" }} id=\"timeline\" />\n    </WaveSurfer>\n\n    {wavesurferRef.current && segments.map(segment => (\n      <div\n        key={segment.id}\n        style={{\n          position: 'absolute',\n          top: `${segment.ChannelNumber * 50}px`, // Смещение по вертикали для отображения на нужном канале\n          left: `${(segment.Start / wavesurferRef.current.getDuration()) * 100}%`,\n          width: `${((segment.End - segment.Start) / wavesurferRef.current.getDuration()) * 100}%`,\n          height: '50px', // Высота региона, чтобы он перекрывал только один канал\n          backgroundColor: 'rgba(212, 215, 247, 0.4)',\n        }}\n      />\n    ))}\n\n    <div style={{ height: \"40px\" }}>\n      <IconButton\n        color=\"primary\"\n        onClick={(e: any) => {\n          (document.activeElement as HTMLElement).blur();\n          setIsPlay((prev) => !prev);\n        }}\n      >\n        {isPlay ? <PauseCircleFilledIcon fontSize=\"medium\" /> : <PlayCircleFilledIcon fontSize=\"medium\" />}\n      </IconButton>\n      <IconButton\n        color=\"primary\"\n        title=\"Увеличить масштаб\"\n        onClick={(e: any) => {\n          (document.activeElement as HTMLElement).blur();\n          setZoomClick(zoom * 2);\n        }}\n      >\n        <ZoomInIcon fontSize=\"medium\" />\n      </IconButton>\n      <IconButton\n        color=\"primary\"\n        title=\"Уменьшить масштаб\"\n        onClick={(e: any) => {\n          (document.activeElement as HTMLElement).blur();\n          setZoomClick(zoom / 2);\n        }}\n      >\n        <ZoomOutIcon fontSize=\"medium\" />\n      </IconButton>\n    </div>\n  </div>\n);\n};\n\nexport default WavePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}