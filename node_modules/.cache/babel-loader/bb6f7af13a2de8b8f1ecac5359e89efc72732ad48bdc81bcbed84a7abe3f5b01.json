{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Friday/CustomAudioZoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomAudioZoom = ({\n  audioUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const waveformData = useRef([]);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current.duration);\n        generateWaveformData();\n      });\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current.currentTime);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    drawWaveform();\n  }, [isExpanded, currentTime, zoomLevel]);\n  const togglePlay = () => {\n    var _audioRef$current;\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused) {\n      audioRef.current.play();\n    } else {\n      var _audioRef$current2;\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoomLevel(1); // Reset zoom level when collapsing\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const generateWaveformData = async () => {\n    // ... (остается без изменений)\n  };\n  const drawWaveform = () => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = width / waveformData.current.length * zoomLevel;\n    const visibleBars = Math.floor(width / barWidth);\n    const startIndex = Math.floor(currentTime / duration * (waveformData.current.length - visibleBars));\n    ctx.fillStyle = '#D1D6DA';\n    ctx.strokeStyle = '#D1D6DA';\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x + barWidth / 2, height / 2 + padding);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n\n    // Draw progress\n    const progressWidth = currentTime / duration * width;\n    ctx.fillStyle = '#1976D2';\n    ctx.strokeStyle = '#1976D2';\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n      ctx.beginPath();\n      ctx.moveTo(x + barWidth / 2, height / 2 + padding);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n    ctx.restore();\n  };\n  const handleCanvasClick = e => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = x / rect.width;\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n  const zoomIn = () => {\n    setZoomLevel(prevZoom => Math.min(prevZoom * 2, 32));\n  };\n  const zoomOut = () => {\n    setZoomLevel(prevZoom => Math.max(prevZoom / 2, 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpand,\n      children: isExpanded ? 'Collapse' : 'Expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onClick: handleCanvasClick,\n      style: {\n        width: '100%',\n        height: isExpanded ? '300px' : '80px',\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [formatTime(currentTime), \" / \", formatTime(duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Zoom: \", zoomLevel, \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomAudioZoom, \"YnFW0YTTqiIE9xs9zZo0hg07iYA=\");\n_c = CustomAudioZoom;\nexport default CustomAudioZoom;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioZoom\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","CustomAudioZoom","audioUrl","_s","isPlaying","setIsPlaying","isExpanded","setIsExpanded","currentTime","setCurrentTime","duration","setDuration","zoomLevel","setZoomLevel","audioRef","canvasRef","waveformData","current","addEventListener","generateWaveformData","drawWaveform","togglePlay","_audioRef$current","paused","play","_audioRef$current2","pause","toggleExpand","formatTime","time","minutes","Math","floor","seconds","toString","padStart","length","canvas","ctx","getContext","dpr","window","devicePixelRatio","padding","width","offsetWidth","height","scale","clearRect","barWidth","visibleBars","startIndex","fillStyle","strokeStyle","i","dataIndex","x","barHeight","beginPath","moveTo","lineTo","stroke","progressWidth","save","rect","clip","restore","handleCanvasClick","e","getBoundingClientRect","clientX","left","clickProgress","zoomIn","prevZoom","min","zoomOut","max","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","style","cursor","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Friday/CustomAudioZoom.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface AudioPlayerProps {\n  audioUrl: string;\n}\n\nconst CustomAudioZoom: React.FC<AudioPlayerProps> = ({ audioUrl }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const waveformData = useRef<number[]>([]);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setDuration(audioRef.current!.duration);\n        generateWaveformData();\n      });\n\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current!.currentTime);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    drawWaveform();\n  }, [isExpanded, currentTime, zoomLevel]);\n\n  const togglePlay = () => {\n    if (audioRef.current?.paused) {\n      audioRef.current.play();\n    } else {\n      audioRef.current?.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n    setZoomLevel(1); // Reset zoom level when collapsing\n  };\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const generateWaveformData = async () => {\n    // ... (остается без изменений)\n  };\n\n  const drawWaveform = () => {\n    if (!canvasRef.current || waveformData.current.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d')!;\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (isExpanded ? 300 : 80) * dpr;\n\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr;\n    const barWidth = (width / waveformData.current.length) * zoomLevel;\n    const visibleBars = Math.floor(width / barWidth);\n    const startIndex = Math.floor((currentTime / duration) * (waveformData.current.length - visibleBars));\n\n    ctx.fillStyle = '#D1D6DA';\n    ctx.strokeStyle = '#D1D6DA';\n\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n\n      ctx.beginPath();\n      ctx.moveTo(x + barWidth / 2, height / 2 + padding);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n\n    // Draw progress\n    const progressWidth = (currentTime / duration) * width;\n    ctx.fillStyle = '#1976D2';\n    ctx.strokeStyle = '#1976D2';\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(0, 0, progressWidth, height);\n    ctx.clip();\n\n    for (let i = 0; i < visibleBars; i++) {\n      const dataIndex = startIndex + i;\n      if (dataIndex >= waveformData.current.length) break;\n\n      const x = i * barWidth;\n      const barHeight = waveformData.current[dataIndex] * (height - padding * 2);\n\n      ctx.beginPath();\n      ctx.moveTo(x + barWidth / 2, height / 2 + padding);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding - barHeight / 2);\n      ctx.lineTo(x + barWidth / 2, height / 2 + padding + barHeight / 2);\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  };\n\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !audioRef.current) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const clickProgress = x / rect.width;\n\n    audioRef.current.currentTime = clickProgress * duration;\n    setCurrentTime(clickProgress * duration);\n  };\n\n  const zoomIn = () => {\n    setZoomLevel(prevZoom => Math.min(prevZoom * 2, 32));\n  };\n\n  const zoomOut = () => {\n    setZoomLevel(prevZoom => Math.max(prevZoom / 2, 1));\n  };\n\n  return (\n    <div className=\"audio-player\">\n      <button onClick={togglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n      <button onClick={toggleExpand}>\n        {isExpanded ? 'Collapse' : 'Expand'}\n      </button>\n      <audio ref={audioRef} src={audioUrl} />\n      <canvas \n        ref={canvasRef} \n        onClick={handleCanvasClick}\n        style={{ \n          width: '100%', \n          height: isExpanded ? '300px' : '80px',\n          cursor: 'pointer'\n        }} \n      />\n      <div>\n        {formatTime(currentTime)} / {formatTime(duration)}\n      </div>\n      {isExpanded && (\n        <div>\n          <button onClick={zoomIn}>Zoom In</button>\n          <button onClick={zoomOut}>Zoom Out</button>\n          <span>Zoom: {zoomLevel}x</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomAudioZoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}