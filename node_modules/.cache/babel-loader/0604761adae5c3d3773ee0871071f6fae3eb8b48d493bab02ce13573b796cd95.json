{"ast":null,"code":"var _jsxFileName = \"/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\n\n//material\nimport { IconButton } from '@material-ui/core';\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = time => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\nconst ZoomTest3 = ({\n  audioUrl,\n  words\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const audioRef = useRef(null);\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState([]);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isReady, setIsReady] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const scaledWords = useMemo(() => {\n    return words.map(word => {\n      var _audioData$;\n      return {\n        ...word,\n        //тут можно попробовать добавить зависимость от каналов\n        scaledStart: word.start / audioDuration * (((_audioData$ = audioData[0]) === null || _audioData$ === void 0 ? void 0 : _audioData$.length) || 0)\n      };\n    });\n  }, [words, audioData, audioDuration]);\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr / 2; // Разделение высоты на два канала\n\n    ctx.clearRect(0, 0, width, height * 2);\n    ctx.beginPath();\n    console.log(audioData.length);\n    if (audioData.length > 1) {\n      audioData.forEach((channel, index) => {\n        const y_offset = index * height;\n        const samplesPerPixel = channel.length / zoom / width;\n        const startSample = Math.floor(scrollPosition * samplesPerPixel);\n        const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), channel.length);\n        for (let i = startSample; i < endSample; i++) {\n          const x = (i - startSample) / samplesPerPixel;\n          const y = y_offset + (1 - channel[i]) * height / 2;\n          if (i === startSample) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }\n        }\n        ctx.strokeStyle = index === 1 ? '#e1b7dd' : '#b7e1dd'; // Цвета для разных каналов\n        ctx.fillStyle = index === 1 ? '#e1b7dd' : '#b7e1dd';\n        ctx.stroke();\n\n        // Draw words\n        scaledWords.forEach(word => {\n          const x = (word.scaledStart - startSample) / samplesPerPixel;\n          if (x >= 0 && x <= width) {\n            ctx.beginPath();\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, height);\n            ctx.strokeStyle = word.color;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n            ctx.fillStyle = word.color;\n            ctx.font = '12px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText(word.word, x, 15);\n          }\n        });\n      });\n    } else {\n      audioData.forEach((channel, index) => {\n        const y_offset = index * height;\n        const samplesPerPixel = audioData.length / zoom / width;\n        const startSample = Math.floor(scrollPosition * samplesPerPixel);\n        const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n        for (let i = startSample; i < endSample; i++) {\n          const x = (i - startSample) / samplesPerPixel;\n          const y = y_offset + channel[i] * height / 2;\n          if (i === startSample) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }\n        }\n        ctx.strokeStyle = '#b7e1dd';\n        ctx.stroke();\n\n        // Draw words\n        scaledWords.forEach(word => {\n          const x = (word.scaledStart - startSample) / samplesPerPixel;\n          if (x >= 0 && x <= width) {\n            // Draw vertical line\n            ctx.beginPath();\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, height);\n            ctx.strokeStyle = word.color;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n\n            // Draw word label\n            ctx.fillStyle = word.color;\n            ctx.font = '12px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText(word.word, x, 15);\n          }\n        });\n      });\n    }\n  }, [audioData, zoom, scrollPosition, scaledWords]);\n  const togglePlay = () => {\n    var _audioRef$current;\n    if ((_audioRef$current = audioRef.current) !== null && _audioRef$current !== void 0 && _audioRef$current.paused && isReady) {\n      audioRef.current.play();\n    } else {\n      var _audioRef$current2;\n      (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      console.log(audioBuffer);\n      // Получение данных для каждого канала\n      if (audioBuffer.numberOfChannels > 1) {\n        const channelDataLeft = audioBuffer.getChannelData(0);\n        const channelDataRight = audioBuffer.getChannelData(1);\n        setAudioData([Array.from(channelDataLeft), Array.from(channelDataRight)]);\n        setAudioDuration(audioBuffer.duration);\n      } else {\n        const channelDataLeft = audioBuffer.getChannelData(0);\n        setAudioData([Array.from(channelDataLeft)]);\n        setAudioDuration(audioBuffer.duration);\n      }\n    };\n    fetchAudio();\n  }, [audioUrl]);\n  useEffect(() => {\n    var _canvas$parentElement;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = ((_canvas$parentElement = canvas.parentElement) === null || _canvas$parentElement === void 0 ? void 0 : _canvas$parentElement.clientWidth) || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n    drawWaveform();\n  }, [drawWaveform]);\n  const handleZoom = direction => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + width * (audioData.length / zoom) / width / 2;\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - width * (audioData.length / newZoom) / width / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n  const handleScroll = e => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setIsReady(true);\n        setAudioDuration(audioRef.current.duration);\n      });\n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current.currentTime);\n      });\n      return () => {\n        var _audioRef$current3, _audioRef$current4;\n        (_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.removeEventListener('loadedmetadata', () => {});\n        (_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.removeEventListener('timeupdate', () => {});\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '2000px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        size: \"medium\",\n        onClick: togglePlay,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(PauseCircleFilledIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('out'),\n        disabled: zoom === 1,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('in'),\n        disabled: zoom === 64,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          width: '100px',\n          justifyContent: 'center'\n        },\n        children: [formatTime(currentTime), \" / \", formatTime(audioDuration)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), zoom > 1 && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: canvasRef.current ? canvasRef.current.width / window.devicePixelRatio * (zoom - 1) : 0,\n      value: scrollPosition,\n      onChange: handleScroll,\n      style: {\n        width: '2000px',\n        margin: '10px auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(ZoomTest3, \"K+ao38aj3nriMPWxYSuR7uuDf1E=\");\n_c = ZoomTest3;\nexport default ZoomTest3;\nvar _c;\n$RefreshReg$(_c, \"ZoomTest3\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useMemo","IconButton","PlayCircleFilledIcon","PauseCircleFilledIcon","jsxDEV","_jsxDEV","formatTime","time","minutes","Math","floor","seconds","toString","padStart","ZoomTest3","audioUrl","words","_s","canvasRef","audioRef","zoom","setZoom","scrollPosition","setScrollPosition","audioData","setAudioData","audioDuration","setAudioDuration","currentTime","setCurrentTime","isReady","setIsReady","isPlaying","setIsPlaying","scaledWords","map","word","_audioData$","scaledStart","start","length","drawWaveform","canvas","current","ctx","getContext","dpr","window","devicePixelRatio","width","height","clearRect","beginPath","console","log","forEach","channel","index","y_offset","samplesPerPixel","startSample","endSample","min","ceil","i","x","y","moveTo","lineTo","strokeStyle","fillStyle","stroke","color","lineWidth","font","textAlign","fillText","togglePlay","_audioRef$current","paused","play","_audioRef$current2","pause","fetchAudio","response","fetch","arrayBuffer","audioContext","AudioContext","webkitAudioContext","audioBuffer","decodeAudioData","numberOfChannels","channelDataLeft","getChannelData","channelDataRight","Array","from","duration","_canvas$parentElement","parentWidth","parentElement","clientWidth","canvasWidth","style","handleZoom","direction","centerSample","prevZoom","newZoom","max","newScrollPosition","handleScroll","e","parseFloat","target","value","addEventListener","_audioRef$current3","_audioRef$current4","removeEventListener","children","margin","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","src","size","onClick","fontSize","disabled","display","alignItems","justifyContent","type","onChange","_c","$RefreshReg$"],"sources":["/home/gleb/my_app_test/src/Custom/Wednesday/ZoomTest4.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\n\n//material\nimport { IconButton } from '@material-ui/core';\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\n\n\n\ninterface Word {\n  word: string;\n  color: string;\n  start: number;\n}\n\ninterface WaveformProps {\n  audioUrl: string;\n  words: Word[];\n}\n\nconst formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\nconst ZoomTest3: React.FC<WaveformProps> = ({ audioUrl, words }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  const [zoom, setZoom] = useState(1);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [audioData, setAudioData] = useState<any[]>([]);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isReady, setIsReady] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const scaledWords = useMemo(() => {\n    return words.map(word => ({\n      ...word,\n      //тут можно попробовать добавить зависимость от каналов\n      scaledStart: (word.start / audioDuration) * (audioData[0]?.length || 0),\n    }));\n  }, [words, audioData, audioDuration]);\n\n  const drawWaveform = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n  \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n  \n    const dpr = window.devicePixelRatio || 1;\n    const width = canvas.width / dpr;\n    const height = canvas.height / dpr / 2;  // Разделение высоты на два канала\n  \n    ctx.clearRect(0, 0, width, height * 2);\n    ctx.beginPath();\n\n    console.log(audioData.length )\n\n    if (audioData.length > 1) {\n    audioData.forEach((channel, index) => {\n      const y_offset = index * height;\n      const samplesPerPixel = (channel.length / zoom) / width;\n      const startSample = Math.floor(scrollPosition * samplesPerPixel);\n      const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), channel.length);\n  \n      for (let i = startSample; i < endSample; i++) {\n        const x = (i - startSample) / samplesPerPixel;\n        const y = y_offset + (1 - channel[i]) * height / 2;\n        if (i === startSample) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      }\n  \n      ctx.strokeStyle = index === 1 ?  '#e1b7dd': '#b7e1dd';  // Цвета для разных каналов\n      ctx.fillStyle = index === 1 ?   '#e1b7dd' : '#b7e1dd';\n      ctx.stroke();\n      \n        // Draw words\n      scaledWords.forEach(word => {\n        const x = (word.scaledStart - startSample) / samplesPerPixel;\n        if (x >= 0 && x <= width) {\n          ctx.beginPath();\n          ctx.moveTo(x, 0);\n          ctx.lineTo(x, height);\n          ctx.strokeStyle = word.color;\n          ctx.lineWidth = 1;\n          ctx.stroke();\n\n          ctx.fillStyle = word.color;\n          ctx.font = '12px Arial';\n          ctx.textAlign = 'center';\n          ctx.fillText(word.word, x, 15);\n        }\n      });\n    });\n  } else { \n    audioData.forEach((channel, index) => {\n      const y_offset = index * height;\n    const samplesPerPixel = (audioData.length / zoom) / width;\n    const startSample = Math.floor(scrollPosition * samplesPerPixel);\n    const endSample = Math.min(startSample + Math.ceil(width * samplesPerPixel), audioData.length);\n\n    for (let i = startSample; i < endSample; i++) {\n      const x = (i - startSample) / samplesPerPixel;\n        const y = y_offset + (channel[i]) * height / 2;\n      if (i === startSample) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n\n    ctx.strokeStyle = '#b7e1dd';\n    ctx.stroke();\n\n    // Draw words\n    scaledWords.forEach(word => {\n      const x = (word.scaledStart - startSample) / samplesPerPixel;\n      if (x >= 0 && x <= width) {\n        // Draw vertical line\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, height);\n        ctx.strokeStyle = word.color;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n\n        // Draw word label\n        ctx.fillStyle = word.color;\n        ctx.font = '12px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(word.word, x, 15);\n      }\n    });\n  }\n  )}\n  }, [audioData, zoom, scrollPosition, scaledWords]);\n\n  const togglePlay = () => {\n    if (audioRef.current?.paused && isReady) {\n      audioRef.current.play();\n    } else {\n      audioRef.current?.pause();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  useEffect(() => {\n    const fetchAudio = async () => {\n      const response = await fetch(audioUrl);\n      const arrayBuffer = await response.arrayBuffer();\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n      console.log(audioBuffer)\n      // Получение данных для каждого канала\n      if (audioBuffer.numberOfChannels > 1) {\n         const channelDataLeft = audioBuffer.getChannelData(0);\n         const channelDataRight = audioBuffer.getChannelData(1);\n      \n         setAudioData([Array.from(channelDataLeft), Array.from(channelDataRight)]);\n         setAudioDuration(audioBuffer.duration);\n      } else {\n        const channelDataLeft = audioBuffer.getChannelData(0);\n     \n        setAudioData([Array.from(channelDataLeft)]);\n        setAudioDuration(audioBuffer.duration);\n      }\n     \n    };\n  \n    fetchAudio();\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const dpr = window.devicePixelRatio || 1;\n    const parentWidth = canvas.parentElement?.clientWidth || 0;\n    const canvasWidth = parentWidth;\n    canvas.width = canvasWidth * dpr;\n    canvas.height = 300 * dpr;\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = '300px';\n\n    drawWaveform();\n  }, [drawWaveform]);\n\n  const handleZoom = (direction: 'in' | 'out') => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const width = canvas.width / (window.devicePixelRatio || 1);\n    const centerSample = scrollPosition + (width * (audioData.length / zoom) / width) / 2;\n\n    setZoom(prevZoom => {\n      const newZoom = direction === 'in' ? Math.min(prevZoom * 2, 64) : Math.max(prevZoom / 2, 1);\n      const newScrollPosition = centerSample - (width * (audioData.length / newZoom) / width) / 2;\n      setScrollPosition(Math.max(0, newScrollPosition));\n      return newZoom;\n    });\n  };\n\n  const handleScroll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setScrollPosition(parseFloat(e.target.value));\n  };\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setIsReady(true);\n        setAudioDuration(audioRef.current!.duration);\n      });\n  \n      audioRef.current.addEventListener('timeupdate', () => {\n        setCurrentTime(audioRef.current!.currentTime);\n      });\n  \n      return () => {\n        audioRef.current?.removeEventListener('loadedmetadata', () => {});\n        audioRef.current?.removeEventListener('timeupdate', () => {});\n      };\n    }\n  }, []);\n\n  return (\n    <div style={{ width: '100%' }}>\n      <div style={{ width: '2000px', margin: '0 auto' }}>\n        <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\n        <audio ref={audioRef} src={audioUrl} />\n      </div>\n      <div>\n      <IconButton\n                color=\"primary\"\n                size=\"medium\"\n                onClick={togglePlay}\n                >\n                {isPlaying ? <PauseCircleFilledIcon fontSize=\"large\" /> : <PlayCircleFilledIcon fontSize=\"large\" />}\n      </IconButton>\n        <button onClick={() => handleZoom('out')} disabled={zoom === 1}>Zoom Out</button>\n        <button onClick={() => handleZoom('in')} disabled={zoom === 64}>Zoom In</button>\n        <div style={{display: 'flex', alignItems: 'center', width: '100px', justifyContent: 'center'}}>\n            {formatTime(currentTime)} / {formatTime(audioDuration)}\n        </div>\n      </div>\n      {zoom > 1 && (\n        <input\n          type=\"range\"\n          min={0}\n          max={canvasRef.current ? (canvasRef.current.width / window.devicePixelRatio) * (zoom - 1) : 0}\n          value={scrollPosition}\n          onChange={handleScroll}\n          style={{ width: '2000px', margin: '10px auto', display: 'block' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ZoomTest3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}